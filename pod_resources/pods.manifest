{
    "apiVersion": "v1",
    "items": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"fluentd\"},\"name\":\"k1test-fluentd\",\"namespace\":\"staging\"},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"AWS_REGION\",\"value\":\"us-east-1\"},{\"name\":\"LOG_GROUP_NAME\",\"value\":\"kubernetes\"},{\"name\":\"FLUENT_UID\",\"value\":\"0\"},{\"name\":\"FLUENTD_OPT\",\"value\":\"-vv\"},{\"name\":\"S3_BUCKET_NAME\",\"value\":\"peopleconnect-staging-logs\"}],\"image\":\"721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:master\",\"imagePullPolicy\":\"Always\",\"name\":\"k1test-fluentd\",\"resources\":{\"limits\":{\"cpu\":\"200m\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"512Mi\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/var/log\",\"name\":\"varlog\"},{\"mountPath\":\"/var/lib/docker/containers\",\"name\":\"varlibdockercontainers\",\"readOnly\":true},{\"mountPath\":\"/fluentd/etc\",\"name\":\"config\"},{\"mountPath\":\"/applogs\",\"name\":\"applogs\",\"readOnly\":true},{\"mountPath\":\"/var/log/applogs\",\"name\":\"varlogapplogs\",\"readOnly\":true},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"staging-fluentd-token-hxmcs\",\"readOnly\":true}]}],\"dnsPolicy\":\"ClusterFirst\",\"initContainers\":[{\"command\":[\"sh\",\"-c\",\"cp /config-volume/* /etc/fluentd/\"],\"image\":\"busybox\",\"imagePullPolicy\":\"Always\",\"name\":\"copy-fluentd-config\",\"resources\":{},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/config-volume\",\"name\":\"config-volume\"},{\"mountPath\":\"/etc/fluentd\",\"name\":\"config\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"staging-fluentd-token-hxmcs\",\"readOnly\":true}]}],\"nodeName\":\"ip-10-122-40-158.ec2.internal\",\"restartPolicy\":\"Always\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{\"runAsUser\":0},\"serviceAccount\":\"staging-fluentd\",\"serviceAccountName\":\"staging-fluentd\",\"terminationGracePeriodSeconds\":30,\"tolerations\":[{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"key\":\"node.kubernetes.io/disk-pressure\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"key\":\"node.kubernetes.io/memory-pressure\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/log\",\"type\":\"\"},\"name\":\"varlog\"},{\"hostPath\":{\"path\":\"/var/lib/docker/containers\",\"type\":\"\"},\"name\":\"varlibdockercontainers\"},{\"hostPath\":{\"path\":\"/applogs\",\"type\":\"\"},\"name\":\"applogs\"},{\"hostPath\":{\"path\":\"/var/log/applogs\",\"type\":\"\"},\"name\":\"varlogapplogs\"},{\"emptyDir\":{},\"name\":\"config\"},{\"configMap\":{\"defaultMode\":420,\"name\":\"k1test-fluentd\"},\"name\":\"config-volume\"},{\"name\":\"staging-fluentd-token-hxmcs\",\"secret\":{\"defaultMode\":420,\"secretName\":\"staging-fluentd-token-hxmcs\"}}]}}\n"
                },
                "creationTimestamp": "2018-11-05T04:45:30Z",
                "labels": {
                    "app": "fluentd"
                },
                "name": "k1test-fluentd",
                "namespace": "staging",
                "resourceVersion": "1754770",
                "selfLink": "/api/v1/namespaces/staging/pods/k1test-fluentd",
                "uid": "9fa4167f-e0b5-11e8-aa6d-12da7ccbe390"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "AWS_REGION",
                                "value": "us-east-1"
                            },
                            {
                                "name": "LOG_GROUP_NAME",
                                "value": "kubernetes"
                            },
                            {
                                "name": "FLUENT_UID",
                                "value": "0"
                            },
                            {
                                "name": "FLUENTD_OPT",
                                "value": "-vv"
                            },
                            {
                                "name": "S3_BUCKET_NAME",
                                "value": "peopleconnect-staging-logs"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:master",
                        "imagePullPolicy": "Always",
                        "name": "k1test-fluentd",
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/log",
                                "name": "varlog"
                            },
                            {
                                "mountPath": "/var/lib/docker/containers",
                                "name": "varlibdockercontainers",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/fluentd/etc",
                                "name": "config"
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/log/applogs",
                                "name": "varlogapplogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-hxmcs",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "cp /config-volume/* /etc/fluentd/"
                        ],
                        "image": "busybox",
                        "imagePullPolicy": "Always",
                        "name": "copy-fluentd-config",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config-volume",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/etc/fluentd",
                                "name": "config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-hxmcs",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "ip-10-122-40-158.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsUser": 0
                },
                "serviceAccount": "staging-fluentd",
                "serviceAccountName": "staging-fluentd",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        },
                        "name": "varlog"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/docker/containers",
                            "type": ""
                        },
                        "name": "varlibdockercontainers"
                    },
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/applogs",
                            "type": ""
                        },
                        "name": "varlogapplogs"
                    },
                    {
                        "emptyDir": {},
                        "name": "config"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "k1test-fluentd"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "staging-fluentd-token-hxmcs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-fluentd-token-hxmcs"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T04:45:42Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T04:45:43Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T04:45:30Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://845e7a35c6fc53fce0d3276d6946253f909b021372a714dac695fd99328a2c99",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:master",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd@sha256:4ddd40ebc8f01798d04bf4a88155bd559be243dd2f28c37a7109ae00ecc96360",
                        "lastState": {},
                        "name": "k1test-fluentd",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-05T04:45:43Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.40.158",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://9660f051db040c23f14ea21ff6530766c64c475370a49a243ae84a1a623f8d16",
                        "image": "busybox:latest",
                        "imageID": "docker-pullable://busybox@sha256:2a03a6059f21e150ae84b0973863609494aad70f0a80eaeb64bddd8d92465812",
                        "lastState": {},
                        "name": "copy-fluentd-config",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://9660f051db040c23f14ea21ff6530766c64c475370a49a243ae84a1a623f8d16",
                                "exitCode": 0,
                                "finishedAt": "2018-11-05T04:45:41Z",
                                "reason": "Completed",
                                "startedAt": "2018-11-05T04:45:41Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "100.96.0.7",
                "qosClass": "Burstable",
                "startTime": "2018-11-05T04:45:30Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-08T23:40:44Z",
                "generateName": "staging-catalog-sync-catalog-sync-6889d4fcb6-",
                "labels": {
                    "app": "staging-catalog-sync-catalog-sync",
                    "pod-template-hash": "2445809762"
                },
                "name": "staging-catalog-sync-catalog-sync-6889d4fcb6-dts42",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-catalog-sync-catalog-sync-6889d4fcb6",
                        "uid": "b5d773b9-e3af-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2605733",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-catalog-sync-catalog-sync-6889d4fcb6-dts42",
                "uid": "b5db5d1f-e3af-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "catalog-sync"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            },
                            {
                                "name": "ENABLE_JMX",
                                "value": "true"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/catalog-sync:0.0.12",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/catalog-sync/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "catalog-sync",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/catalog-sync/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-107-173.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-catalog-sync",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:40:44Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:41:26Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:40:44Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://11c6ee54ecceae3e1b9ac52df0a0205eb5e957413fa9065aad590223a1a4b103",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/catalog-sync:0.0.12",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/catalog-sync@sha256:51074b6deab9ef41f70c6b9f244eac2ab9c801aa9633f8c7e6376a3a2eca1d6d",
                        "lastState": {},
                        "name": "catalog-sync",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T23:40:56Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.107.173",
                "phase": "Running",
                "podIP": "100.96.7.39",
                "qosClass": "Burstable",
                "startTime": "2018-11-08T23:40:44Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-08T23:40:44Z",
                "generateName": "staging-catalog-sync-catalog-sync-6889d4fcb6-",
                "labels": {
                    "app": "staging-catalog-sync-catalog-sync",
                    "pod-template-hash": "2445809762"
                },
                "name": "staging-catalog-sync-catalog-sync-6889d4fcb6-wgkj6",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-catalog-sync-catalog-sync-6889d4fcb6",
                        "uid": "b5d773b9-e3af-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2605747",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-catalog-sync-catalog-sync-6889d4fcb6-wgkj6",
                "uid": "b5eb4df7-e3af-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "catalog-sync"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            },
                            {
                                "name": "ENABLE_JMX",
                                "value": "true"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/catalog-sync:0.0.12",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/catalog-sync/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "catalog-sync",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/catalog-sync/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-82-27.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-catalog-sync",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:40:44Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:41:27Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:40:44Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://8a6cae3d28765f6ccc9c5ecb615a2f1f616a25891b23dd56ab122faf8a660b2f",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/catalog-sync:0.0.12",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/catalog-sync@sha256:51074b6deab9ef41f70c6b9f244eac2ab9c801aa9633f8c7e6376a3a2eca1d6d",
                        "lastState": {},
                        "name": "catalog-sync",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T23:40:56Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.82.27",
                "phase": "Running",
                "podIP": "100.96.15.42",
                "qosClass": "Burstable",
                "startTime": "2018-11-08T23:40:44Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-05T20:12:32Z",
                "generateName": "staging-cdc-postgresql-connector-cdc-postgresql-connector-5cdf5f45bf-",
                "labels": {
                    "app": "cdc-postgresql-connector",
                    "pod-template-hash": "1789190169",
                    "release": "staging-cdc-postgresql-connector"
                },
                "name": "staging-cdc-postgresql-connector-cdc-postgresql-connector-9vvm7",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-cdc-postgresql-connector-cdc-postgresql-connector-5cdf5f45bf",
                        "uid": "20436fa8-dcef-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "1899351",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-cdc-postgresql-connector-cdc-postgresql-connector-9vvm7",
                "uid": "208c3a39-e137-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "BOOTSTRAP_SERVERS",
                                "value": "kafka-broker01.staging.aws.ppcn.us:9092,kafka-broker02.staging.aws.ppcn.us:9092,kafka-broker03.staging.aws.ppcn.us:9092,kafka-broker04.staging.aws.ppcn.us:9092,kafka-broker05.staging.aws.ppcn.us:9092"
                            },
                            {
                                "name": "KEY_CONVERTER",
                                "value": "io.confluent.connect.avro.AvroConverter"
                            },
                            {
                                "name": "VALUE_CONVERTER",
                                "value": "io.confluent.connect.avro.AvroConverter"
                            },
                            {
                                "name": "CONFIG_STORAGE_TOPIC",
                                "value": "cdc-commerce-configs"
                            },
                            {
                                "name": "OFFSET_STORAGE_TOPIC",
                                "value": "cdc-commerce-offsets"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_TOPIC",
                                "value": "cdc-commerce-status"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "GROUP_ID",
                                "value": "cdc-commerce"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-pg-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-pg-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_PLUGIN_PATH",
                                "value": "/kafka/connect,/kafka/libs"
                            }
                        ],
                        "image": "debezium/connect:0.8",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "cdc-postgresql-connector",
                        "ports": [
                            {
                                "containerPort": 8083,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-52-0.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T20:12:32Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T20:13:03Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T20:12:32Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://9f435b15e3d2c66673c83c485c6ef2978ac51543d0c340aa802fe786c10102cb",
                        "image": "debezium/connect:0.8",
                        "imageID": "docker-pullable://debezium/connect@sha256:f97b7f50cf2c5e58a1c7fb9e95d078d781dd74821e33f967001bfab58abeb4e3",
                        "lastState": {},
                        "name": "cdc-postgresql-connector",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-05T20:13:02Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.52.0",
                "phase": "Running",
                "podIP": "100.96.10.25",
                "qosClass": "BestEffort",
                "startTime": "2018-11-05T20:12:32Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-10-31T12:53:09Z",
                "generateName": "staging-cdc-postgresql-connector-cdc-postgresql-connector-5cdf5f45bf-",
                "labels": {
                    "app": "cdc-postgresql-connector",
                    "pod-template-hash": "1789190169",
                    "release": "staging-cdc-postgresql-connector"
                },
                "name": "staging-cdc-postgresql-connector-cdc-postgresql-connector-xxskr",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-cdc-postgresql-connector-cdc-postgresql-connector-5cdf5f45bf",
                        "uid": "20436fa8-dcef-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "709323",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-cdc-postgresql-connector-cdc-postgresql-connector-xxskr",
                "uid": "eb4f4cca-dd0b-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "BOOTSTRAP_SERVERS",
                                "value": "kafka-broker01.staging.aws.ppcn.us:9092,kafka-broker02.staging.aws.ppcn.us:9092,kafka-broker03.staging.aws.ppcn.us:9092,kafka-broker04.staging.aws.ppcn.us:9092,kafka-broker05.staging.aws.ppcn.us:9092"
                            },
                            {
                                "name": "KEY_CONVERTER",
                                "value": "io.confluent.connect.avro.AvroConverter"
                            },
                            {
                                "name": "VALUE_CONVERTER",
                                "value": "io.confluent.connect.avro.AvroConverter"
                            },
                            {
                                "name": "CONFIG_STORAGE_TOPIC",
                                "value": "cdc-commerce-configs"
                            },
                            {
                                "name": "OFFSET_STORAGE_TOPIC",
                                "value": "cdc-commerce-offsets"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_TOPIC",
                                "value": "cdc-commerce-status"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "GROUP_ID",
                                "value": "cdc-commerce"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-pg-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-pg-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_PLUGIN_PATH",
                                "value": "/kafka/connect,/kafka/libs"
                            }
                        ],
                        "image": "debezium/connect:0.8",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "cdc-postgresql-connector",
                        "ports": [
                            {
                                "containerPort": 8083,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-107-173.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T12:53:09Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T12:53:21Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T12:53:09Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://73c1d8cc02f2900d0ba741dd67f16c50381344f3de30556e7f04f3b906ba1d63",
                        "image": "debezium/connect:0.8",
                        "imageID": "docker-pullable://debezium/connect@sha256:87f0474fd4193c66d5a5ce873f96ed673f66d530f0729528600a260ae3884931",
                        "lastState": {},
                        "name": "cdc-postgresql-connector",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-31T12:53:20Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.107.173",
                "phase": "Running",
                "podIP": "100.96.7.24",
                "qosClass": "BestEffort",
                "startTime": "2018-10-31T12:53:09Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "ad.datadoghq.com/commerce-accountservice.check_names": "[\"http_check\"]",
                    "ad.datadoghq.com/commerce-accountservice.init_configs": "[{}]",
                    "ad.datadoghq.com/commerce-accountservice.instances": "[{\"name\": \"commerce-accountservice\", \"url\":\"http://%%host%%:8080/commerce-accountservice/healthcheck\"}]"
                },
                "creationTimestamp": "2018-11-08T22:49:59Z",
                "generateName": "staging-commerce-accountservice-commerce-accountservice-84d57f9d5f-",
                "labels": {
                    "app": "staging-commerce-accountservice-commerce-accountservice",
                    "pod-template-hash": "4081395819"
                },
                "name": "staging-commerce-accountservice-commerce-accountservice-848t4wl",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-commerce-accountservice-commerce-accountservice-84d57f9d5f",
                        "uid": "9ef46892-e3a8-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2597615",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-commerce-accountservice-commerce-accountservice-848t4wl",
                "uid": "9f042457-e3a8-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "commerce-accountservice"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            },
                            {
                                "name": "ROOT_LOG_LEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "ENABLE_JMX",
                                "value": "true"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-accountservice:0.28.35",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/commerce-accountservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "commerce-accountservice",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/commerce-accountservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-104-107.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-accountservice",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T22:49:59Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T22:50:49Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T22:49:59Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://8ae6f9a99d2ba4180ac79596424fff7fcde80b320003286600b1f7e00130993b",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-accountservice:0.28.35",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-accountservice@sha256:877eed06f8c20703b12dcc4f7816de90e5d726bfbaa073b069731e45ba79b5a5",
                        "lastState": {},
                        "name": "commerce-accountservice",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T22:50:12Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.104.107",
                "phase": "Running",
                "podIP": "100.96.4.27",
                "qosClass": "Burstable",
                "startTime": "2018-11-08T22:49:59Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "ad.datadoghq.com/commerce-accountservice.check_names": "[\"http_check\"]",
                    "ad.datadoghq.com/commerce-accountservice.init_configs": "[{}]",
                    "ad.datadoghq.com/commerce-accountservice.instances": "[{\"name\": \"commerce-accountservice\", \"url\":\"http://%%host%%:8080/commerce-accountservice/healthcheck\"}]"
                },
                "creationTimestamp": "2018-11-08T22:49:59Z",
                "generateName": "staging-commerce-accountservice-commerce-accountservice-84d57f9d5f-",
                "labels": {
                    "app": "staging-commerce-accountservice-commerce-accountservice",
                    "pod-template-hash": "4081395819"
                },
                "name": "staging-commerce-accountservice-commerce-accountservice-84m9ch5",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-commerce-accountservice-commerce-accountservice-84d57f9d5f",
                        "uid": "9ef46892-e3a8-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2597593",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-commerce-accountservice-commerce-accountservice-84m9ch5",
                "uid": "9ef8695a-e3a8-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "commerce-accountservice"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            },
                            {
                                "name": "ROOT_LOG_LEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "ENABLE_JMX",
                                "value": "true"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-accountservice:0.28.35",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/commerce-accountservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "commerce-accountservice",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/commerce-accountservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-82-27.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-accountservice",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T22:49:59Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T22:50:43Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T22:49:59Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://34ed7a8e530b9d67383944ce3433bd200d56e345b60eb743cbcfb88772adac21",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-accountservice:0.28.35",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-accountservice@sha256:877eed06f8c20703b12dcc4f7816de90e5d726bfbaa073b069731e45ba79b5a5",
                        "lastState": {},
                        "name": "commerce-accountservice",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T22:50:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.82.27",
                "phase": "Running",
                "podIP": "100.96.15.40",
                "qosClass": "Burstable",
                "startTime": "2018-11-08T22:49:59Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "ad.datadoghq.com/commerce-authorizationservice.check_names": "[\"http_check\"]",
                    "ad.datadoghq.com/commerce-authorizationservice.init_configs": "[{}]",
                    "ad.datadoghq.com/commerce-authorizationservice.instances": "[{\"name\": \"commerce-authorizationservice\", \"url\":\"http://%%host%%:8080/commerce-authorizationservice/healthcheck\"}]"
                },
                "creationTimestamp": "2018-11-08T23:22:48Z",
                "generateName": "staging-commerce-authorizationservice-commerce-authorizationser-75686cd9d6-",
                "labels": {
                    "app": "staging-commerce-authorizationservice-commerce-authorizationser",
                    "pod-template-hash": "3124278582"
                },
                "name": "staging-commerce-authorizationservice-commerce-authorizatijxjlv",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-commerce-authorizationservice-commerce-authorizationser-75686cd9d6",
                        "uid": "34b45ea8-e3ad-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2603043",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-commerce-authorizationservice-commerce-authorizatijxjlv",
                "uid": "34b846c4-e3ad-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "commerce-authorizationservice"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            },
                            {
                                "name": "ROOT_LOG_LEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "ENABLE_JMX",
                                "value": "true"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-authorizationservice:0.27.12",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/commerce-authorizationservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "commerce-authorizationservice",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/commerce-authorizationservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-52-16.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-authorizationservice",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:22:48Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:23:39Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:22:48Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://d7f3ff4c4f6a6f5a59049ae19e0411724ac1ec378f5aa0024f9188e883512a30",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-authorizationservice:0.27.12",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-authorizationservice@sha256:8977bbee0521329ab28e1cb28ad37a2c475b1e2fcc4d2001f1c44ca3013ba828",
                        "lastState": {},
                        "name": "commerce-authorizationservice",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T23:23:01Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.52.16",
                "phase": "Running",
                "podIP": "100.96.16.17",
                "qosClass": "Burstable",
                "startTime": "2018-11-08T23:22:48Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "ad.datadoghq.com/commerce-authorizationservice.check_names": "[\"http_check\"]",
                    "ad.datadoghq.com/commerce-authorizationservice.init_configs": "[{}]",
                    "ad.datadoghq.com/commerce-authorizationservice.instances": "[{\"name\": \"commerce-authorizationservice\", \"url\":\"http://%%host%%:8080/commerce-authorizationservice/healthcheck\"}]"
                },
                "creationTimestamp": "2018-11-08T23:22:48Z",
                "generateName": "staging-commerce-authorizationservice-commerce-authorizationser-75686cd9d6-",
                "labels": {
                    "app": "staging-commerce-authorizationservice-commerce-authorizationser",
                    "pod-template-hash": "3124278582"
                },
                "name": "staging-commerce-authorizationservice-commerce-authorizatip57z8",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-commerce-authorizationservice-commerce-authorizationser-75686cd9d6",
                        "uid": "34b45ea8-e3ad-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2603023",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-commerce-authorizationservice-commerce-authorizatip57z8",
                "uid": "34c5dacb-e3ad-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "commerce-authorizationservice"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            },
                            {
                                "name": "ROOT_LOG_LEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "ENABLE_JMX",
                                "value": "true"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-authorizationservice:0.27.12",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/commerce-authorizationservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "commerce-authorizationservice",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/commerce-authorizationservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-77-93.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-authorizationservice",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:22:48Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:23:36Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:22:48Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://26f80e9fbef58d2fd81982d2e279f54f1bca30beba8ae50d94c6482d43c03c4d",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-authorizationservice:0.27.12",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-authorizationservice@sha256:8977bbee0521329ab28e1cb28ad37a2c475b1e2fcc4d2001f1c44ca3013ba828",
                        "lastState": {},
                        "name": "commerce-authorizationservice",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T23:23:06Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.77.93",
                "phase": "Running",
                "podIP": "100.96.18.19",
                "qosClass": "Burstable",
                "startTime": "2018-11-08T23:22:48Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "ad.datadoghq.com/commerce-catalogservice.check_names": "[\"http_check\"]",
                    "ad.datadoghq.com/commerce-catalogservice.init_configs": "[{}]",
                    "ad.datadoghq.com/commerce-catalogservice.instances": "[{\"name\": \"commerce-catalogservice\", \"url\":\"http://%%host%%:8080/commerce-catalogservice/healthcheck\"}]"
                },
                "creationTimestamp": "2018-11-08T23:21:50Z",
                "generateName": "staging-commerce-catalogservice-commerce-catalogservice-7b4c54fc6c-",
                "labels": {
                    "app": "staging-commerce-catalogservice-commerce-catalogservice",
                    "pod-template-hash": "3607109727"
                },
                "name": "staging-commerce-catalogservice-commerce-catalogservice-7b9cr4c",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-commerce-catalogservice-commerce-catalogservice-7b4c54fc6c",
                        "uid": "11bb6284-e3ad-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2602770",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-commerce-catalogservice-commerce-catalogservice-7b9cr4c",
                "uid": "11c9c6ba-e3ad-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "commerce-catalogservice"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            },
                            {
                                "name": "ROOT_LOG_LEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "ENABLE_JMX",
                                "value": "true"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-catalogservice:0.29.14",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/commerce-catalogservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "commerce-catalogservice",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/commerce-catalogservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-104-107.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-catalogservice",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:21:50Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:22:23Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:21:50Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5f11381ab13a0569dd7cc3c7b170890c3316a041ebcd5f0cf3dbc051af46675b",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-catalogservice:0.29.14",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-catalogservice@sha256:62264282b4d0170f56e3c2efa5e824aec43ab47bbf8d78341bf2c2fbb8d99654",
                        "lastState": {},
                        "name": "commerce-catalogservice",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T23:21:53Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.104.107",
                "phase": "Running",
                "podIP": "100.96.4.29",
                "qosClass": "Burstable",
                "startTime": "2018-11-08T23:21:50Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "ad.datadoghq.com/commerce-catalogservice.check_names": "[\"http_check\"]",
                    "ad.datadoghq.com/commerce-catalogservice.init_configs": "[{}]",
                    "ad.datadoghq.com/commerce-catalogservice.instances": "[{\"name\": \"commerce-catalogservice\", \"url\":\"http://%%host%%:8080/commerce-catalogservice/healthcheck\"}]"
                },
                "creationTimestamp": "2018-11-08T23:21:50Z",
                "generateName": "staging-commerce-catalogservice-commerce-catalogservice-7b4c54fc6c-",
                "labels": {
                    "app": "staging-commerce-catalogservice-commerce-catalogservice",
                    "pod-template-hash": "3607109727"
                },
                "name": "staging-commerce-catalogservice-commerce-catalogservice-7bnfc87",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-commerce-catalogservice-commerce-catalogservice-7b4c54fc6c",
                        "uid": "11bb6284-e3ad-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2602819",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-commerce-catalogservice-commerce-catalogservice-7bnfc87",
                "uid": "11bece0b-e3ad-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "commerce-catalogservice"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            },
                            {
                                "name": "ROOT_LOG_LEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "ENABLE_JMX",
                                "value": "true"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-catalogservice:0.29.14",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/commerce-catalogservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "commerce-catalogservice",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/commerce-catalogservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-107-159.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-catalogservice",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:21:50Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:22:33Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:21:50Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://69ce5c679aadf53b1a4b70c2d68a5c09c2242a064833b0302bbd973b36207e61",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-catalogservice:0.29.14",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-catalogservice@sha256:62264282b4d0170f56e3c2efa5e824aec43ab47bbf8d78341bf2c2fbb8d99654",
                        "lastState": {},
                        "name": "commerce-catalogservice",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T23:22:02Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.107.159",
                "phase": "Running",
                "podIP": "100.96.20.17",
                "qosClass": "Burstable",
                "startTime": "2018-11-08T23:21:50Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-12T17:47:03Z",
                "generateName": "staging-commerce-email-commerce-email-56fcff4cc9-",
                "labels": {
                    "app": "staging-commerce-email-commerce-email",
                    "pod-template-hash": "1297990775"
                },
                "name": "staging-commerce-email-commerce-email-56fcff4cc9-fskmc",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-commerce-email-commerce-email-56fcff4cc9",
                        "uid": "f68a9842-e6a2-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "3445863",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-commerce-email-commerce-email-56fcff4cc9-fskmc",
                "uid": "f69feda7-e6a2-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "commerce-email"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/email/commerce-email:4af52f617ca6ec293da63aed47320dd2a7d7858b",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/commerce-email/ping",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "commerce-email",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/commerce-email/ping",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "2Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "1Gi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-52-16.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "email-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "email-commerce-email",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-12T17:47:03Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-12T17:47:47Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-12T17:47:03Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://c3bc7f0ae533642c9d28fbfc578f4a7d420e5fba09f7d94abfacc299c004b13a",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/email/commerce-email:4af52f617ca6ec293da63aed47320dd2a7d7858b",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/email/commerce-email@sha256:6d33553962b58fff996a2460f04da45a3e75b3290ea0d1d03a6b797ba2a96e5e",
                        "lastState": {},
                        "name": "commerce-email",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-12T17:47:19Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.52.16",
                "phase": "Running",
                "podIP": "100.96.16.18",
                "qosClass": "Burstable",
                "startTime": "2018-11-12T17:47:03Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-12T17:47:03Z",
                "generateName": "staging-commerce-email-commerce-email-56fcff4cc9-",
                "labels": {
                    "app": "staging-commerce-email-commerce-email",
                    "pod-template-hash": "1297990775"
                },
                "name": "staging-commerce-email-commerce-email-56fcff4cc9-l5rvx",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-commerce-email-commerce-email-56fcff4cc9",
                        "uid": "f68a9842-e6a2-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "3445854",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-commerce-email-commerce-email-56fcff4cc9-l5rvx",
                "uid": "f68ed7f4-e6a2-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "commerce-email"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/email/commerce-email:4af52f617ca6ec293da63aed47320dd2a7d7858b",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/commerce-email/ping",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "commerce-email",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/commerce-email/ping",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "2Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "1Gi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-87-80.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "email-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "email-commerce-email",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-12T17:47:03Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-12T17:47:46Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-12T17:47:03Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://50406ecf2b06360dec4d47a3587e657c6812b8ab4a734544563f5cd3d5c07535",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/email/commerce-email:4af52f617ca6ec293da63aed47320dd2a7d7858b",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/email/commerce-email@sha256:6d33553962b58fff996a2460f04da45a3e75b3290ea0d1d03a6b797ba2a96e5e",
                        "lastState": {},
                        "name": "commerce-email",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-12T17:47:19Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.87.80",
                "phase": "Running",
                "podIP": "100.96.6.50",
                "qosClass": "Burstable",
                "startTime": "2018-11-12T17:47:03Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "ad.datadoghq.com/commerce-entitlementservice.check_names": "[\"http_check\"]",
                    "ad.datadoghq.com/commerce-entitlementservice.init_configs": "[{}]",
                    "ad.datadoghq.com/commerce-entitlementservice.instances": "[{\"name\": \"commerce-entitlementservice\", \"url\":\"http://%%host%%:8080/commerce-entitlementservice/healthcheck\"}]"
                },
                "creationTimestamp": "2018-11-12T18:00:40Z",
                "generateName": "staging-commerce-entitlementservice-commerce-entitlementservice-66c94cf8f6-",
                "labels": {
                    "app": "staging-commerce-entitlementservice-commerce-entitlementservice",
                    "pod-template-hash": "2275079492"
                },
                "name": "staging-commerce-entitlementservice-commerce-entitlementserkh2r",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-commerce-entitlementservice-commerce-entitlementservice-66c94cf8f6",
                        "uid": "ddef430a-e6a4-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "3448000",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-commerce-entitlementservice-commerce-entitlementserkh2r",
                "uid": "ddf2ff62-e6a4-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "commerce-entitlementservice"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            },
                            {
                                "name": "ROOT_LOG_LEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "ENABLE_JMX",
                                "value": "true"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-entitlementservice:0.33.20",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/commerce-entitlementservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "commerce-entitlementservice",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/commerce-entitlementservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-87-80.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": false
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-entitlementservice",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-12T18:00:40Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-12T18:01:17Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-12T18:00:40Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://37a910700700a81afda776da745c594b89d06ea233a6d17c05fdc6590b105474",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-entitlementservice:0.33.20",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-entitlementservice@sha256:199b07e13efa34dd5d432ee34dc7d0e5268fae1c3687a5fcca80b8b9786c18f0",
                        "lastState": {},
                        "name": "commerce-entitlementservice",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-12T18:00:52Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.87.80",
                "phase": "Running",
                "podIP": "100.96.6.51",
                "qosClass": "Burstable",
                "startTime": "2018-11-12T18:00:40Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "ad.datadoghq.com/commerce-entitlementservice.check_names": "[\"http_check\"]",
                    "ad.datadoghq.com/commerce-entitlementservice.init_configs": "[{}]",
                    "ad.datadoghq.com/commerce-entitlementservice.instances": "[{\"name\": \"commerce-entitlementservice\", \"url\":\"http://%%host%%:8080/commerce-entitlementservice/healthcheck\"}]"
                },
                "creationTimestamp": "2018-11-12T18:00:40Z",
                "generateName": "staging-commerce-entitlementservice-commerce-entitlementservice-66c94cf8f6-",
                "labels": {
                    "app": "staging-commerce-entitlementservice-commerce-entitlementservice",
                    "pod-template-hash": "2275079492"
                },
                "name": "staging-commerce-entitlementservice-commerce-entitlementsex28cr",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-commerce-entitlementservice-commerce-entitlementservice-66c94cf8f6",
                        "uid": "ddef430a-e6a4-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "3448026",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-commerce-entitlementservice-commerce-entitlementsex28cr",
                "uid": "ddff01d7-e6a4-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "commerce-entitlementservice"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            },
                            {
                                "name": "ROOT_LOG_LEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "ENABLE_JMX",
                                "value": "true"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-entitlementservice:0.33.20",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/commerce-entitlementservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "commerce-entitlementservice",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/commerce-entitlementservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-107-159.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": false
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-entitlementservice",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-12T18:00:40Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-12T18:01:23Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-12T18:00:40Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://38746b10b8cdc6512f84b0b1123b5d378f8e52db866ffc181b78a6fb7de1fe09",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-entitlementservice:0.33.20",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-entitlementservice@sha256:199b07e13efa34dd5d432ee34dc7d0e5268fae1c3687a5fcca80b8b9786c18f0",
                        "lastState": {},
                        "name": "commerce-entitlementservice",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-12T18:00:57Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.107.159",
                "phase": "Running",
                "podIP": "100.96.20.18",
                "qosClass": "Burstable",
                "startTime": "2018-11-12T18:00:40Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "ad.datadoghq.com/commerce-messagingretryservice.check_names": "[\"http_check\"]",
                    "ad.datadoghq.com/commerce-messagingretryservice.init_configs": "[{}]",
                    "ad.datadoghq.com/commerce-messagingretryservice.instances": "[{\"name\": \"commerce-messagingretryservice\", \"url\":\"http://%%host%%:8080/commerce-messagingretryservice/healthcheck\"}]"
                },
                "creationTimestamp": "2018-11-07T22:33:08Z",
                "generateName": "staging-commerce-messagingretryservice-commerce-messagingretrys-594756f9fb-",
                "labels": {
                    "app": "staging-commerce-messagingretryservice-commerce-messagingretrys",
                    "pod-template-hash": "1503129596"
                },
                "name": "staging-commerce-messagingretryservice-commerce-messagingrbzjgt",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-commerce-messagingretryservice-commerce-messagingretrys-594756f9fb",
                        "uid": "d8658d67-db0d-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2370875",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-commerce-messagingretryservice-commerce-messagingrbzjgt",
                "uid": "1a1a06a2-e2dd-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "commerce-messagingretryservice"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            },
                            {
                                "name": "ROOT_LOG_LEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "ENABLE_JMX",
                                "value": "true"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-messagingretryservice:master",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/commerce-messagingretryservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "commerce-messagingretryservice",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/commerce-messagingretryservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-52-0.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-messagingretryservice",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-07T22:33:08Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-07T22:33:33Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-07T22:33:08Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://e186f8c9c587877f946d0adf4e4e9078d1749a491ca2b36fd4de3b54ca5af75c",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-messagingretryservice:master",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-messagingretryservice@sha256:21bd3c6a7876303485f3d06bbfabd7167bf5410b6dc3eefb743c5bdf323652fa",
                        "lastState": {},
                        "name": "commerce-messagingretryservice",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-07T22:33:12Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.52.0",
                "phase": "Running",
                "podIP": "100.96.10.33",
                "qosClass": "Burstable",
                "startTime": "2018-11-07T22:33:08Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "ad.datadoghq.com/commerce-messagingretryservice.check_names": "[\"http_check\"]",
                    "ad.datadoghq.com/commerce-messagingretryservice.init_configs": "[{}]",
                    "ad.datadoghq.com/commerce-messagingretryservice.instances": "[{\"name\": \"commerce-messagingretryservice\", \"url\":\"http://%%host%%:8080/commerce-messagingretryservice/healthcheck\"}]"
                },
                "creationTimestamp": "2018-11-07T22:33:09Z",
                "generateName": "staging-commerce-messagingretryservice-commerce-messagingretrys-594756f9fb-",
                "labels": {
                    "app": "staging-commerce-messagingretryservice-commerce-messagingretrys",
                    "pod-template-hash": "1503129596"
                },
                "name": "staging-commerce-messagingretryservice-commerce-messagingrvpfl2",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-commerce-messagingretryservice-commerce-messagingretrys-594756f9fb",
                        "uid": "d8658d67-db0d-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2371030",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-commerce-messagingretryservice-commerce-messagingrvpfl2",
                "uid": "1a5c723f-e2dd-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "commerce-messagingretryservice"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            },
                            {
                                "name": "ROOT_LOG_LEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "ENABLE_JMX",
                                "value": "true"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-messagingretryservice:master",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/commerce-messagingretryservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "commerce-messagingretryservice",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/commerce-messagingretryservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-99-218.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-messagingretryservice",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-07T22:33:16Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-07T22:34:04Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-07T22:33:16Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://41fd45abf0e7fc063d5b57787e9cda2e7b1782b8a9afff17c79b40737295d362",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-messagingretryservice:master",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-messagingretryservice@sha256:21bd3c6a7876303485f3d06bbfabd7167bf5410b6dc3eefb743c5bdf323652fa",
                        "lastState": {},
                        "name": "commerce-messagingretryservice",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-07T22:33:29Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.99.218",
                "phase": "Running",
                "podIP": "100.96.19.19",
                "qosClass": "Burstable",
                "startTime": "2018-11-07T22:33:16Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "ad.datadoghq.com/commerce-orderservice.check_names": "[\"http_check\"]",
                    "ad.datadoghq.com/commerce-orderservice.init_configs": "[{}]",
                    "ad.datadoghq.com/commerce-orderservice.instances": "[{\"name\": \"commerce-orderservice\", \"url\":\"http://%%host%%:8080/commerce-orderservice/healthcheck\"}]"
                },
                "creationTimestamp": "2018-11-08T23:15:26Z",
                "generateName": "staging-commerce-orderservice-commerce-orderservice-7748d7b7c9-",
                "labels": {
                    "app": "staging-commerce-orderservice-commerce-orderservice",
                    "pod-template-hash": "3304836375"
                },
                "name": "staging-commerce-orderservice-commerce-orderservice-7748d78zg5v",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-commerce-orderservice-commerce-orderservice-7748d7b7c9",
                        "uid": "604a105f-e3ab-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2601764",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-commerce-orderservice-commerce-orderservice-7748d78zg5v",
                "uid": "2ce32f76-e3ac-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "commerce-orderservice"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            },
                            {
                                "name": "ROOT_LOG_LEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "ENABLE_JMX",
                                "value": "true"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-orderservice:0.28.21",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/commerce-orderservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "commerce-orderservice",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/commerce-orderservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-99-218.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-orderservice",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:15:26Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:16:16Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:15:26Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://0d300a462e0dac7c832d4092b92bfd14696c8203a38f046f378cb5badebc8427",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-orderservice:0.28.21",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-orderservice@sha256:26f8850a6c8d9ee6aba02fcc7d786141d18a49aa33162624da1f04d5138f8b3a",
                        "lastState": {},
                        "name": "commerce-orderservice",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T23:15:38Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.99.218",
                "phase": "Running",
                "podIP": "100.96.19.20",
                "qosClass": "Burstable",
                "startTime": "2018-11-08T23:15:26Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "ad.datadoghq.com/commerce-orderservice.check_names": "[\"http_check\"]",
                    "ad.datadoghq.com/commerce-orderservice.init_configs": "[{}]",
                    "ad.datadoghq.com/commerce-orderservice.instances": "[{\"name\": \"commerce-orderservice\", \"url\":\"http://%%host%%:8080/commerce-orderservice/healthcheck\"}]"
                },
                "creationTimestamp": "2018-11-08T23:09:42Z",
                "generateName": "staging-commerce-orderservice-commerce-orderservice-7748d7b7c9-",
                "labels": {
                    "app": "staging-commerce-orderservice-commerce-orderservice",
                    "pod-template-hash": "3304836375"
                },
                "name": "staging-commerce-orderservice-commerce-orderservice-7748d7jsf2r",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-commerce-orderservice-commerce-orderservice-7748d7b7c9",
                        "uid": "604a105f-e3ab-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2600756",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-commerce-orderservice-commerce-orderservice-7748d7jsf2r",
                "uid": "604e1416-e3ab-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "commerce-orderservice"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            },
                            {
                                "name": "ROOT_LOG_LEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "ENABLE_JMX",
                                "value": "true"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-orderservice:0.28.21",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/commerce-orderservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "commerce-orderservice",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/commerce-orderservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-54-13.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-orderservice",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:09:42Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:10:33Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:09:42Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://863b1b5c5487b81449198a60aec84708310ac0734d24cc703b8612bf1a71ad16",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-orderservice:0.28.21",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-orderservice@sha256:26f8850a6c8d9ee6aba02fcc7d786141d18a49aa33162624da1f04d5138f8b3a",
                        "lastState": {},
                        "name": "commerce-orderservice",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T23:09:55Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.54.13",
                "phase": "Running",
                "podIP": "100.96.9.29",
                "qosClass": "Burstable",
                "startTime": "2018-11-08T23:09:42Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "ad.datadoghq.com/commerce-pushnotificationlistener.check_names": "[\"http_check\"]",
                    "ad.datadoghq.com/commerce-pushnotificationlistener.init_configs": "[{}]",
                    "ad.datadoghq.com/commerce-pushnotificationlistener.instances": "[{\"name\": \"commerce-pushnotificationlistener\", \"url\":\"http://%%host%%:8080/commerce-pushnotificationlistener/healthcheck\"}]"
                },
                "creationTimestamp": "2018-11-08T23:21:56Z",
                "generateName": "staging-commerce-pushnotificationlistener-commerce-pushnotifica-7cb5b57bd8-",
                "labels": {
                    "app": "staging-commerce-pushnotificationlistener-commerce-pushnotifica",
                    "pod-template-hash": "3761613684"
                },
                "name": "staging-commerce-pushnotificationlistener-commerce-pushnotsdgdk",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-commerce-pushnotificationlistener-commerce-pushnotifica-7cb5b57bd8",
                        "uid": "15ce14aa-e3ad-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2602808",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-commerce-pushnotificationlistener-commerce-pushnotsdgdk",
                "uid": "15d088d1-e3ad-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "commerce-pushnotificationlistener"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            },
                            {
                                "name": "ROOT_LOG_LEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "ENABLE_JMX",
                                "value": "true"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-pushnotificationlistener:0.0.2",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/commerce-pushnotificationlistener/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "commerce-pushnotificationlistener",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/commerce-pushnotificationlistener/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-73-102.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-pushnotificationlistener",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:21:57Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:22:33Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:21:56Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://49c32ddffe75625204cd0eaae3f9ab19f5a8f5ab75692665eec7282554dc9f1a",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-pushnotificationlistener:0.0.2",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-pushnotificationlistener@sha256:5de3248b2ec49c78f8ce519d8121260a4ebf9e58bd0dfeb3634cc7b9d1343b36",
                        "lastState": {},
                        "name": "commerce-pushnotificationlistener",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T23:22:09Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.73.102",
                "phase": "Running",
                "podIP": "100.96.11.35",
                "qosClass": "Burstable",
                "startTime": "2018-11-08T23:21:57Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "ad.datadoghq.com/commerce-pushnotificationlistener.check_names": "[\"http_check\"]",
                    "ad.datadoghq.com/commerce-pushnotificationlistener.init_configs": "[{}]",
                    "ad.datadoghq.com/commerce-pushnotificationlistener.instances": "[{\"name\": \"commerce-pushnotificationlistener\", \"url\":\"http://%%host%%:8080/commerce-pushnotificationlistener/healthcheck\"}]"
                },
                "creationTimestamp": "2018-11-08T23:21:57Z",
                "generateName": "staging-commerce-pushnotificationlistener-commerce-pushnotifica-7cb5b57bd8-",
                "labels": {
                    "app": "staging-commerce-pushnotificationlistener-commerce-pushnotifica",
                    "pod-template-hash": "3761613684"
                },
                "name": "staging-commerce-pushnotificationlistener-commerce-pushnottwqt9",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-commerce-pushnotificationlistener-commerce-pushnotifica-7cb5b57bd8",
                        "uid": "15ce14aa-e3ad-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2602840",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-commerce-pushnotificationlistener-commerce-pushnottwqt9",
                "uid": "15de97bc-e3ad-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "commerce-pushnotificationlistener"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            },
                            {
                                "name": "ROOT_LOG_LEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "ENABLE_JMX",
                                "value": "true"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-pushnotificationlistener:0.0.2",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/commerce-pushnotificationlistener/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "commerce-pushnotificationlistener",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/commerce-pushnotificationlistener/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-99-218.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-pushnotificationlistener",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:21:57Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:22:37Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:21:57Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://f0301db0c072b771025bf1b771fbbe1ae0e8a0692b084c1b47d84ed9324be60b",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-pushnotificationlistener:0.0.2",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-pushnotificationlistener@sha256:5de3248b2ec49c78f8ce519d8121260a4ebf9e58bd0dfeb3634cc7b9d1343b36",
                        "lastState": {},
                        "name": "commerce-pushnotificationlistener",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T23:22:09Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.99.218",
                "phase": "Running",
                "podIP": "100.96.19.22",
                "qosClass": "Burstable",
                "startTime": "2018-11-08T23:21:57Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "ad.datadoghq.com/commerce-pushnotificationprocessor.check_names": "[\"http_check\"]",
                    "ad.datadoghq.com/commerce-pushnotificationprocessor.init_configs": "[{}]",
                    "ad.datadoghq.com/commerce-pushnotificationprocessor.instances": "[{\"name\": \"commerce-pushnotificationprocessor\", \"url\":\"http://%%host%%:8080/commerce-pushnotificationprocessor/healthcheck\"}]"
                },
                "creationTimestamp": "2018-11-08T22:48:27Z",
                "generateName": "staging-commerce-pushnotificationprocessor-commerce-pushnotific-54686d95d8-",
                "labels": {
                    "app": "staging-commerce-pushnotificationprocessor-commerce-pushnotific",
                    "pod-template-hash": "1024285184"
                },
                "name": "staging-commerce-pushnotificationprocessor-commerce-pushnogx4t8",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-commerce-pushnotificationprocessor-commerce-pushnotific-54686d95d8",
                        "uid": "67b86ea9-e3a8-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2597320",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-commerce-pushnotificationprocessor-commerce-pushnogx4t8",
                "uid": "67cae5db-e3a8-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "commerce-pushnotificationprocessor"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            },
                            {
                                "name": "ROOT_LOG_LEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "ENABLE_JMX",
                                "value": "true"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-pushnotificationprocessor:0.0.5",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/commerce-pushnotificationprocessor/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "commerce-pushnotificationprocessor",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/commerce-pushnotificationprocessor/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-54-13.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-pushnotificationprocessor",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T22:48:27Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T22:49:13Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T22:48:27Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://f7178def059ef3340016a984294cb837ad4b80defd579d63f5ed0227e10ff227",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-pushnotificationprocessor:0.0.5",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-pushnotificationprocessor@sha256:b5a39b03f9cf8716551432d4d5e458e3caf4a45769966f1a78a6e05340da86cf",
                        "lastState": {},
                        "name": "commerce-pushnotificationprocessor",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T22:48:39Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.54.13",
                "phase": "Running",
                "podIP": "100.96.9.28",
                "qosClass": "Burstable",
                "startTime": "2018-11-08T22:48:27Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "ad.datadoghq.com/commerce-pushnotificationprocessor.check_names": "[\"http_check\"]",
                    "ad.datadoghq.com/commerce-pushnotificationprocessor.init_configs": "[{}]",
                    "ad.datadoghq.com/commerce-pushnotificationprocessor.instances": "[{\"name\": \"commerce-pushnotificationprocessor\", \"url\":\"http://%%host%%:8080/commerce-pushnotificationprocessor/healthcheck\"}]"
                },
                "creationTimestamp": "2018-11-08T22:48:26Z",
                "generateName": "staging-commerce-pushnotificationprocessor-commerce-pushnotific-54686d95d8-",
                "labels": {
                    "app": "staging-commerce-pushnotificationprocessor-commerce-pushnotific",
                    "pod-template-hash": "1024285184"
                },
                "name": "staging-commerce-pushnotificationprocessor-commerce-pushnosm95h",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-commerce-pushnotificationprocessor-commerce-pushnotific-54686d95d8",
                        "uid": "67b86ea9-e3a8-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2597305",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-commerce-pushnotificationprocessor-commerce-pushnosm95h",
                "uid": "67bc1ea3-e3a8-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "commerce-pushnotificationprocessor"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            },
                            {
                                "name": "ROOT_LOG_LEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "ENABLE_JMX",
                                "value": "true"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-pushnotificationprocessor:0.0.5",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/commerce-pushnotificationprocessor/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "commerce-pushnotificationprocessor",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/commerce-pushnotificationprocessor/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-107-159.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-pushnotificationprocessor",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T22:48:26Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T22:49:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T22:48:26Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://929f2af765b4ec628c4a5668c0c43723a06544d6c1709c6754b5036d4e133425",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-pushnotificationprocessor:0.0.5",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-pushnotificationprocessor@sha256:b5a39b03f9cf8716551432d4d5e458e3caf4a45769966f1a78a6e05340da86cf",
                        "lastState": {},
                        "name": "commerce-pushnotificationprocessor",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T22:48:39Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.107.159",
                "phase": "Running",
                "podIP": "100.96.20.16",
                "qosClass": "Burstable",
                "startTime": "2018-11-08T22:48:26Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "ad.datadoghq.com/commerce-subscriptionservice.check_names": "[\"http_check\"]",
                    "ad.datadoghq.com/commerce-subscriptionservice.init_configs": "[{}]",
                    "ad.datadoghq.com/commerce-subscriptionservice.instances": "[{\"name\": \"commerce-subscriptionservice\", \"url\":\"http://%%host%%:8080/commerce-subscriptionservice/healthcheck\"}]"
                },
                "creationTimestamp": "2018-11-08T23:15:26Z",
                "generateName": "staging-commerce-subscriptionservice-commerce-subscriptionservi-6d8fd858d7-",
                "labels": {
                    "app": "staging-commerce-subscriptionservice-commerce-subscriptionservi",
                    "pod-template-hash": "2849841483"
                },
                "name": "staging-commerce-subscriptionservice-commerce-subscription8872v",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-commerce-subscriptionservice-commerce-subscriptionservi-6d8fd858d7",
                        "uid": "6fc4f538-e3ab-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2902441",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-commerce-subscriptionservice-commerce-subscription8872v",
                "uid": "2ce6d902-e3ac-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "commerce-subscriptionservice"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            },
                            {
                                "name": "ROOT_LOG_LEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "ENABLE_JMX",
                                "value": "true"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-subscriptionservice:0.29.16",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/commerce-subscriptionservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "commerce-subscriptionservice",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/commerce-subscriptionservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-104-107.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-subscriptionservice",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:15:26Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-10T07:32:27Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:15:26Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://882833d9659a66348615653566e9c9524573046a49c62b5c44159ad0cae82f10",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-subscriptionservice:0.29.16",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-subscriptionservice@sha256:1e187cf5aa99accc4b25459c98d224d92b498f654824d0d0a206336bf9c8e594",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://60817b41e3e7222bad61b74d408f8e52c791d1bf94fe1c7a0a5932b9a6ed762b",
                                "exitCode": 143,
                                "finishedAt": "2018-11-10T07:32:03Z",
                                "reason": "Error",
                                "startedAt": "2018-11-08T23:15:38Z"
                            }
                        },
                        "name": "commerce-subscriptionservice",
                        "ready": true,
                        "restartCount": 1,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-10T07:32:04Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.104.107",
                "phase": "Running",
                "podIP": "100.96.4.28",
                "qosClass": "Burstable",
                "startTime": "2018-11-08T23:15:26Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "ad.datadoghq.com/commerce-subscriptionservice.check_names": "[\"http_check\"]",
                    "ad.datadoghq.com/commerce-subscriptionservice.init_configs": "[{}]",
                    "ad.datadoghq.com/commerce-subscriptionservice.instances": "[{\"name\": \"commerce-subscriptionservice\", \"url\":\"http://%%host%%:8080/commerce-subscriptionservice/healthcheck\"}]"
                },
                "creationTimestamp": "2018-11-08T23:10:09Z",
                "generateName": "staging-commerce-subscriptionservice-commerce-subscriptionservi-6d8fd858d7-",
                "labels": {
                    "app": "staging-commerce-subscriptionservice-commerce-subscriptionservi",
                    "pod-template-hash": "2849841483"
                },
                "name": "staging-commerce-subscriptionservice-commerce-subscriptionp7xvc",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-commerce-subscriptionservice-commerce-subscriptionservi-6d8fd858d7",
                        "uid": "6fc4f538-e3ab-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2600836",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-commerce-subscriptionservice-commerce-subscriptionp7xvc",
                "uid": "6fd969e3-e3ab-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "commerce-subscriptionservice"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            },
                            {
                                "name": "ROOT_LOG_LEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "ENABLE_JMX",
                                "value": "true"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-subscriptionservice:0.29.16",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/commerce-subscriptionservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "commerce-subscriptionservice",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/commerce-subscriptionservice/healthcheck",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/tomcat",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-82-27.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-subscriptionservice",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:10:09Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:11:00Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:10:09Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://1e1e87e91ab57e621d53866a7f170e4d5cc6b4ebacc7831628a4c7dbcd27507b",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-subscriptionservice:0.29.16",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/commerce-subscriptionservice@sha256:1e187cf5aa99accc4b25459c98d224d92b498f654824d0d0a206336bf9c8e594",
                        "lastState": {},
                        "name": "commerce-subscriptionservice",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T23:10:21Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.82.27",
                "phase": "Running",
                "podIP": "100.96.15.41",
                "qosClass": "Burstable",
                "startTime": "2018-11-08T23:10:09Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/autoconf-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/checksd-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/confd-config": "6a9d14b372082ff3e5171f9433f2d183cfa0110fefe478143b6076c8f390aec3"
                },
                "creationTimestamp": "2018-10-29T17:44:54Z",
                "generateName": "staging-datadog-datadog-",
                "labels": {
                    "app": "staging-datadog-datadog",
                    "controller-revision-hash": "272914357",
                    "pod-template-generation": "1"
                },
                "name": "staging-datadog-datadog-2tjsh",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-datadog-datadog",
                        "uid": "4feb11a4-db0f-11e8-9f1f-02403a9d2f8a"
                    }
                ],
                "resourceVersion": "1899918",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-datadog-datadog-2tjsh",
                "uid": "585c5ec6-dba2-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "DD_API_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "api-key",
                                        "name": "staging-datadog-datadog"
                                    }
                                }
                            },
                            {
                                "name": "DD_LOG_LEVEL",
                                "value": "WARNING"
                            },
                            {
                                "name": "DD_LEADER_ELECTION",
                                "value": "true"
                            },
                            {
                                "name": "DD_COLLECT_KUBERNETES_EVENTS",
                                "value": "true"
                            },
                            {
                                "name": "KUBERNETES",
                                "value": "yes"
                            },
                            {
                                "name": "DD_KUBERNETES_KUBELET_HOST",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "DD_TAGS",
                                "value": "Environment:staging"
                            }
                        ],
                        "image": "datadog/agent:6.5.2",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "./probe.sh"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 15,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "datadog",
                        "ports": [
                            {
                                "containerPort": 8125,
                                "name": "dogstatsdport",
                                "protocol": "UDP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/docker.sock",
                                "name": "runtimesocket",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/proc",
                                "name": "procdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/sys/fs/cgroup",
                                "name": "cgroups",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/conf.d",
                                "name": "confd",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-datadog-datadog-token-4sk69",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-82-27.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "staging-datadog-datadog",
                "serviceAccountName": "staging-datadog-datadog",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        },
                        "name": "runtimesocket"
                    },
                    {
                        "hostPath": {
                            "path": "/proc",
                            "type": ""
                        },
                        "name": "procdir"
                    },
                    {
                        "hostPath": {
                            "path": "/sys/fs/cgroup",
                            "type": ""
                        },
                        "name": "cgroups"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-datadog-datadog-confd"
                        },
                        "name": "confd"
                    },
                    {
                        "name": "staging-datadog-datadog-token-4sk69",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-datadog-datadog-token-4sk69"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T17:44:57Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T20:16:29Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T17:44:57Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://d4c55cd49466c81ecf12b7327088f6284c9cc4254967821b444981e5be50cc20",
                        "image": "datadog/agent:6.5.2",
                        "imageID": "docker-pullable://datadog/agent@sha256:13c2f8ef32444dad83890a2183640785b514f0285d47c888d886da44bfce3ce7",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://88c141795d88c317653286b41129067a2d2f3feec90d907874f07c7aa1af1f5b",
                                "exitCode": 0,
                                "finishedAt": "2018-11-05T20:16:03Z",
                                "reason": "Completed",
                                "startedAt": "2018-10-31T16:39:53Z"
                            }
                        },
                        "name": "datadog",
                        "ready": true,
                        "restartCount": 2,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-05T20:16:29Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.82.27",
                "phase": "Running",
                "podIP": "100.96.15.28",
                "qosClass": "Guaranteed",
                "startTime": "2018-10-29T17:44:57Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/autoconf-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/checksd-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/confd-config": "6a9d14b372082ff3e5171f9433f2d183cfa0110fefe478143b6076c8f390aec3"
                },
                "creationTimestamp": "2018-10-29T00:12:24Z",
                "generateName": "staging-datadog-datadog-",
                "labels": {
                    "app": "staging-datadog-datadog",
                    "controller-revision-hash": "272914357",
                    "pod-template-generation": "1"
                },
                "name": "staging-datadog-datadog-6w5n5",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-datadog-datadog",
                        "uid": "4feb11a4-db0f-11e8-9f1f-02403a9d2f8a"
                    }
                ],
                "resourceVersion": "708491",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-datadog-datadog-6w5n5",
                "uid": "4ff237e3-db0f-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "DD_API_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "api-key",
                                        "name": "staging-datadog-datadog"
                                    }
                                }
                            },
                            {
                                "name": "DD_LOG_LEVEL",
                                "value": "WARNING"
                            },
                            {
                                "name": "DD_LEADER_ELECTION",
                                "value": "true"
                            },
                            {
                                "name": "DD_COLLECT_KUBERNETES_EVENTS",
                                "value": "true"
                            },
                            {
                                "name": "KUBERNETES",
                                "value": "yes"
                            },
                            {
                                "name": "DD_KUBERNETES_KUBELET_HOST",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "DD_TAGS",
                                "value": "Environment:staging"
                            }
                        ],
                        "image": "datadog/agent:6.5.2",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "./probe.sh"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 15,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "datadog",
                        "ports": [
                            {
                                "containerPort": 8125,
                                "name": "dogstatsdport",
                                "protocol": "UDP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/docker.sock",
                                "name": "runtimesocket",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/proc",
                                "name": "procdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/sys/fs/cgroup",
                                "name": "cgroups",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/conf.d",
                                "name": "confd",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-datadog-datadog-token-4sk69",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-107-173.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "staging-datadog-datadog",
                "serviceAccountName": "staging-datadog-datadog",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        },
                        "name": "runtimesocket"
                    },
                    {
                        "hostPath": {
                            "path": "/proc",
                            "type": ""
                        },
                        "name": "procdir"
                    },
                    {
                        "hostPath": {
                            "path": "/sys/fs/cgroup",
                            "type": ""
                        },
                        "name": "cgroups"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-datadog-datadog-confd"
                        },
                        "name": "confd"
                    },
                    {
                        "name": "staging-datadog-datadog-token-4sk69",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-datadog-datadog-token-4sk69"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:24Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:43Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:24Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://274cf874fff2a32de0afbb9bf0d81d70a48a59fb0e623217f82494272a37541c",
                        "image": "datadog/agent:6.5.2",
                        "imageID": "docker-pullable://datadog/agent@sha256:13c2f8ef32444dad83890a2183640785b514f0285d47c888d886da44bfce3ce7",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://f92f1f6f411f81059c0263071feaa8354239cad52cb5dc79c2849e3c40e3377b",
                                "exitCode": 0,
                                "finishedAt": "2018-10-31T12:48:35Z",
                                "reason": "Completed",
                                "startedAt": "2018-10-29T00:12:43Z"
                            }
                        },
                        "name": "datadog",
                        "ready": true,
                        "restartCount": 1,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-31T12:48:36Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.107.173",
                "phase": "Running",
                "podIP": "100.96.7.7",
                "qosClass": "Guaranteed",
                "startTime": "2018-10-29T00:12:24Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/autoconf-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/checksd-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/confd-config": "6a9d14b372082ff3e5171f9433f2d183cfa0110fefe478143b6076c8f390aec3"
                },
                "creationTimestamp": "2018-10-29T00:12:24Z",
                "generateName": "staging-datadog-datadog-",
                "labels": {
                    "app": "staging-datadog-datadog",
                    "controller-revision-hash": "272914357",
                    "pod-template-generation": "1"
                },
                "name": "staging-datadog-datadog-7mfcd",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-datadog-datadog",
                        "uid": "4feb11a4-db0f-11e8-9f1f-02403a9d2f8a"
                    }
                ],
                "resourceVersion": "153997",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-datadog-datadog-7mfcd",
                "uid": "4fe907e4-db0f-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "DD_API_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "api-key",
                                        "name": "staging-datadog-datadog"
                                    }
                                }
                            },
                            {
                                "name": "DD_LOG_LEVEL",
                                "value": "WARNING"
                            },
                            {
                                "name": "DD_LEADER_ELECTION",
                                "value": "true"
                            },
                            {
                                "name": "DD_COLLECT_KUBERNETES_EVENTS",
                                "value": "true"
                            },
                            {
                                "name": "KUBERNETES",
                                "value": "yes"
                            },
                            {
                                "name": "DD_KUBERNETES_KUBELET_HOST",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "DD_TAGS",
                                "value": "Environment:staging"
                            }
                        ],
                        "image": "datadog/agent:6.5.2",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "./probe.sh"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 15,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "datadog",
                        "ports": [
                            {
                                "containerPort": 8125,
                                "name": "dogstatsdport",
                                "protocol": "UDP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/docker.sock",
                                "name": "runtimesocket",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/proc",
                                "name": "procdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/sys/fs/cgroup",
                                "name": "cgroups",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/conf.d",
                                "name": "confd",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-datadog-datadog-token-4sk69",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-40-158.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "staging-datadog-datadog",
                "serviceAccountName": "staging-datadog-datadog",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        },
                        "name": "runtimesocket"
                    },
                    {
                        "hostPath": {
                            "path": "/proc",
                            "type": ""
                        },
                        "name": "procdir"
                    },
                    {
                        "hostPath": {
                            "path": "/sys/fs/cgroup",
                            "type": ""
                        },
                        "name": "cgroups"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-datadog-datadog-confd"
                        },
                        "name": "confd"
                    },
                    {
                        "name": "staging-datadog-datadog-token-4sk69",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-datadog-datadog-token-4sk69"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:24Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:46Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:24Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://1177c1cf0e2d3a947635bc543ca1373837805c2837775337335061fad1c65ff2",
                        "image": "datadog/agent:6.5.2",
                        "imageID": "docker-pullable://datadog/agent@sha256:13c2f8ef32444dad83890a2183640785b514f0285d47c888d886da44bfce3ce7",
                        "lastState": {},
                        "name": "datadog",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-29T00:12:46Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.40.158",
                "phase": "Running",
                "podIP": "100.96.0.3",
                "qosClass": "Guaranteed",
                "startTime": "2018-10-29T00:12:24Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/autoconf-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/checksd-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/confd-config": "6a9d14b372082ff3e5171f9433f2d183cfa0110fefe478143b6076c8f390aec3"
                },
                "creationTimestamp": "2018-10-29T00:12:24Z",
                "generateName": "staging-datadog-datadog-",
                "labels": {
                    "app": "staging-datadog-datadog",
                    "controller-revision-hash": "272914357",
                    "pod-template-generation": "1"
                },
                "name": "staging-datadog-datadog-cb547",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-datadog-datadog",
                        "uid": "4feb11a4-db0f-11e8-9f1f-02403a9d2f8a"
                    }
                ],
                "resourceVersion": "2613995",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-datadog-datadog-cb547",
                "uid": "4ff3ba0e-db0f-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "DD_API_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "api-key",
                                        "name": "staging-datadog-datadog"
                                    }
                                }
                            },
                            {
                                "name": "DD_LOG_LEVEL",
                                "value": "WARNING"
                            },
                            {
                                "name": "DD_LEADER_ELECTION",
                                "value": "true"
                            },
                            {
                                "name": "DD_COLLECT_KUBERNETES_EVENTS",
                                "value": "true"
                            },
                            {
                                "name": "KUBERNETES",
                                "value": "yes"
                            },
                            {
                                "name": "DD_KUBERNETES_KUBELET_HOST",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "DD_TAGS",
                                "value": "Environment:staging"
                            }
                        ],
                        "image": "datadog/agent:6.5.2",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "./probe.sh"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 15,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "datadog",
                        "ports": [
                            {
                                "containerPort": 8125,
                                "name": "dogstatsdport",
                                "protocol": "UDP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/docker.sock",
                                "name": "runtimesocket",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/proc",
                                "name": "procdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/sys/fs/cgroup",
                                "name": "cgroups",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/conf.d",
                                "name": "confd",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-datadog-datadog-token-4sk69",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-87-80.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "staging-datadog-datadog",
                "serviceAccountName": "staging-datadog-datadog",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        },
                        "name": "runtimesocket"
                    },
                    {
                        "hostPath": {
                            "path": "/proc",
                            "type": ""
                        },
                        "name": "procdir"
                    },
                    {
                        "hostPath": {
                            "path": "/sys/fs/cgroup",
                            "type": ""
                        },
                        "name": "cgroups"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-datadog-datadog-confd"
                        },
                        "name": "confd"
                    },
                    {
                        "name": "staging-datadog-datadog-token-4sk69",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-datadog-datadog-token-4sk69"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:24Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-09T00:36:26Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:24Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://c2ca337a43fad842ab77b023cd699e057afd937e7357f72ad8b4c3948a8dbf15",
                        "image": "datadog/agent:6.5.2",
                        "imageID": "docker-pullable://datadog/agent@sha256:13c2f8ef32444dad83890a2183640785b514f0285d47c888d886da44bfce3ce7",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://3cae0abb8b736927b00b88542fcc2d506e8dcbbd9d0a696cb0196a5938940157",
                                "exitCode": 137,
                                "finishedAt": "2018-11-09T00:36:08Z",
                                "reason": "Error",
                                "startedAt": "2018-11-07T20:22:33Z"
                            }
                        },
                        "name": "datadog",
                        "ready": true,
                        "restartCount": 3,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-09T00:36:26Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.87.80",
                "phase": "Running",
                "podIP": "100.96.6.48",
                "qosClass": "Guaranteed",
                "startTime": "2018-10-29T00:12:24Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/autoconf-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/checksd-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/confd-config": "6a9d14b372082ff3e5171f9433f2d183cfa0110fefe478143b6076c8f390aec3"
                },
                "creationTimestamp": "2018-10-31T16:54:58Z",
                "generateName": "staging-datadog-datadog-",
                "labels": {
                    "app": "staging-datadog-datadog",
                    "controller-revision-hash": "272914357",
                    "pod-template-generation": "1"
                },
                "name": "staging-datadog-datadog-cwn2q",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-datadog-datadog",
                        "uid": "4feb11a4-db0f-11e8-9f1f-02403a9d2f8a"
                    }
                ],
                "resourceVersion": "745800",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-datadog-datadog-cwn2q",
                "uid": "b30cb715-dd2d-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "DD_API_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "api-key",
                                        "name": "staging-datadog-datadog"
                                    }
                                }
                            },
                            {
                                "name": "DD_LOG_LEVEL",
                                "value": "WARNING"
                            },
                            {
                                "name": "DD_LEADER_ELECTION",
                                "value": "true"
                            },
                            {
                                "name": "DD_COLLECT_KUBERNETES_EVENTS",
                                "value": "true"
                            },
                            {
                                "name": "KUBERNETES",
                                "value": "yes"
                            },
                            {
                                "name": "DD_KUBERNETES_KUBELET_HOST",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "DD_TAGS",
                                "value": "Environment:staging"
                            }
                        ],
                        "image": "datadog/agent:6.5.2",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "./probe.sh"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 15,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "datadog",
                        "ports": [
                            {
                                "containerPort": 8125,
                                "name": "dogstatsdport",
                                "protocol": "UDP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/docker.sock",
                                "name": "runtimesocket",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/proc",
                                "name": "procdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/sys/fs/cgroup",
                                "name": "cgroups",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/conf.d",
                                "name": "confd",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-datadog-datadog-token-4sk69",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-107-159.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "staging-datadog-datadog",
                "serviceAccountName": "staging-datadog-datadog",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        },
                        "name": "runtimesocket"
                    },
                    {
                        "hostPath": {
                            "path": "/proc",
                            "type": ""
                        },
                        "name": "procdir"
                    },
                    {
                        "hostPath": {
                            "path": "/sys/fs/cgroup",
                            "type": ""
                        },
                        "name": "cgroups"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-datadog-datadog-confd"
                        },
                        "name": "confd"
                    },
                    {
                        "name": "staging-datadog-datadog-token-4sk69",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-datadog-datadog-token-4sk69"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:55:01Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:55:57Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:55:01Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://3830cefa0cfa8f79d281207237e63a3ca79d44018675d12a4fd16d09e34ba135",
                        "image": "datadog/agent:6.5.2",
                        "imageID": "docker-pullable://datadog/agent@sha256:13c2f8ef32444dad83890a2183640785b514f0285d47c888d886da44bfce3ce7",
                        "lastState": {},
                        "name": "datadog",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-31T16:55:57Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.107.159",
                "phase": "Running",
                "podIP": "100.96.20.2",
                "qosClass": "Guaranteed",
                "startTime": "2018-10-31T16:55:01Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/autoconf-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/checksd-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/confd-config": "6a9d14b372082ff3e5171f9433f2d183cfa0110fefe478143b6076c8f390aec3"
                },
                "creationTimestamp": "2018-10-29T00:12:24Z",
                "generateName": "staging-datadog-datadog-",
                "labels": {
                    "app": "staging-datadog-datadog",
                    "controller-revision-hash": "272914357",
                    "pod-template-generation": "1"
                },
                "name": "staging-datadog-datadog-fvlsf",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-datadog-datadog",
                        "uid": "4feb11a4-db0f-11e8-9f1f-02403a9d2f8a"
                    }
                ],
                "resourceVersion": "154001",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-datadog-datadog-fvlsf",
                "uid": "4fee0c95-db0f-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "DD_API_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "api-key",
                                        "name": "staging-datadog-datadog"
                                    }
                                }
                            },
                            {
                                "name": "DD_LOG_LEVEL",
                                "value": "WARNING"
                            },
                            {
                                "name": "DD_LEADER_ELECTION",
                                "value": "true"
                            },
                            {
                                "name": "DD_COLLECT_KUBERNETES_EVENTS",
                                "value": "true"
                            },
                            {
                                "name": "KUBERNETES",
                                "value": "yes"
                            },
                            {
                                "name": "DD_KUBERNETES_KUBELET_HOST",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "DD_TAGS",
                                "value": "Environment:staging"
                            }
                        ],
                        "image": "datadog/agent:6.5.2",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "./probe.sh"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 15,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "datadog",
                        "ports": [
                            {
                                "containerPort": 8125,
                                "name": "dogstatsdport",
                                "protocol": "UDP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/docker.sock",
                                "name": "runtimesocket",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/proc",
                                "name": "procdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/sys/fs/cgroup",
                                "name": "cgroups",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/conf.d",
                                "name": "confd",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-datadog-datadog-token-4sk69",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-105-71.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "staging-datadog-datadog",
                "serviceAccountName": "staging-datadog-datadog",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        },
                        "name": "runtimesocket"
                    },
                    {
                        "hostPath": {
                            "path": "/proc",
                            "type": ""
                        },
                        "name": "procdir"
                    },
                    {
                        "hostPath": {
                            "path": "/sys/fs/cgroup",
                            "type": ""
                        },
                        "name": "cgroups"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-datadog-datadog-confd"
                        },
                        "name": "confd"
                    },
                    {
                        "name": "staging-datadog-datadog-token-4sk69",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-datadog-datadog-token-4sk69"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:24Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:47Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:24Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://efdbf3ba35eee5259f6828c0132d8a6794dcbeb30f2ce03a95e420aee5ec8927",
                        "image": "datadog/agent:6.5.2",
                        "imageID": "docker-pullable://datadog/agent@sha256:13c2f8ef32444dad83890a2183640785b514f0285d47c888d886da44bfce3ce7",
                        "lastState": {},
                        "name": "datadog",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-29T00:12:46Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.105.71",
                "phase": "Running",
                "podIP": "100.96.2.3",
                "qosClass": "Guaranteed",
                "startTime": "2018-10-29T00:12:24Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/autoconf-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/checksd-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/confd-config": "6a9d14b372082ff3e5171f9433f2d183cfa0110fefe478143b6076c8f390aec3"
                },
                "creationTimestamp": "2018-10-31T16:54:55Z",
                "generateName": "staging-datadog-datadog-",
                "labels": {
                    "app": "staging-datadog-datadog",
                    "controller-revision-hash": "272914357",
                    "pod-template-generation": "1"
                },
                "name": "staging-datadog-datadog-g7sdz",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-datadog-datadog",
                        "uid": "4feb11a4-db0f-11e8-9f1f-02403a9d2f8a"
                    }
                ],
                "resourceVersion": "745713",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-datadog-datadog-g7sdz",
                "uid": "b15a8ee2-dd2d-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "DD_API_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "api-key",
                                        "name": "staging-datadog-datadog"
                                    }
                                }
                            },
                            {
                                "name": "DD_LOG_LEVEL",
                                "value": "WARNING"
                            },
                            {
                                "name": "DD_LEADER_ELECTION",
                                "value": "true"
                            },
                            {
                                "name": "DD_COLLECT_KUBERNETES_EVENTS",
                                "value": "true"
                            },
                            {
                                "name": "KUBERNETES",
                                "value": "yes"
                            },
                            {
                                "name": "DD_KUBERNETES_KUBELET_HOST",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "DD_TAGS",
                                "value": "Environment:staging"
                            }
                        ],
                        "image": "datadog/agent:6.5.2",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "./probe.sh"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 15,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "datadog",
                        "ports": [
                            {
                                "containerPort": 8125,
                                "name": "dogstatsdport",
                                "protocol": "UDP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/docker.sock",
                                "name": "runtimesocket",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/proc",
                                "name": "procdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/sys/fs/cgroup",
                                "name": "cgroups",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/conf.d",
                                "name": "confd",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-datadog-datadog-token-4sk69",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-99-218.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "staging-datadog-datadog",
                "serviceAccountName": "staging-datadog-datadog",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        },
                        "name": "runtimesocket"
                    },
                    {
                        "hostPath": {
                            "path": "/proc",
                            "type": ""
                        },
                        "name": "procdir"
                    },
                    {
                        "hostPath": {
                            "path": "/sys/fs/cgroup",
                            "type": ""
                        },
                        "name": "cgroups"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-datadog-datadog-confd"
                        },
                        "name": "confd"
                    },
                    {
                        "name": "staging-datadog-datadog-token-4sk69",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-datadog-datadog-token-4sk69"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:54:58Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:55:32Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:54:58Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://27304342c12b81321e26a593aa619026a63bc02ddfc9d601e58a70c7bc5a5b37",
                        "image": "datadog/agent:6.5.2",
                        "imageID": "docker-pullable://datadog/agent@sha256:13c2f8ef32444dad83890a2183640785b514f0285d47c888d886da44bfce3ce7",
                        "lastState": {},
                        "name": "datadog",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-31T16:55:31Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.99.218",
                "phase": "Running",
                "podIP": "100.96.19.2",
                "qosClass": "Guaranteed",
                "startTime": "2018-10-31T16:54:58Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/autoconf-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/checksd-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/confd-config": "6a9d14b372082ff3e5171f9433f2d183cfa0110fefe478143b6076c8f390aec3"
                },
                "creationTimestamp": "2018-10-31T16:43:41Z",
                "generateName": "staging-datadog-datadog-",
                "labels": {
                    "app": "staging-datadog-datadog",
                    "controller-revision-hash": "272914357",
                    "pod-template-generation": "1"
                },
                "name": "staging-datadog-datadog-l5rjp",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-datadog-datadog",
                        "uid": "4feb11a4-db0f-11e8-9f1f-02403a9d2f8a"
                    }
                ],
                "resourceVersion": "743790",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-datadog-datadog-l5rjp",
                "uid": "1f797788-dd2c-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "DD_API_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "api-key",
                                        "name": "staging-datadog-datadog"
                                    }
                                }
                            },
                            {
                                "name": "DD_LOG_LEVEL",
                                "value": "WARNING"
                            },
                            {
                                "name": "DD_LEADER_ELECTION",
                                "value": "true"
                            },
                            {
                                "name": "DD_COLLECT_KUBERNETES_EVENTS",
                                "value": "true"
                            },
                            {
                                "name": "KUBERNETES",
                                "value": "yes"
                            },
                            {
                                "name": "DD_KUBERNETES_KUBELET_HOST",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "DD_TAGS",
                                "value": "Environment:staging"
                            }
                        ],
                        "image": "datadog/agent:6.5.2",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "./probe.sh"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 15,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "datadog",
                        "ports": [
                            {
                                "containerPort": 8125,
                                "name": "dogstatsdport",
                                "protocol": "UDP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/docker.sock",
                                "name": "runtimesocket",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/proc",
                                "name": "procdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/sys/fs/cgroup",
                                "name": "cgroups",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/conf.d",
                                "name": "confd",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-datadog-datadog-token-4sk69",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-52-16.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "staging-datadog-datadog",
                "serviceAccountName": "staging-datadog-datadog",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        },
                        "name": "runtimesocket"
                    },
                    {
                        "hostPath": {
                            "path": "/proc",
                            "type": ""
                        },
                        "name": "procdir"
                    },
                    {
                        "hostPath": {
                            "path": "/sys/fs/cgroup",
                            "type": ""
                        },
                        "name": "cgroups"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-datadog-datadog-confd"
                        },
                        "name": "confd"
                    },
                    {
                        "name": "staging-datadog-datadog-token-4sk69",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-datadog-datadog-token-4sk69"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:43:44Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:44:21Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:43:44Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://09819c0347d3195dfcb80e09d727dd07cef279459674141e4375ad8eb6f9b339",
                        "image": "datadog/agent:6.5.2",
                        "imageID": "docker-pullable://datadog/agent@sha256:13c2f8ef32444dad83890a2183640785b514f0285d47c888d886da44bfce3ce7",
                        "lastState": {},
                        "name": "datadog",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-31T16:44:20Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.52.16",
                "phase": "Running",
                "podIP": "100.96.16.3",
                "qosClass": "Guaranteed",
                "startTime": "2018-10-31T16:43:44Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/autoconf-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/checksd-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/confd-config": "6a9d14b372082ff3e5171f9433f2d183cfa0110fefe478143b6076c8f390aec3"
                },
                "creationTimestamp": "2018-10-31T16:43:53Z",
                "generateName": "staging-datadog-datadog-",
                "labels": {
                    "app": "staging-datadog-datadog",
                    "controller-revision-hash": "272914357",
                    "pod-template-generation": "1"
                },
                "name": "staging-datadog-datadog-n48fg",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-datadog-datadog",
                        "uid": "4feb11a4-db0f-11e8-9f1f-02403a9d2f8a"
                    }
                ],
                "resourceVersion": "743900",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-datadog-datadog-n48fg",
                "uid": "270b0013-dd2c-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "DD_API_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "api-key",
                                        "name": "staging-datadog-datadog"
                                    }
                                }
                            },
                            {
                                "name": "DD_LOG_LEVEL",
                                "value": "WARNING"
                            },
                            {
                                "name": "DD_LEADER_ELECTION",
                                "value": "true"
                            },
                            {
                                "name": "DD_COLLECT_KUBERNETES_EVENTS",
                                "value": "true"
                            },
                            {
                                "name": "KUBERNETES",
                                "value": "yes"
                            },
                            {
                                "name": "DD_KUBERNETES_KUBELET_HOST",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "DD_TAGS",
                                "value": "Environment:staging"
                            }
                        ],
                        "image": "datadog/agent:6.5.2",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "./probe.sh"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 15,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "datadog",
                        "ports": [
                            {
                                "containerPort": 8125,
                                "name": "dogstatsdport",
                                "protocol": "UDP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/docker.sock",
                                "name": "runtimesocket",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/proc",
                                "name": "procdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/sys/fs/cgroup",
                                "name": "cgroups",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/conf.d",
                                "name": "confd",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-datadog-datadog-token-4sk69",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-77-93.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "staging-datadog-datadog",
                "serviceAccountName": "staging-datadog-datadog",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        },
                        "name": "runtimesocket"
                    },
                    {
                        "hostPath": {
                            "path": "/proc",
                            "type": ""
                        },
                        "name": "procdir"
                    },
                    {
                        "hostPath": {
                            "path": "/sys/fs/cgroup",
                            "type": ""
                        },
                        "name": "cgroups"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-datadog-datadog-confd"
                        },
                        "name": "confd"
                    },
                    {
                        "name": "staging-datadog-datadog-token-4sk69",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-datadog-datadog-token-4sk69"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:43:56Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:44:54Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:43:56Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://801d2c14d2928036f217a0c0e02f247466f700651907cd46c1723cc7bc241263",
                        "image": "datadog/agent:6.5.2",
                        "imageID": "docker-pullable://datadog/agent@sha256:13c2f8ef32444dad83890a2183640785b514f0285d47c888d886da44bfce3ce7",
                        "lastState": {},
                        "name": "datadog",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-31T16:44:53Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.77.93",
                "phase": "Running",
                "podIP": "100.96.18.2",
                "qosClass": "Guaranteed",
                "startTime": "2018-10-31T16:43:56Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/autoconf-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/checksd-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/confd-config": "6a9d14b372082ff3e5171f9433f2d183cfa0110fefe478143b6076c8f390aec3"
                },
                "creationTimestamp": "2018-10-29T00:12:24Z",
                "generateName": "staging-datadog-datadog-",
                "labels": {
                    "app": "staging-datadog-datadog",
                    "controller-revision-hash": "272914357",
                    "pod-template-generation": "1"
                },
                "name": "staging-datadog-datadog-njpzd",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-datadog-datadog",
                        "uid": "4feb11a4-db0f-11e8-9f1f-02403a9d2f8a"
                    }
                ],
                "resourceVersion": "153973",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-datadog-datadog-njpzd",
                "uid": "4fee4c21-db0f-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "DD_API_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "api-key",
                                        "name": "staging-datadog-datadog"
                                    }
                                }
                            },
                            {
                                "name": "DD_LOG_LEVEL",
                                "value": "WARNING"
                            },
                            {
                                "name": "DD_LEADER_ELECTION",
                                "value": "true"
                            },
                            {
                                "name": "DD_COLLECT_KUBERNETES_EVENTS",
                                "value": "true"
                            },
                            {
                                "name": "KUBERNETES",
                                "value": "yes"
                            },
                            {
                                "name": "DD_KUBERNETES_KUBELET_HOST",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "DD_TAGS",
                                "value": "Environment:staging"
                            }
                        ],
                        "image": "datadog/agent:6.5.2",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "./probe.sh"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 15,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "datadog",
                        "ports": [
                            {
                                "containerPort": 8125,
                                "name": "dogstatsdport",
                                "protocol": "UDP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/docker.sock",
                                "name": "runtimesocket",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/proc",
                                "name": "procdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/sys/fs/cgroup",
                                "name": "cgroups",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/conf.d",
                                "name": "confd",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-datadog-datadog-token-4sk69",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-104-107.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "staging-datadog-datadog",
                "serviceAccountName": "staging-datadog-datadog",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        },
                        "name": "runtimesocket"
                    },
                    {
                        "hostPath": {
                            "path": "/proc",
                            "type": ""
                        },
                        "name": "procdir"
                    },
                    {
                        "hostPath": {
                            "path": "/sys/fs/cgroup",
                            "type": ""
                        },
                        "name": "cgroups"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-datadog-datadog-confd"
                        },
                        "name": "confd"
                    },
                    {
                        "name": "staging-datadog-datadog-token-4sk69",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-datadog-datadog-token-4sk69"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:24Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:43Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:24Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://8e1dcd8d584b32155c2d705f4069ee5a7089c80029b6203c5e0d09b8bf601374",
                        "image": "datadog/agent:6.5.2",
                        "imageID": "docker-pullable://datadog/agent@sha256:13c2f8ef32444dad83890a2183640785b514f0285d47c888d886da44bfce3ce7",
                        "lastState": {},
                        "name": "datadog",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-29T00:12:43Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.104.107",
                "phase": "Running",
                "podIP": "100.96.4.7",
                "qosClass": "Guaranteed",
                "startTime": "2018-10-29T00:12:24Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/autoconf-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/checksd-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/confd-config": "6a9d14b372082ff3e5171f9433f2d183cfa0110fefe478143b6076c8f390aec3"
                },
                "creationTimestamp": "2018-10-29T00:12:24Z",
                "generateName": "staging-datadog-datadog-",
                "labels": {
                    "app": "staging-datadog-datadog",
                    "controller-revision-hash": "272914357",
                    "pod-template-generation": "1"
                },
                "name": "staging-datadog-datadog-qrlwb",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-datadog-datadog",
                        "uid": "4feb11a4-db0f-11e8-9f1f-02403a9d2f8a"
                    }
                ],
                "resourceVersion": "237570",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-datadog-datadog-qrlwb",
                "uid": "4ff1a370-db0f-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "DD_API_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "api-key",
                                        "name": "staging-datadog-datadog"
                                    }
                                }
                            },
                            {
                                "name": "DD_LOG_LEVEL",
                                "value": "WARNING"
                            },
                            {
                                "name": "DD_LEADER_ELECTION",
                                "value": "true"
                            },
                            {
                                "name": "DD_COLLECT_KUBERNETES_EVENTS",
                                "value": "true"
                            },
                            {
                                "name": "KUBERNETES",
                                "value": "yes"
                            },
                            {
                                "name": "DD_KUBERNETES_KUBELET_HOST",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "DD_TAGS",
                                "value": "Environment:staging"
                            }
                        ],
                        "image": "datadog/agent:6.5.2",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "./probe.sh"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 15,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "datadog",
                        "ports": [
                            {
                                "containerPort": 8125,
                                "name": "dogstatsdport",
                                "protocol": "UDP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/docker.sock",
                                "name": "runtimesocket",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/proc",
                                "name": "procdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/sys/fs/cgroup",
                                "name": "cgroups",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/conf.d",
                                "name": "confd",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-datadog-datadog-token-4sk69",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-73-102.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "staging-datadog-datadog",
                "serviceAccountName": "staging-datadog-datadog",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        },
                        "name": "runtimesocket"
                    },
                    {
                        "hostPath": {
                            "path": "/proc",
                            "type": ""
                        },
                        "name": "procdir"
                    },
                    {
                        "hostPath": {
                            "path": "/sys/fs/cgroup",
                            "type": ""
                        },
                        "name": "cgroups"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-datadog-datadog-confd"
                        },
                        "name": "confd"
                    },
                    {
                        "name": "staging-datadog-datadog-token-4sk69",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-datadog-datadog-token-4sk69"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:24Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T09:43:17Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:24Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://9e163d0f9befa83b1f955ff84a0e4840cf570a6d462d7259f8cf1d551850680e",
                        "image": "datadog/agent:6.5.2",
                        "imageID": "docker-pullable://datadog/agent@sha256:13c2f8ef32444dad83890a2183640785b514f0285d47c888d886da44bfce3ce7",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://0e0b1391a7d63a1591c6393bd624cb601e9f09161af4844754fc96cbdb926134",
                                "exitCode": 0,
                                "finishedAt": "2018-10-29T09:42:51Z",
                                "reason": "Completed",
                                "startedAt": "2018-10-29T00:12:44Z"
                            }
                        },
                        "name": "datadog",
                        "ready": true,
                        "restartCount": 1,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-29T09:43:16Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.73.102",
                "phase": "Running",
                "podIP": "100.96.11.17",
                "qosClass": "Guaranteed",
                "startTime": "2018-10-29T00:12:24Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/autoconf-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/checksd-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/confd-config": "6a9d14b372082ff3e5171f9433f2d183cfa0110fefe478143b6076c8f390aec3"
                },
                "creationTimestamp": "2018-10-29T00:12:24Z",
                "generateName": "staging-datadog-datadog-",
                "labels": {
                    "app": "staging-datadog-datadog",
                    "controller-revision-hash": "272914357",
                    "pod-template-generation": "1"
                },
                "name": "staging-datadog-datadog-wthvd",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-datadog-datadog",
                        "uid": "4feb11a4-db0f-11e8-9f1f-02403a9d2f8a"
                    }
                ],
                "resourceVersion": "154007",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-datadog-datadog-wthvd",
                "uid": "4ffa3cfc-db0f-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "DD_API_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "api-key",
                                        "name": "staging-datadog-datadog"
                                    }
                                }
                            },
                            {
                                "name": "DD_LOG_LEVEL",
                                "value": "WARNING"
                            },
                            {
                                "name": "DD_LEADER_ELECTION",
                                "value": "true"
                            },
                            {
                                "name": "DD_COLLECT_KUBERNETES_EVENTS",
                                "value": "true"
                            },
                            {
                                "name": "KUBERNETES",
                                "value": "yes"
                            },
                            {
                                "name": "DD_KUBERNETES_KUBELET_HOST",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "DD_TAGS",
                                "value": "Environment:staging"
                            }
                        ],
                        "image": "datadog/agent:6.5.2",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "./probe.sh"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 15,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "datadog",
                        "ports": [
                            {
                                "containerPort": 8125,
                                "name": "dogstatsdport",
                                "protocol": "UDP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/docker.sock",
                                "name": "runtimesocket",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/proc",
                                "name": "procdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/sys/fs/cgroup",
                                "name": "cgroups",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/conf.d",
                                "name": "confd",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-datadog-datadog-token-4sk69",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-66-180.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "staging-datadog-datadog",
                "serviceAccountName": "staging-datadog-datadog",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        },
                        "name": "runtimesocket"
                    },
                    {
                        "hostPath": {
                            "path": "/proc",
                            "type": ""
                        },
                        "name": "procdir"
                    },
                    {
                        "hostPath": {
                            "path": "/sys/fs/cgroup",
                            "type": ""
                        },
                        "name": "cgroups"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-datadog-datadog-confd"
                        },
                        "name": "confd"
                    },
                    {
                        "name": "staging-datadog-datadog-token-4sk69",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-datadog-datadog-token-4sk69"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:24Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:49Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:24Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://356fd60be7ad7675e693966eec5612502425e2221f7d4c4201ec54f3f5af430a",
                        "image": "datadog/agent:6.5.2",
                        "imageID": "docker-pullable://datadog/agent@sha256:13c2f8ef32444dad83890a2183640785b514f0285d47c888d886da44bfce3ce7",
                        "lastState": {},
                        "name": "datadog",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-29T00:12:49Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.66.180",
                "phase": "Running",
                "podIP": "100.96.1.3",
                "qosClass": "Guaranteed",
                "startTime": "2018-10-29T00:12:24Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/autoconf-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/checksd-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/confd-config": "6a9d14b372082ff3e5171f9433f2d183cfa0110fefe478143b6076c8f390aec3"
                },
                "creationTimestamp": "2018-10-29T00:12:24Z",
                "generateName": "staging-datadog-datadog-",
                "labels": {
                    "app": "staging-datadog-datadog",
                    "controller-revision-hash": "272914357",
                    "pod-template-generation": "1"
                },
                "name": "staging-datadog-datadog-wx8jr",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-datadog-datadog",
                        "uid": "4feb11a4-db0f-11e8-9f1f-02403a9d2f8a"
                    }
                ],
                "resourceVersion": "153981",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-datadog-datadog-wx8jr",
                "uid": "4ffa2184-db0f-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "DD_API_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "api-key",
                                        "name": "staging-datadog-datadog"
                                    }
                                }
                            },
                            {
                                "name": "DD_LOG_LEVEL",
                                "value": "WARNING"
                            },
                            {
                                "name": "DD_LEADER_ELECTION",
                                "value": "true"
                            },
                            {
                                "name": "DD_COLLECT_KUBERNETES_EVENTS",
                                "value": "true"
                            },
                            {
                                "name": "KUBERNETES",
                                "value": "yes"
                            },
                            {
                                "name": "DD_KUBERNETES_KUBELET_HOST",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "DD_TAGS",
                                "value": "Environment:staging"
                            }
                        ],
                        "image": "datadog/agent:6.5.2",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "./probe.sh"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 15,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "datadog",
                        "ports": [
                            {
                                "containerPort": 8125,
                                "name": "dogstatsdport",
                                "protocol": "UDP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/docker.sock",
                                "name": "runtimesocket",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/proc",
                                "name": "procdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/sys/fs/cgroup",
                                "name": "cgroups",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/conf.d",
                                "name": "confd",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-datadog-datadog-token-4sk69",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-54-13.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "staging-datadog-datadog",
                "serviceAccountName": "staging-datadog-datadog",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        },
                        "name": "runtimesocket"
                    },
                    {
                        "hostPath": {
                            "path": "/proc",
                            "type": ""
                        },
                        "name": "procdir"
                    },
                    {
                        "hostPath": {
                            "path": "/sys/fs/cgroup",
                            "type": ""
                        },
                        "name": "cgroups"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-datadog-datadog-confd"
                        },
                        "name": "confd"
                    },
                    {
                        "name": "staging-datadog-datadog-token-4sk69",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-datadog-datadog-token-4sk69"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:24Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:44Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:24Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://e315708e790ec75f555f0d53744b2169017c70880890df4acb47a940f655ef57",
                        "image": "datadog/agent:6.5.2",
                        "imageID": "docker-pullable://datadog/agent@sha256:13c2f8ef32444dad83890a2183640785b514f0285d47c888d886da44bfce3ce7",
                        "lastState": {},
                        "name": "datadog",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-29T00:12:44Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.54.13",
                "phase": "Running",
                "podIP": "100.96.9.7",
                "qosClass": "Guaranteed",
                "startTime": "2018-10-29T00:12:24Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/autoconf-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/checksd-config": "38e0b9de817f645c4bec37c0d4a3e58baecccb040f5718dc069a72c7385a0bed",
                    "checksum/confd-config": "6a9d14b372082ff3e5171f9433f2d183cfa0110fefe478143b6076c8f390aec3"
                },
                "creationTimestamp": "2018-10-29T00:12:24Z",
                "generateName": "staging-datadog-datadog-",
                "labels": {
                    "app": "staging-datadog-datadog",
                    "controller-revision-hash": "272914357",
                    "pod-template-generation": "1"
                },
                "name": "staging-datadog-datadog-z4px2",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-datadog-datadog",
                        "uid": "4feb11a4-db0f-11e8-9f1f-02403a9d2f8a"
                    }
                ],
                "resourceVersion": "269671",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-datadog-datadog-z4px2",
                "uid": "4ff9c43e-db0f-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "DD_API_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "api-key",
                                        "name": "staging-datadog-datadog"
                                    }
                                }
                            },
                            {
                                "name": "DD_LOG_LEVEL",
                                "value": "WARNING"
                            },
                            {
                                "name": "DD_LEADER_ELECTION",
                                "value": "true"
                            },
                            {
                                "name": "DD_COLLECT_KUBERNETES_EVENTS",
                                "value": "true"
                            },
                            {
                                "name": "KUBERNETES",
                                "value": "yes"
                            },
                            {
                                "name": "DD_KUBERNETES_KUBELET_HOST",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "DD_TAGS",
                                "value": "Environment:staging"
                            }
                        ],
                        "image": "datadog/agent:6.5.2",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "./probe.sh"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 15,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "datadog",
                        "ports": [
                            {
                                "containerPort": 8125,
                                "name": "dogstatsdport",
                                "protocol": "UDP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/docker.sock",
                                "name": "runtimesocket",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/proc",
                                "name": "procdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/sys/fs/cgroup",
                                "name": "cgroups",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/conf.d",
                                "name": "confd",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-datadog-datadog-token-4sk69",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-52-0.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "staging-datadog-datadog",
                "serviceAccountName": "staging-datadog-datadog",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        },
                        "name": "runtimesocket"
                    },
                    {
                        "hostPath": {
                            "path": "/proc",
                            "type": ""
                        },
                        "name": "procdir"
                    },
                    {
                        "hostPath": {
                            "path": "/sys/fs/cgroup",
                            "type": ""
                        },
                        "name": "cgroups"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-datadog-datadog-confd"
                        },
                        "name": "confd"
                    },
                    {
                        "name": "staging-datadog-datadog-token-4sk69",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-datadog-datadog-token-4sk69"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:24Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T13:36:18Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T00:12:24Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://d4c9479225ee17322d279503ea117e157fb66b6d00e2414128f439fcec034028",
                        "image": "datadog/agent:6.5.2",
                        "imageID": "docker-pullable://datadog/agent@sha256:13c2f8ef32444dad83890a2183640785b514f0285d47c888d886da44bfce3ce7",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://419ddadd97083d325eacb31a14f88d42358176f3d8c4384db18f1f281081a567",
                                "exitCode": 0,
                                "finishedAt": "2018-10-29T13:35:55Z",
                                "reason": "Completed",
                                "startedAt": "2018-10-29T00:12:43Z"
                            }
                        },
                        "name": "datadog",
                        "ready": true,
                        "restartCount": 1,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-29T13:36:18Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.52.0",
                "phase": "Running",
                "podIP": "100.96.10.19",
                "qosClass": "Guaranteed",
                "startTime": "2018-10-29T00:12:24Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-10-31T16:58:17Z",
                "generateName": "staging-datadog-kube-state-metrics-75986ffb4c-",
                "labels": {
                    "app": "kube-state-metrics",
                    "pod-template-hash": "3154299607",
                    "release": "staging-datadog"
                },
                "name": "staging-datadog-kube-state-metrics-75986ffb4c-gqh2k",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-datadog-kube-state-metrics-75986ffb4c",
                        "uid": "4fe8d0dc-db0f-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "746538",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-datadog-kube-state-metrics-75986ffb4c-gqh2k",
                "uid": "2a0c64f8-dd2e-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--collectors=cronjobs",
                            "--collectors=daemonsets",
                            "--collectors=deployments",
                            "--collectors=endpoints",
                            "--collectors=horizontalpodautoscalers",
                            "--collectors=jobs",
                            "--collectors=limitranges",
                            "--collectors=namespaces",
                            "--collectors=nodes",
                            "--collectors=persistentvolumeclaims",
                            "--collectors=persistentvolumes",
                            "--collectors=pods",
                            "--collectors=replicasets",
                            "--collectors=replicationcontrollers",
                            "--collectors=resourcequotas",
                            "--collectors=services",
                            "--collectors=statefulsets"
                        ],
                        "image": "quay.io/coreos/kube-state-metrics:v1.4.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "kube-state-metrics",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-datadog-kube-state-metrics-token-9m7r4",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-99-218.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "staging-datadog-kube-state-metrics",
                "serviceAccountName": "staging-datadog-kube-state-metrics",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "staging-datadog-kube-state-metrics-token-9m7r4",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-datadog-kube-state-metrics-token-9m7r4"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:58:17Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:58:40Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:58:17Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://0b6bcd28ac6b8864171a4bcf87c13c52505cebc31979120feea454bf141bb475",
                        "image": "quay.io/coreos/kube-state-metrics:v1.4.0",
                        "imageID": "docker-pullable://quay.io/coreos/kube-state-metrics@sha256:6685342bbd645754b1aabdd9b663691109ec680645af261288289e62571ac201",
                        "lastState": {},
                        "name": "kube-state-metrics",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-31T16:58:29Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.99.218",
                "phase": "Running",
                "podIP": "100.96.19.4",
                "qosClass": "BestEffort",
                "startTime": "2018-10-31T16:58:17Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-07T00:00:34Z",
                "generateName": "staging-event-s3-connector-sink-s3-connector-65dd494948-",
                "labels": {
                    "app": "sink-s3-connector",
                    "pod-template-hash": "2188050504",
                    "release": "staging-event-s3-connector"
                },
                "name": "staging-event-s3-connector-sink-s3-connector-65dd494948-2bk5p",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-event-s3-connector-sink-s3-connector-65dd494948",
                        "uid": "2cc7a5f2-e200-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2602076",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-event-s3-connector-sink-s3-connector-65dd494948-2bk5p",
                "uid": "263f45c0-e220-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/etc/confluent/docker/run"
                        ],
                        "env": [
                            {
                                "name": "CONNECT_PLUGIN_PATH",
                                "value": "/usr/share/java"
                            },
                            {
                                "name": "CONNECT_BOOTSTRAP_SERVERS",
                                "value": "commerce-kafka01.staging.aws.ppcn.us:9092,commerce-kafka02.staging.aws.ppcn.us:9092,commerce-kafka03.staging.aws.ppcn.us:9092,commerce-kafka04.staging.aws.ppcn.us:9092,commerce-kafka05.staging.aws.ppcn.us:9092"
                            },
                            {
                                "name": "CONNECT_ZOOKEEPER_CONNECT",
                                "value": "commerce-kafka01.staging.aws.ppcn.us:2181,commerce-kafka02.staging.aws.ppcn.us:2181,commerce-kafka03.staging.aws.ppcn.us:2181,commerce-kafka04.staging.aws.ppcn.us:2181,commerce-kafka05.staging.aws.ppcn.us:2181"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER",
                                "value": "org.apache.kafka.connect.storage.StringConverter"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE",
                                "value": "false"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE",
                                "value": "false"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_TOPIC",
                                "value": "event-s3-configs"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_TOPIC",
                                "value": "event-s3-offsets"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_TOPIC",
                                "value": "event-s3-status"
                            },
                            {
                                "name": "CONNECT_INTERNAL_KEY_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_INTERNAL_VALUE_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-pg-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-pg-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_GROUP_ID",
                                "value": "event-s3-sink"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_FLUSH_INTERVAL_MS",
                                "value": "10000"
                            },
                            {
                                "name": "CONNECT_REST_ADVERTISED_HOST_NAME",
                                "value": "staging-event-s3-connector-sink-s3-connector"
                            },
                            {
                                "name": "CONNECT_LOG4J_ROOT_LOGLEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "CONNECT_CONSUMER_RETRIES",
                                "value": "10"
                            },
                            {
                                "name": "CONNECT_CONSUMER_RETRY_OFF_MS",
                                "value": "10000"
                            },
                            {
                                "name": "KAFKA_HEAP_OPTS",
                                "value": "-Xmx8G"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-s3-connector:feat-wq-35200-connector-liveness-script",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/usr/local/bin/connectors_healthy",
                                    "localhost:8083"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 300,
                            "periodSeconds": 600,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "sink-s3-connector",
                        "ports": [
                            {
                                "containerPort": 8083,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8083,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 20,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "8Gi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-54-13.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-07T00:00:34Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:18:12Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-07T00:00:34Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://02b8a0df64e40423a54b32402f3e3005d4c11ca73cf14151b9af1640e1942526",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-s3-connector:feat-wq-35200-connector-liveness-script",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-s3-connector@sha256:d049f136ce0aea7b7e4a1ad32f0a51c5f087f9d8144cf34635169a170c41441b",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://6a43266a96185b5c5a5d8ffad312771dd41482b75939b975ba5ff176d34ed238",
                                "exitCode": 137,
                                "finishedAt": "2018-11-08T23:16:45Z",
                                "reason": "OOMKilled",
                                "startedAt": "2018-11-07T00:00:47Z"
                            }
                        },
                        "name": "sink-s3-connector",
                        "ready": true,
                        "restartCount": 1,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T23:16:48Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.54.13",
                "phase": "Running",
                "podIP": "100.96.9.24",
                "qosClass": "Burstable",
                "startTime": "2018-11-07T00:00:34Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-08T23:15:26Z",
                "generateName": "staging-event-s3-connector-sink-s3-connector-65dd494948-",
                "labels": {
                    "app": "sink-s3-connector",
                    "pod-template-hash": "2188050504",
                    "release": "staging-event-s3-connector"
                },
                "name": "staging-event-s3-connector-sink-s3-connector-65dd494948-zj6fz",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-event-s3-connector-sink-s3-connector-65dd494948",
                        "uid": "2cc7a5f2-e200-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2601881",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-event-s3-connector-sink-s3-connector-65dd494948-zj6fz",
                "uid": "2cf51f65-e3ac-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/etc/confluent/docker/run"
                        ],
                        "env": [
                            {
                                "name": "CONNECT_PLUGIN_PATH",
                                "value": "/usr/share/java"
                            },
                            {
                                "name": "CONNECT_BOOTSTRAP_SERVERS",
                                "value": "commerce-kafka01.staging.aws.ppcn.us:9092,commerce-kafka02.staging.aws.ppcn.us:9092,commerce-kafka03.staging.aws.ppcn.us:9092,commerce-kafka04.staging.aws.ppcn.us:9092,commerce-kafka05.staging.aws.ppcn.us:9092"
                            },
                            {
                                "name": "CONNECT_ZOOKEEPER_CONNECT",
                                "value": "commerce-kafka01.staging.aws.ppcn.us:2181,commerce-kafka02.staging.aws.ppcn.us:2181,commerce-kafka03.staging.aws.ppcn.us:2181,commerce-kafka04.staging.aws.ppcn.us:2181,commerce-kafka05.staging.aws.ppcn.us:2181"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER",
                                "value": "org.apache.kafka.connect.storage.StringConverter"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE",
                                "value": "false"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE",
                                "value": "false"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_TOPIC",
                                "value": "event-s3-configs"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_TOPIC",
                                "value": "event-s3-offsets"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_TOPIC",
                                "value": "event-s3-status"
                            },
                            {
                                "name": "CONNECT_INTERNAL_KEY_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_INTERNAL_VALUE_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-pg-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-pg-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_GROUP_ID",
                                "value": "event-s3-sink"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_FLUSH_INTERVAL_MS",
                                "value": "10000"
                            },
                            {
                                "name": "CONNECT_REST_ADVERTISED_HOST_NAME",
                                "value": "staging-event-s3-connector-sink-s3-connector"
                            },
                            {
                                "name": "CONNECT_LOG4J_ROOT_LOGLEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "CONNECT_CONSUMER_RETRIES",
                                "value": "10"
                            },
                            {
                                "name": "CONNECT_CONSUMER_RETRY_OFF_MS",
                                "value": "10000"
                            },
                            {
                                "name": "KAFKA_HEAP_OPTS",
                                "value": "-Xmx8G"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-s3-connector:feat-wq-35200-connector-liveness-script",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/usr/local/bin/connectors_healthy",
                                    "localhost:8083"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 300,
                            "periodSeconds": 600,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "sink-s3-connector",
                        "ports": [
                            {
                                "containerPort": 8083,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8083,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 20,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "8Gi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-99-218.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:15:26Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:16:56Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:15:26Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://66f4be27c53ca524a66143230dfe9b2d9b1535cb80cfbd4192b885583b439b3d",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-s3-connector:feat-wq-35200-connector-liveness-script",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-s3-connector@sha256:d049f136ce0aea7b7e4a1ad32f0a51c5f087f9d8144cf34635169a170c41441b",
                        "lastState": {},
                        "name": "sink-s3-connector",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T23:15:41Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.99.218",
                "phase": "Running",
                "podIP": "100.96.19.21",
                "qosClass": "Burstable",
                "startTime": "2018-11-08T23:15:26Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-05T05:07:33Z",
                "generateName": "staging-fluentd-",
                "labels": {
                    "app": "fluentd",
                    "controller-revision-hash": "167092438",
                    "pod-template-generation": "1",
                    "release": "staging-fluentd"
                },
                "name": "staging-fluentd-6cjns",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-fluentd",
                        "uid": "b416435c-e0b8-11e8-aa6d-12da7ccbe390"
                    }
                ],
                "resourceVersion": "1758366",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-fluentd-6cjns",
                "uid": "b42253db-e0b8-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "AWS_REGION",
                                "value": "us-east-1"
                            },
                            {
                                "name": "LOG_GROUP_NAME",
                                "value": "kubernetes"
                            },
                            {
                                "name": "FLUENT_UID",
                                "value": "0"
                            },
                            {
                                "name": "S3_BUCKET_NAME",
                                "value": "peopleconnect-staging-logs"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imagePullPolicy": "Always",
                        "name": "staging-fluentd",
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/log",
                                "name": "varlog"
                            },
                            {
                                "mountPath": "/var/lib/docker/containers",
                                "name": "varlibdockercontainers",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/fluentd/etc",
                                "name": "config"
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/log/applogs",
                                "name": "varlogapplogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "cp /config-volume/* /etc/fluentd/"
                        ],
                        "image": "busybox",
                        "imagePullPolicy": "Always",
                        "name": "copy-fluentd-config",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config-volume",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/etc/fluentd",
                                "name": "config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "ip-10-122-107-173.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsUser": 0
                },
                "serviceAccount": "staging-fluentd",
                "serviceAccountName": "staging-fluentd",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        },
                        "name": "varlog"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/docker/containers",
                            "type": ""
                        },
                        "name": "varlibdockercontainers"
                    },
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/applogs",
                            "type": ""
                        },
                        "name": "varlogapplogs"
                    },
                    {
                        "emptyDir": {},
                        "name": "config"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-fluentd"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "staging-fluentd-token-vd92x",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-fluentd-token-vd92x"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:44Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:53Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:33Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://622c5a3fbc32ab5cea56c9f605b19b7f53c1445de30985650f17c84436728437",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd@sha256:33d5e29d51b6ae2aaa28452d5387df6592a724347c94f1b470a236266d921964",
                        "lastState": {},
                        "name": "staging-fluentd",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-05T05:07:52Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.107.173",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://a878dfbede3dca11c4876c2005f4d7215a6e255655468d712a2a40fc3295605d",
                        "image": "busybox:latest",
                        "imageID": "docker-pullable://busybox@sha256:2a03a6059f21e150ae84b0973863609494aad70f0a80eaeb64bddd8d92465812",
                        "lastState": {},
                        "name": "copy-fluentd-config",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://a878dfbede3dca11c4876c2005f4d7215a6e255655468d712a2a40fc3295605d",
                                "exitCode": 0,
                                "finishedAt": "2018-11-05T05:07:44Z",
                                "reason": "Completed",
                                "startedAt": "2018-11-05T05:07:44Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "100.96.7.32",
                "qosClass": "Burstable",
                "startTime": "2018-11-05T05:07:33Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-05T05:07:33Z",
                "generateName": "staging-fluentd-",
                "labels": {
                    "app": "fluentd",
                    "controller-revision-hash": "167092438",
                    "pod-template-generation": "1",
                    "release": "staging-fluentd"
                },
                "name": "staging-fluentd-89g76",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-fluentd",
                        "uid": "b416435c-e0b8-11e8-aa6d-12da7ccbe390"
                    }
                ],
                "resourceVersion": "1758387",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-fluentd-89g76",
                "uid": "b422df3e-e0b8-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "AWS_REGION",
                                "value": "us-east-1"
                            },
                            {
                                "name": "LOG_GROUP_NAME",
                                "value": "kubernetes"
                            },
                            {
                                "name": "FLUENT_UID",
                                "value": "0"
                            },
                            {
                                "name": "S3_BUCKET_NAME",
                                "value": "peopleconnect-staging-logs"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imagePullPolicy": "Always",
                        "name": "staging-fluentd",
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/log",
                                "name": "varlog"
                            },
                            {
                                "mountPath": "/var/lib/docker/containers",
                                "name": "varlibdockercontainers",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/fluentd/etc",
                                "name": "config"
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/log/applogs",
                                "name": "varlogapplogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "cp /config-volume/* /etc/fluentd/"
                        ],
                        "image": "busybox",
                        "imagePullPolicy": "Always",
                        "name": "copy-fluentd-config",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config-volume",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/etc/fluentd",
                                "name": "config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "ip-10-122-66-180.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsUser": 0
                },
                "serviceAccount": "staging-fluentd",
                "serviceAccountName": "staging-fluentd",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        },
                        "name": "varlog"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/docker/containers",
                            "type": ""
                        },
                        "name": "varlibdockercontainers"
                    },
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/applogs",
                            "type": ""
                        },
                        "name": "varlogapplogs"
                    },
                    {
                        "emptyDir": {},
                        "name": "config"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-fluentd"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "staging-fluentd-token-vd92x",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-fluentd-token-vd92x"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:45Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:55Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:33Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://f1c342c63e3c2c2f1c2167938e03317e2c007bf2939356486da8f781569aaf1c",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd@sha256:33d5e29d51b6ae2aaa28452d5387df6592a724347c94f1b470a236266d921964",
                        "lastState": {},
                        "name": "staging-fluentd",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-05T05:07:54Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.66.180",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://44f510acbe3d85439a506f8df312805a93c0a3b26cbec6227b3887882d2c2f57",
                        "image": "busybox:latest",
                        "imageID": "docker-pullable://busybox@sha256:2a03a6059f21e150ae84b0973863609494aad70f0a80eaeb64bddd8d92465812",
                        "lastState": {},
                        "name": "copy-fluentd-config",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://44f510acbe3d85439a506f8df312805a93c0a3b26cbec6227b3887882d2c2f57",
                                "exitCode": 0,
                                "finishedAt": "2018-11-05T05:07:44Z",
                                "reason": "Completed",
                                "startedAt": "2018-11-05T05:07:44Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "100.96.1.4",
                "qosClass": "Burstable",
                "startTime": "2018-11-05T05:07:33Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-05T06:33:37Z",
                "generateName": "staging-fluentd-",
                "labels": {
                    "app": "fluentd",
                    "controller-revision-hash": "520412540",
                    "pod-template-generation": "4",
                    "release": "staging-fluentd"
                },
                "name": "staging-fluentd-cdb6l",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-fluentd",
                        "uid": "b416435c-e0b8-11e8-aa6d-12da7ccbe390"
                    }
                ],
                "resourceVersion": "1771893",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-fluentd-cdb6l",
                "uid": "ba083d0b-e0c4-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "AWS_REGION",
                                "value": "us-east-1"
                            },
                            {
                                "name": "LOG_GROUP_NAME",
                                "value": "kubernetes"
                            },
                            {
                                "name": "FLUENT_UID",
                                "value": "0"
                            },
                            {
                                "name": "FLUENTD_OPT",
                                "value": "-qq"
                            },
                            {
                                "name": "S3_BUCKET_NAME",
                                "value": "peopleconnect-staging-logs"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imagePullPolicy": "Always",
                        "name": "staging-fluentd",
                        "resources": {
                            "limits": {
                                "cpu": "400m",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/log",
                                "name": "varlog"
                            },
                            {
                                "mountPath": "/var/lib/docker/containers",
                                "name": "varlibdockercontainers",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/fluentd/etc",
                                "name": "config"
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/log/applogs",
                                "name": "varlogapplogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "cp /config-volume/* /etc/fluentd/"
                        ],
                        "image": "busybox",
                        "imagePullPolicy": "Always",
                        "name": "copy-fluentd-config",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config-volume",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/etc/fluentd",
                                "name": "config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "ip-10-122-54-13.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsUser": 0
                },
                "serviceAccount": "staging-fluentd",
                "serviceAccountName": "staging-fluentd",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        },
                        "name": "varlog"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/docker/containers",
                            "type": ""
                        },
                        "name": "varlibdockercontainers"
                    },
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/applogs",
                            "type": ""
                        },
                        "name": "varlogapplogs"
                    },
                    {
                        "emptyDir": {},
                        "name": "config"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-fluentd"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "staging-fluentd-token-vd92x",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-fluentd-token-vd92x"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T06:33:49Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T06:33:50Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T06:33:37Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://960cf0f2182d3f17c7cb131be212846db2bffa67eda1d77f5b7732eb7a830a6d",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd@sha256:33d5e29d51b6ae2aaa28452d5387df6592a724347c94f1b470a236266d921964",
                        "lastState": {},
                        "name": "staging-fluentd",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-05T06:33:50Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.54.13",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://ad8247c0cada125169a425e525e5927eb6fdd5aeb16c972c401e0003d28c3419",
                        "image": "busybox:latest",
                        "imageID": "docker-pullable://busybox@sha256:2a03a6059f21e150ae84b0973863609494aad70f0a80eaeb64bddd8d92465812",
                        "lastState": {},
                        "name": "copy-fluentd-config",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://ad8247c0cada125169a425e525e5927eb6fdd5aeb16c972c401e0003d28c3419",
                                "exitCode": 0,
                                "finishedAt": "2018-11-05T06:33:48Z",
                                "reason": "Completed",
                                "startedAt": "2018-11-05T06:33:48Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "100.96.9.19",
                "qosClass": "Burstable",
                "startTime": "2018-11-05T06:33:37Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-05T05:07:33Z",
                "generateName": "staging-fluentd-",
                "labels": {
                    "app": "fluentd",
                    "controller-revision-hash": "167092438",
                    "pod-template-generation": "1",
                    "release": "staging-fluentd"
                },
                "name": "staging-fluentd-cklv2",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-fluentd",
                        "uid": "b416435c-e0b8-11e8-aa6d-12da7ccbe390"
                    }
                ],
                "resourceVersion": "2614008",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-fluentd-cklv2",
                "uid": "b41d6929-e0b8-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "AWS_REGION",
                                "value": "us-east-1"
                            },
                            {
                                "name": "LOG_GROUP_NAME",
                                "value": "kubernetes"
                            },
                            {
                                "name": "FLUENT_UID",
                                "value": "0"
                            },
                            {
                                "name": "S3_BUCKET_NAME",
                                "value": "peopleconnect-staging-logs"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imagePullPolicy": "Always",
                        "name": "staging-fluentd",
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/log",
                                "name": "varlog"
                            },
                            {
                                "mountPath": "/var/lib/docker/containers",
                                "name": "varlibdockercontainers",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/fluentd/etc",
                                "name": "config"
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/log/applogs",
                                "name": "varlogapplogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "cp /config-volume/* /etc/fluentd/"
                        ],
                        "image": "busybox",
                        "imagePullPolicy": "Always",
                        "name": "copy-fluentd-config",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config-volume",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/etc/fluentd",
                                "name": "config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "ip-10-122-87-80.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsUser": 0
                },
                "serviceAccount": "staging-fluentd",
                "serviceAccountName": "staging-fluentd",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        },
                        "name": "varlog"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/docker/containers",
                            "type": ""
                        },
                        "name": "varlibdockercontainers"
                    },
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/applogs",
                            "type": ""
                        },
                        "name": "varlogapplogs"
                    },
                    {
                        "emptyDir": {},
                        "name": "config"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-fluentd"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "staging-fluentd-token-vd92x",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-fluentd-token-vd92x"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:44Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-09T00:36:28Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:33Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://a8ba9c643182e26c2ce4332671d0e261207b0a46391c8467614308166be31103",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd@sha256:3dab8631188f84e2b687ef8efa93c7d8f8ed943946893f1f0f2d7c36cd49f0f0",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://dd89f7c598c5c161d17881fba55d7f720e147894581c624250654239abdc0a3a",
                                "exitCode": 137,
                                "finishedAt": "2018-11-09T00:36:08Z",
                                "reason": "Error",
                                "startedAt": "2018-11-07T20:22:46Z"
                            }
                        },
                        "name": "staging-fluentd",
                        "ready": true,
                        "restartCount": 3,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-09T00:36:28Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.87.80",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://08bb3960d69bda3b18b83c852c6e5c45d132aacabb825070aad122d4d157fb39",
                        "image": "busybox:latest",
                        "imageID": "docker-pullable://busybox@sha256:2a03a6059f21e150ae84b0973863609494aad70f0a80eaeb64bddd8d92465812",
                        "lastState": {},
                        "name": "copy-fluentd-config",
                        "ready": true,
                        "restartCount": 3,
                        "state": {
                            "terminated": {
                                "containerID": "docker://08bb3960d69bda3b18b83c852c6e5c45d132aacabb825070aad122d4d157fb39",
                                "exitCode": 0,
                                "finishedAt": "2018-11-09T00:36:26Z",
                                "reason": "Completed",
                                "startedAt": "2018-11-09T00:36:26Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "100.96.6.49",
                "qosClass": "Burstable",
                "startTime": "2018-11-05T05:07:33Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-05T05:07:33Z",
                "generateName": "staging-fluentd-",
                "labels": {
                    "app": "fluentd",
                    "controller-revision-hash": "167092438",
                    "pod-template-generation": "1",
                    "release": "staging-fluentd"
                },
                "name": "staging-fluentd-d2kj5",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-fluentd",
                        "uid": "b416435c-e0b8-11e8-aa6d-12da7ccbe390"
                    }
                ],
                "resourceVersion": "1758384",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-fluentd-d2kj5",
                "uid": "b4223cea-e0b8-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "AWS_REGION",
                                "value": "us-east-1"
                            },
                            {
                                "name": "LOG_GROUP_NAME",
                                "value": "kubernetes"
                            },
                            {
                                "name": "FLUENT_UID",
                                "value": "0"
                            },
                            {
                                "name": "S3_BUCKET_NAME",
                                "value": "peopleconnect-staging-logs"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imagePullPolicy": "Always",
                        "name": "staging-fluentd",
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/log",
                                "name": "varlog"
                            },
                            {
                                "mountPath": "/var/lib/docker/containers",
                                "name": "varlibdockercontainers",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/fluentd/etc",
                                "name": "config"
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/log/applogs",
                                "name": "varlogapplogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "cp /config-volume/* /etc/fluentd/"
                        ],
                        "image": "busybox",
                        "imagePullPolicy": "Always",
                        "name": "copy-fluentd-config",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config-volume",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/etc/fluentd",
                                "name": "config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "ip-10-122-105-71.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsUser": 0
                },
                "serviceAccount": "staging-fluentd",
                "serviceAccountName": "staging-fluentd",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        },
                        "name": "varlog"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/docker/containers",
                            "type": ""
                        },
                        "name": "varlibdockercontainers"
                    },
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/applogs",
                            "type": ""
                        },
                        "name": "varlogapplogs"
                    },
                    {
                        "emptyDir": {},
                        "name": "config"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-fluentd"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "staging-fluentd-token-vd92x",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-fluentd-token-vd92x"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:45Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:54Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:33Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://e50e14fb263c1d3126fa1fff349b931a260a00e8cbcae86b7462d7b78fd40a01",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd@sha256:33d5e29d51b6ae2aaa28452d5387df6592a724347c94f1b470a236266d921964",
                        "lastState": {},
                        "name": "staging-fluentd",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-05T05:07:54Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.105.71",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://4c2d067ef0f7c514b1419fde7f644740cba6a03c3af50834052cfb6655aefe24",
                        "image": "busybox:latest",
                        "imageID": "docker-pullable://busybox@sha256:2a03a6059f21e150ae84b0973863609494aad70f0a80eaeb64bddd8d92465812",
                        "lastState": {},
                        "name": "copy-fluentd-config",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://4c2d067ef0f7c514b1419fde7f644740cba6a03c3af50834052cfb6655aefe24",
                                "exitCode": 0,
                                "finishedAt": "2018-11-05T05:07:44Z",
                                "reason": "Completed",
                                "startedAt": "2018-11-05T05:07:44Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "100.96.2.4",
                "qosClass": "Burstable",
                "startTime": "2018-11-05T05:07:33Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-05T05:07:33Z",
                "generateName": "staging-fluentd-",
                "labels": {
                    "app": "fluentd",
                    "controller-revision-hash": "167092438",
                    "pod-template-generation": "1",
                    "release": "staging-fluentd"
                },
                "name": "staging-fluentd-d7rd7",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-fluentd",
                        "uid": "b416435c-e0b8-11e8-aa6d-12da7ccbe390"
                    }
                ],
                "resourceVersion": "1758372",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-fluentd-d7rd7",
                "uid": "b41bbfb2-e0b8-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "AWS_REGION",
                                "value": "us-east-1"
                            },
                            {
                                "name": "LOG_GROUP_NAME",
                                "value": "kubernetes"
                            },
                            {
                                "name": "FLUENT_UID",
                                "value": "0"
                            },
                            {
                                "name": "S3_BUCKET_NAME",
                                "value": "peopleconnect-staging-logs"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imagePullPolicy": "Always",
                        "name": "staging-fluentd",
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/log",
                                "name": "varlog"
                            },
                            {
                                "mountPath": "/var/lib/docker/containers",
                                "name": "varlibdockercontainers",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/fluentd/etc",
                                "name": "config"
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/log/applogs",
                                "name": "varlogapplogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "cp /config-volume/* /etc/fluentd/"
                        ],
                        "image": "busybox",
                        "imagePullPolicy": "Always",
                        "name": "copy-fluentd-config",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config-volume",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/etc/fluentd",
                                "name": "config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "ip-10-122-52-16.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsUser": 0
                },
                "serviceAccount": "staging-fluentd",
                "serviceAccountName": "staging-fluentd",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        },
                        "name": "varlog"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/docker/containers",
                            "type": ""
                        },
                        "name": "varlibdockercontainers"
                    },
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/applogs",
                            "type": ""
                        },
                        "name": "varlogapplogs"
                    },
                    {
                        "emptyDir": {},
                        "name": "config"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-fluentd"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "staging-fluentd-token-vd92x",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-fluentd-token-vd92x"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:45Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:53Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:33Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://909380d5e9ccd406effd46d446547122f85df03d18a19d7cd29bd36bf0ef682c",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd@sha256:33d5e29d51b6ae2aaa28452d5387df6592a724347c94f1b470a236266d921964",
                        "lastState": {},
                        "name": "staging-fluentd",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-05T05:07:52Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.52.16",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://a2bc2c617286157013fba4e4e222e4192f75ecc52343b23bbad71d0ec1069826",
                        "image": "busybox:latest",
                        "imageID": "docker-pullable://busybox@sha256:2a03a6059f21e150ae84b0973863609494aad70f0a80eaeb64bddd8d92465812",
                        "lastState": {},
                        "name": "copy-fluentd-config",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://a2bc2c617286157013fba4e4e222e4192f75ecc52343b23bbad71d0ec1069826",
                                "exitCode": 0,
                                "finishedAt": "2018-11-05T05:07:44Z",
                                "reason": "Completed",
                                "startedAt": "2018-11-05T05:07:44Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "100.96.16.8",
                "qosClass": "Burstable",
                "startTime": "2018-11-05T05:07:33Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-05T05:07:33Z",
                "generateName": "staging-fluentd-",
                "labels": {
                    "app": "fluentd",
                    "controller-revision-hash": "167092438",
                    "pod-template-generation": "1",
                    "release": "staging-fluentd"
                },
                "name": "staging-fluentd-dctdw",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-fluentd",
                        "uid": "b416435c-e0b8-11e8-aa6d-12da7ccbe390"
                    }
                ],
                "resourceVersion": "1758389",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-fluentd-dctdw",
                "uid": "b41d8b84-e0b8-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "AWS_REGION",
                                "value": "us-east-1"
                            },
                            {
                                "name": "LOG_GROUP_NAME",
                                "value": "kubernetes"
                            },
                            {
                                "name": "FLUENT_UID",
                                "value": "0"
                            },
                            {
                                "name": "S3_BUCKET_NAME",
                                "value": "peopleconnect-staging-logs"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imagePullPolicy": "Always",
                        "name": "staging-fluentd",
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/log",
                                "name": "varlog"
                            },
                            {
                                "mountPath": "/var/lib/docker/containers",
                                "name": "varlibdockercontainers",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/fluentd/etc",
                                "name": "config"
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/log/applogs",
                                "name": "varlogapplogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "cp /config-volume/* /etc/fluentd/"
                        ],
                        "image": "busybox",
                        "imagePullPolicy": "Always",
                        "name": "copy-fluentd-config",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config-volume",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/etc/fluentd",
                                "name": "config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "ip-10-122-40-158.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsUser": 0
                },
                "serviceAccount": "staging-fluentd",
                "serviceAccountName": "staging-fluentd",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        },
                        "name": "varlog"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/docker/containers",
                            "type": ""
                        },
                        "name": "varlibdockercontainers"
                    },
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/applogs",
                            "type": ""
                        },
                        "name": "varlogapplogs"
                    },
                    {
                        "emptyDir": {},
                        "name": "config"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-fluentd"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "staging-fluentd-token-vd92x",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-fluentd-token-vd92x"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:45Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:55Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:33Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d8deb02cee3a767f6ff2922b228f51943342bdd55658f21e650bf2577735767",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd@sha256:33d5e29d51b6ae2aaa28452d5387df6592a724347c94f1b470a236266d921964",
                        "lastState": {},
                        "name": "staging-fluentd",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-05T05:07:55Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.40.158",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://b258dce7eba777260e549fdf648ee0185dd4a7a4411e027b90fa4ca669ed123a",
                        "image": "busybox:latest",
                        "imageID": "docker-pullable://busybox@sha256:2a03a6059f21e150ae84b0973863609494aad70f0a80eaeb64bddd8d92465812",
                        "lastState": {},
                        "name": "copy-fluentd-config",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://b258dce7eba777260e549fdf648ee0185dd4a7a4411e027b90fa4ca669ed123a",
                                "exitCode": 0,
                                "finishedAt": "2018-11-05T05:07:44Z",
                                "reason": "Completed",
                                "startedAt": "2018-11-05T05:07:44Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "100.96.0.8",
                "qosClass": "Burstable",
                "startTime": "2018-11-05T05:07:33Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-05T05:07:33Z",
                "generateName": "staging-fluentd-",
                "labels": {
                    "app": "fluentd",
                    "controller-revision-hash": "167092438",
                    "pod-template-generation": "1",
                    "release": "staging-fluentd"
                },
                "name": "staging-fluentd-jwbzw",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-fluentd",
                        "uid": "b416435c-e0b8-11e8-aa6d-12da7ccbe390"
                    }
                ],
                "resourceVersion": "1758371",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-fluentd-jwbzw",
                "uid": "b420e717-e0b8-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "AWS_REGION",
                                "value": "us-east-1"
                            },
                            {
                                "name": "LOG_GROUP_NAME",
                                "value": "kubernetes"
                            },
                            {
                                "name": "FLUENT_UID",
                                "value": "0"
                            },
                            {
                                "name": "S3_BUCKET_NAME",
                                "value": "peopleconnect-staging-logs"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imagePullPolicy": "Always",
                        "name": "staging-fluentd",
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/log",
                                "name": "varlog"
                            },
                            {
                                "mountPath": "/var/lib/docker/containers",
                                "name": "varlibdockercontainers",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/fluentd/etc",
                                "name": "config"
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/log/applogs",
                                "name": "varlogapplogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "cp /config-volume/* /etc/fluentd/"
                        ],
                        "image": "busybox",
                        "imagePullPolicy": "Always",
                        "name": "copy-fluentd-config",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config-volume",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/etc/fluentd",
                                "name": "config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "ip-10-122-73-102.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsUser": 0
                },
                "serviceAccount": "staging-fluentd",
                "serviceAccountName": "staging-fluentd",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        },
                        "name": "varlog"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/docker/containers",
                            "type": ""
                        },
                        "name": "varlibdockercontainers"
                    },
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/applogs",
                            "type": ""
                        },
                        "name": "varlogapplogs"
                    },
                    {
                        "emptyDir": {},
                        "name": "config"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-fluentd"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "staging-fluentd-token-vd92x",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-fluentd-token-vd92x"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:45Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:53Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:33Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://18fafbf7db5a5a21e1d1b2d0c1aadc17c9ca779b8067664abeaad149158e6f18",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd@sha256:33d5e29d51b6ae2aaa28452d5387df6592a724347c94f1b470a236266d921964",
                        "lastState": {},
                        "name": "staging-fluentd",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-05T05:07:52Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.73.102",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://79f7d73174157704b3a4b33535aac001fba38d0705c1a05b521d938b0d3e4103",
                        "image": "busybox:latest",
                        "imageID": "docker-pullable://busybox@sha256:2a03a6059f21e150ae84b0973863609494aad70f0a80eaeb64bddd8d92465812",
                        "lastState": {},
                        "name": "copy-fluentd-config",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://79f7d73174157704b3a4b33535aac001fba38d0705c1a05b521d938b0d3e4103",
                                "exitCode": 0,
                                "finishedAt": "2018-11-05T05:07:44Z",
                                "reason": "Completed",
                                "startedAt": "2018-11-05T05:07:44Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "100.96.11.25",
                "qosClass": "Burstable",
                "startTime": "2018-11-05T05:07:33Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-05T05:07:33Z",
                "generateName": "staging-fluentd-",
                "labels": {
                    "app": "fluentd",
                    "controller-revision-hash": "167092438",
                    "pod-template-generation": "1",
                    "release": "staging-fluentd"
                },
                "name": "staging-fluentd-mxp9c",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-fluentd",
                        "uid": "b416435c-e0b8-11e8-aa6d-12da7ccbe390"
                    }
                ],
                "resourceVersion": "1758379",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-fluentd-mxp9c",
                "uid": "b41b8402-e0b8-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "AWS_REGION",
                                "value": "us-east-1"
                            },
                            {
                                "name": "LOG_GROUP_NAME",
                                "value": "kubernetes"
                            },
                            {
                                "name": "FLUENT_UID",
                                "value": "0"
                            },
                            {
                                "name": "S3_BUCKET_NAME",
                                "value": "peopleconnect-staging-logs"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imagePullPolicy": "Always",
                        "name": "staging-fluentd",
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/log",
                                "name": "varlog"
                            },
                            {
                                "mountPath": "/var/lib/docker/containers",
                                "name": "varlibdockercontainers",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/fluentd/etc",
                                "name": "config"
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/log/applogs",
                                "name": "varlogapplogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "cp /config-volume/* /etc/fluentd/"
                        ],
                        "image": "busybox",
                        "imagePullPolicy": "Always",
                        "name": "copy-fluentd-config",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config-volume",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/etc/fluentd",
                                "name": "config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "ip-10-122-99-218.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsUser": 0
                },
                "serviceAccount": "staging-fluentd",
                "serviceAccountName": "staging-fluentd",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        },
                        "name": "varlog"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/docker/containers",
                            "type": ""
                        },
                        "name": "varlibdockercontainers"
                    },
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/applogs",
                            "type": ""
                        },
                        "name": "varlogapplogs"
                    },
                    {
                        "emptyDir": {},
                        "name": "config"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-fluentd"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "staging-fluentd-token-vd92x",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-fluentd-token-vd92x"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:45Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:54Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:33Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://b1a1ffd276d0d554fe07b9cbcf560a11bb8975238a88f1709e3df4f2e9165d28",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd@sha256:33d5e29d51b6ae2aaa28452d5387df6592a724347c94f1b470a236266d921964",
                        "lastState": {},
                        "name": "staging-fluentd",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-05T05:07:53Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.99.218",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://b63eae90f98c211e68a9a5650d28ae07348b18fb7dc0c619cc0b396a6aed5a76",
                        "image": "busybox:latest",
                        "imageID": "docker-pullable://busybox@sha256:2a03a6059f21e150ae84b0973863609494aad70f0a80eaeb64bddd8d92465812",
                        "lastState": {},
                        "name": "copy-fluentd-config",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://b63eae90f98c211e68a9a5650d28ae07348b18fb7dc0c619cc0b396a6aed5a76",
                                "exitCode": 0,
                                "finishedAt": "2018-11-05T05:07:44Z",
                                "reason": "Completed",
                                "startedAt": "2018-11-05T05:07:44Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "100.96.19.12",
                "qosClass": "Burstable",
                "startTime": "2018-11-05T05:07:33Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-05T05:07:33Z",
                "generateName": "staging-fluentd-",
                "labels": {
                    "app": "fluentd",
                    "controller-revision-hash": "167092438",
                    "pod-template-generation": "1",
                    "release": "staging-fluentd"
                },
                "name": "staging-fluentd-p8kfc",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-fluentd",
                        "uid": "b416435c-e0b8-11e8-aa6d-12da7ccbe390"
                    }
                ],
                "resourceVersion": "1758383",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-fluentd-p8kfc",
                "uid": "b41d8ab0-e0b8-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "AWS_REGION",
                                "value": "us-east-1"
                            },
                            {
                                "name": "LOG_GROUP_NAME",
                                "value": "kubernetes"
                            },
                            {
                                "name": "FLUENT_UID",
                                "value": "0"
                            },
                            {
                                "name": "S3_BUCKET_NAME",
                                "value": "peopleconnect-staging-logs"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imagePullPolicy": "Always",
                        "name": "staging-fluentd",
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/log",
                                "name": "varlog"
                            },
                            {
                                "mountPath": "/var/lib/docker/containers",
                                "name": "varlibdockercontainers",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/fluentd/etc",
                                "name": "config"
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/log/applogs",
                                "name": "varlogapplogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "cp /config-volume/* /etc/fluentd/"
                        ],
                        "image": "busybox",
                        "imagePullPolicy": "Always",
                        "name": "copy-fluentd-config",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config-volume",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/etc/fluentd",
                                "name": "config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "ip-10-122-107-159.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsUser": 0
                },
                "serviceAccount": "staging-fluentd",
                "serviceAccountName": "staging-fluentd",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        },
                        "name": "varlog"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/docker/containers",
                            "type": ""
                        },
                        "name": "varlibdockercontainers"
                    },
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/applogs",
                            "type": ""
                        },
                        "name": "varlogapplogs"
                    },
                    {
                        "emptyDir": {},
                        "name": "config"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-fluentd"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "staging-fluentd-token-vd92x",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-fluentd-token-vd92x"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:44Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:54Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:33Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://d51310e08fd0747d590246395ce5173cd195cacc1c885e222b55d2077b7d527d",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd@sha256:33d5e29d51b6ae2aaa28452d5387df6592a724347c94f1b470a236266d921964",
                        "lastState": {},
                        "name": "staging-fluentd",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-05T05:07:54Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.107.159",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://02e3fcc79ee6614deafdcbd4a2069d0e0ba2938dfba4a8024d4453c067ac1348",
                        "image": "busybox:latest",
                        "imageID": "docker-pullable://busybox@sha256:2a03a6059f21e150ae84b0973863609494aad70f0a80eaeb64bddd8d92465812",
                        "lastState": {},
                        "name": "copy-fluentd-config",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://02e3fcc79ee6614deafdcbd4a2069d0e0ba2938dfba4a8024d4453c067ac1348",
                                "exitCode": 0,
                                "finishedAt": "2018-11-05T05:07:44Z",
                                "reason": "Completed",
                                "startedAt": "2018-11-05T05:07:44Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "100.96.20.8",
                "qosClass": "Burstable",
                "startTime": "2018-11-05T05:07:33Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-05T05:07:33Z",
                "generateName": "staging-fluentd-",
                "labels": {
                    "app": "fluentd",
                    "controller-revision-hash": "167092438",
                    "pod-template-generation": "1",
                    "release": "staging-fluentd"
                },
                "name": "staging-fluentd-pdrgf",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-fluentd",
                        "uid": "b416435c-e0b8-11e8-aa6d-12da7ccbe390"
                    }
                ],
                "resourceVersion": "1758361",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-fluentd-pdrgf",
                "uid": "b41a2e32-e0b8-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "AWS_REGION",
                                "value": "us-east-1"
                            },
                            {
                                "name": "LOG_GROUP_NAME",
                                "value": "kubernetes"
                            },
                            {
                                "name": "FLUENT_UID",
                                "value": "0"
                            },
                            {
                                "name": "S3_BUCKET_NAME",
                                "value": "peopleconnect-staging-logs"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imagePullPolicy": "Always",
                        "name": "staging-fluentd",
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/log",
                                "name": "varlog"
                            },
                            {
                                "mountPath": "/var/lib/docker/containers",
                                "name": "varlibdockercontainers",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/fluentd/etc",
                                "name": "config"
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/log/applogs",
                                "name": "varlogapplogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "cp /config-volume/* /etc/fluentd/"
                        ],
                        "image": "busybox",
                        "imagePullPolicy": "Always",
                        "name": "copy-fluentd-config",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config-volume",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/etc/fluentd",
                                "name": "config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "ip-10-122-52-0.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsUser": 0
                },
                "serviceAccount": "staging-fluentd",
                "serviceAccountName": "staging-fluentd",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        },
                        "name": "varlog"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/docker/containers",
                            "type": ""
                        },
                        "name": "varlibdockercontainers"
                    },
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/applogs",
                            "type": ""
                        },
                        "name": "varlogapplogs"
                    },
                    {
                        "emptyDir": {},
                        "name": "config"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-fluentd"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "staging-fluentd-token-vd92x",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-fluentd-token-vd92x"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:44Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:52Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:33Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://7de6d52d8672f10a80c816cae81487511b28da9ba8ccfc7c1c6670d78dfe6a1f",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd@sha256:33d5e29d51b6ae2aaa28452d5387df6592a724347c94f1b470a236266d921964",
                        "lastState": {},
                        "name": "staging-fluentd",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-05T05:07:52Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.52.0",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://a02003de13bb380c9191ca0943cfbd4cac6f2c8be9bc20162fcbe7127ef2f13f",
                        "image": "busybox:latest",
                        "imageID": "docker-pullable://busybox@sha256:2a03a6059f21e150ae84b0973863609494aad70f0a80eaeb64bddd8d92465812",
                        "lastState": {},
                        "name": "copy-fluentd-config",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://a02003de13bb380c9191ca0943cfbd4cac6f2c8be9bc20162fcbe7127ef2f13f",
                                "exitCode": 0,
                                "finishedAt": "2018-11-05T05:07:44Z",
                                "reason": "Completed",
                                "startedAt": "2018-11-05T05:07:44Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "100.96.10.24",
                "qosClass": "Burstable",
                "startTime": "2018-11-05T05:07:33Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-05T05:07:33Z",
                "generateName": "staging-fluentd-",
                "labels": {
                    "app": "fluentd",
                    "controller-revision-hash": "167092438",
                    "pod-template-generation": "1",
                    "release": "staging-fluentd"
                },
                "name": "staging-fluentd-rj5d7",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-fluentd",
                        "uid": "b416435c-e0b8-11e8-aa6d-12da7ccbe390"
                    }
                ],
                "resourceVersion": "1899935",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-fluentd-rj5d7",
                "uid": "b4226b4c-e0b8-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "AWS_REGION",
                                "value": "us-east-1"
                            },
                            {
                                "name": "LOG_GROUP_NAME",
                                "value": "kubernetes"
                            },
                            {
                                "name": "FLUENT_UID",
                                "value": "0"
                            },
                            {
                                "name": "S3_BUCKET_NAME",
                                "value": "peopleconnect-staging-logs"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imagePullPolicy": "Always",
                        "name": "staging-fluentd",
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/log",
                                "name": "varlog"
                            },
                            {
                                "mountPath": "/var/lib/docker/containers",
                                "name": "varlibdockercontainers",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/fluentd/etc",
                                "name": "config"
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/log/applogs",
                                "name": "varlogapplogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "cp /config-volume/* /etc/fluentd/"
                        ],
                        "image": "busybox",
                        "imagePullPolicy": "Always",
                        "name": "copy-fluentd-config",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config-volume",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/etc/fluentd",
                                "name": "config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "ip-10-122-82-27.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsUser": 0
                },
                "serviceAccount": "staging-fluentd",
                "serviceAccountName": "staging-fluentd",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        },
                        "name": "varlog"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/docker/containers",
                            "type": ""
                        },
                        "name": "varlibdockercontainers"
                    },
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/applogs",
                            "type": ""
                        },
                        "name": "varlogapplogs"
                    },
                    {
                        "emptyDir": {},
                        "name": "config"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-fluentd"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "staging-fluentd-token-vd92x",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-fluentd-token-vd92x"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:45Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T20:16:34Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:33Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://060163e5bd10d9134b85f654f791b93cd9b3b02496a3e93d27b956ec24789021",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd@sha256:3dab8631188f84e2b687ef8efa93c7d8f8ed943946893f1f0f2d7c36cd49f0f0",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://08df9f4e0ea84b52508b02bafed876464c88e5b4a051b710e2652f5304d73862",
                                "exitCode": 137,
                                "finishedAt": "2018-11-05T20:16:13Z",
                                "reason": "Error",
                                "startedAt": "2018-11-05T05:07:53Z"
                            }
                        },
                        "name": "staging-fluentd",
                        "ready": true,
                        "restartCount": 1,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-05T20:16:34Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.82.27",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://0467f5a7ad6dfa4b2edcf12ff47b875644658be86acfeb6c2b3cca239be03d7b",
                        "image": "busybox:latest",
                        "imageID": "docker-pullable://busybox@sha256:2a03a6059f21e150ae84b0973863609494aad70f0a80eaeb64bddd8d92465812",
                        "lastState": {},
                        "name": "copy-fluentd-config",
                        "ready": true,
                        "restartCount": 1,
                        "state": {
                            "terminated": {
                                "containerID": "docker://0467f5a7ad6dfa4b2edcf12ff47b875644658be86acfeb6c2b3cca239be03d7b",
                                "exitCode": 0,
                                "finishedAt": "2018-11-05T20:16:30Z",
                                "reason": "Completed",
                                "startedAt": "2018-11-05T20:16:30Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "100.96.15.29",
                "qosClass": "Burstable",
                "startTime": "2018-11-05T05:07:33Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-05T06:33:37Z",
                "generateName": "staging-fluentd-",
                "labels": {
                    "app": "fluentd",
                    "controller-revision-hash": "520412540",
                    "pod-template-generation": "4",
                    "release": "staging-fluentd"
                },
                "name": "staging-fluentd-szjzr",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-fluentd",
                        "uid": "b416435c-e0b8-11e8-aa6d-12da7ccbe390"
                    }
                ],
                "resourceVersion": "1771892",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-fluentd-szjzr",
                "uid": "ba06b6f6-e0c4-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "AWS_REGION",
                                "value": "us-east-1"
                            },
                            {
                                "name": "LOG_GROUP_NAME",
                                "value": "kubernetes"
                            },
                            {
                                "name": "FLUENT_UID",
                                "value": "0"
                            },
                            {
                                "name": "FLUENTD_OPT",
                                "value": "-qq"
                            },
                            {
                                "name": "S3_BUCKET_NAME",
                                "value": "peopleconnect-staging-logs"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imagePullPolicy": "Always",
                        "name": "staging-fluentd",
                        "resources": {
                            "limits": {
                                "cpu": "400m",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/log",
                                "name": "varlog"
                            },
                            {
                                "mountPath": "/var/lib/docker/containers",
                                "name": "varlibdockercontainers",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/fluentd/etc",
                                "name": "config"
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/log/applogs",
                                "name": "varlogapplogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "cp /config-volume/* /etc/fluentd/"
                        ],
                        "image": "busybox",
                        "imagePullPolicy": "Always",
                        "name": "copy-fluentd-config",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config-volume",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/etc/fluentd",
                                "name": "config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "ip-10-122-104-107.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsUser": 0
                },
                "serviceAccount": "staging-fluentd",
                "serviceAccountName": "staging-fluentd",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        },
                        "name": "varlog"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/docker/containers",
                            "type": ""
                        },
                        "name": "varlibdockercontainers"
                    },
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/applogs",
                            "type": ""
                        },
                        "name": "varlogapplogs"
                    },
                    {
                        "emptyDir": {},
                        "name": "config"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-fluentd"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "staging-fluentd-token-vd92x",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-fluentd-token-vd92x"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T06:33:49Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T06:33:50Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T06:33:37Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://51c6987673c90462ba2a0d4e8f09741e8d3f70d565c38b174231b59b9fd17167",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd@sha256:33d5e29d51b6ae2aaa28452d5387df6592a724347c94f1b470a236266d921964",
                        "lastState": {},
                        "name": "staging-fluentd",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-05T06:33:50Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.104.107",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://c311454bee428872f5ea3008a91e3c1dee84bcd4b542163576d988f52fde952c",
                        "image": "busybox:latest",
                        "imageID": "docker-pullable://busybox@sha256:2a03a6059f21e150ae84b0973863609494aad70f0a80eaeb64bddd8d92465812",
                        "lastState": {},
                        "name": "copy-fluentd-config",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://c311454bee428872f5ea3008a91e3c1dee84bcd4b542163576d988f52fde952c",
                                "exitCode": 0,
                                "finishedAt": "2018-11-05T06:33:48Z",
                                "reason": "Completed",
                                "startedAt": "2018-11-05T06:33:48Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "100.96.4.19",
                "qosClass": "Burstable",
                "startTime": "2018-11-05T06:33:37Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-05T05:07:33Z",
                "generateName": "staging-fluentd-",
                "labels": {
                    "app": "fluentd",
                    "controller-revision-hash": "167092438",
                    "pod-template-generation": "1",
                    "release": "staging-fluentd"
                },
                "name": "staging-fluentd-wgkp8",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "staging-fluentd",
                        "uid": "b416435c-e0b8-11e8-aa6d-12da7ccbe390"
                    }
                ],
                "resourceVersion": "1758358",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-fluentd-wgkp8",
                "uid": "b422c79d-e0b8-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "AWS_REGION",
                                "value": "us-east-1"
                            },
                            {
                                "name": "LOG_GROUP_NAME",
                                "value": "kubernetes"
                            },
                            {
                                "name": "FLUENT_UID",
                                "value": "0"
                            },
                            {
                                "name": "S3_BUCKET_NAME",
                                "value": "peopleconnect-staging-logs"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imagePullPolicy": "Always",
                        "name": "staging-fluentd",
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/log",
                                "name": "varlog"
                            },
                            {
                                "mountPath": "/var/lib/docker/containers",
                                "name": "varlibdockercontainers",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/fluentd/etc",
                                "name": "config"
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/log/applogs",
                                "name": "varlogapplogs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "cp /config-volume/* /etc/fluentd/"
                        ],
                        "image": "busybox",
                        "imagePullPolicy": "Always",
                        "name": "copy-fluentd-config",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config-volume",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/etc/fluentd",
                                "name": "config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-fluentd-token-vd92x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "ip-10-122-77-93.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsUser": 0
                },
                "serviceAccount": "staging-fluentd",
                "serviceAccountName": "staging-fluentd",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        },
                        "name": "varlog"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/docker/containers",
                            "type": ""
                        },
                        "name": "varlibdockercontainers"
                    },
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/applogs",
                            "type": ""
                        },
                        "name": "varlogapplogs"
                    },
                    {
                        "emptyDir": {},
                        "name": "config"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "staging-fluentd"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "staging-fluentd-token-vd92x",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-fluentd-token-vd92x"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:45Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:52Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T05:07:33Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://852fbc2cba3b04054caee6fdf9def86dd599e81d5aa09670a9f3e42c815c5577",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd:fix-wq-32254-fluentd-flush-interval",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/ops/fluentd@sha256:33d5e29d51b6ae2aaa28452d5387df6592a724347c94f1b470a236266d921964",
                        "lastState": {},
                        "name": "staging-fluentd",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-05T05:07:52Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.77.93",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://9eac4c7823a46f44a9a752fb4b64b364fe45e791bb2f3b4ef29a44736bf1bf02",
                        "image": "busybox:latest",
                        "imageID": "docker-pullable://busybox@sha256:2a03a6059f21e150ae84b0973863609494aad70f0a80eaeb64bddd8d92465812",
                        "lastState": {},
                        "name": "copy-fluentd-config",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://9eac4c7823a46f44a9a752fb4b64b364fe45e791bb2f3b4ef29a44736bf1bf02",
                                "exitCode": 0,
                                "finishedAt": "2018-11-05T05:07:44Z",
                                "reason": "Completed",
                                "startedAt": "2018-11-05T05:07:44Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "100.96.18.9",
                "qosClass": "Burstable",
                "startTime": "2018-11-05T05:07:33Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-08T23:15:26Z",
                "generateName": "staging-hoamockfrontend-hoamockfrontend-6c6b969b97-",
                "labels": {
                    "app": "staging-hoamockfrontend-hoamockfrontend",
                    "pod-template-hash": "2726525653"
                },
                "name": "staging-hoamockfrontend-hoamockfrontend-6c6b969b97-4vb6q",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-hoamockfrontend-hoamockfrontend-6c6b969b97",
                        "uid": "7b1814eb-db0f-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2601823",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-hoamockfrontend-hoamockfrontend-6c6b969b97-4vb6q",
                "uid": "2cff130f-e3ac-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "hoamockfrontend"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/hoamockfrontend:master",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/hoamockfrontend/ping",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "hoamockfrontend",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/hoamockfrontend/ping",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "500m",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "50m",
                                "memory": "256Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-52-0.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-orderservice",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:15:26Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:16:36Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:15:26Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://fe15a5211956770a769d53a811beb24a1760f2de13763a78337882fa85567e26",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/hoamockfrontend:master",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/hoamockfrontend@sha256:3749a9625bef477e79a2681d351514f3619d412e103b41d3f457a7b8e696e680",
                        "lastState": {},
                        "name": "hoamockfrontend",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T23:15:43Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.52.0",
                "phase": "Running",
                "podIP": "100.96.10.34",
                "qosClass": "Burstable",
                "startTime": "2018-11-08T23:15:26Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-10-29T09:52:13Z",
                "generateName": "staging-hoamockfrontend-hoamockfrontend-6c6b969b97-",
                "labels": {
                    "app": "staging-hoamockfrontend-hoamockfrontend",
                    "pod-template-hash": "2726525653"
                },
                "name": "staging-hoamockfrontend-hoamockfrontend-6c6b969b97-9t2f2",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-hoamockfrontend-hoamockfrontend-6c6b969b97",
                        "uid": "7b1814eb-db0f-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "239160",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-hoamockfrontend-hoamockfrontend-6c6b969b97-9t2f2",
                "uid": "4fa347ae-db60-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_NAME",
                                "value": "hoamockfrontend"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DB_POD_NAME",
                                "value": "postgresql"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/hoamockfrontend:master",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/hoamockfrontend/ping",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "hoamockfrontend",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/hoamockfrontend/ping",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "500m",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "50m",
                                "memory": "256Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/config/global",
                                "name": "global"
                            },
                            {
                                "mountPath": "/config/local",
                                "name": "local"
                            },
                            {
                                "mountPath": "/secrets/global",
                                "name": "secrets-global",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-104-107.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-global",
                            "optional": true
                        },
                        "name": "global"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "commerce-orderservice",
                            "optional": true
                        },
                        "name": "local"
                    },
                    {
                        "name": "secrets-global",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "commerce-global"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T09:52:13Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T09:53:22Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T09:52:13Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://a0d84d68dc541f3dffcb846c187e11549ca7901e372b9c46b8fa6207fa237f55",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/hoamockfrontend:master",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/hoamockfrontend@sha256:3749a9625bef477e79a2681d351514f3619d412e103b41d3f457a7b8e696e680",
                        "lastState": {},
                        "name": "hoamockfrontend",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-29T09:52:30Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.104.107",
                "phase": "Running",
                "podIP": "100.96.4.8",
                "qosClass": "Burstable",
                "startTime": "2018-10-29T09:52:13Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-08T23:15:26Z",
                "generateName": "staging-kong-dashboard-kong-dashboard-679f8d4c8-",
                "labels": {
                    "app": "staging-kong-dashboard-kong-dashboard",
                    "pod-template-hash": "235948074"
                },
                "name": "staging-kong-dashboard-kong-dashboard-679f8d4c8-5l4f7",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-kong-dashboard-kong-dashboard-679f8d4c8",
                        "uid": "6913f774-db0b-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2601705",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-kong-dashboard-kong-dashboard-679f8d4c8-5l4f7",
                "uid": "2d06cb18-e3ac-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "ADMIN_USER",
                                "value": "admin"
                            },
                            {
                                "name": "ADMIN_PASSWD",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "password",
                                        "name": "staging-kong-dashboard-kong-dashboard"
                                    }
                                }
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/kong-dashboard:master",
                        "imagePullPolicy": "Always",
                        "name": "kong-dashboard",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "128Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "128Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-73-102.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:15:26Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:15:54Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:15:26Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://f24f0a5f90b0991f53c159555b7c471d70845ebeb0ee183308ffcfc0eb5c2716",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/kong-dashboard:master",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/kong-dashboard@sha256:ab89fa0ba1447ae5189b81f6ec69c9b3bbb5b9ec166935d09030fa467cdc83f0",
                        "lastState": {},
                        "name": "kong-dashboard",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T23:15:54Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.73.102",
                "phase": "Running",
                "podIP": "100.96.11.34",
                "qosClass": "Guaranteed",
                "startTime": "2018-11-08T23:15:26Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-10-31T12:53:09Z",
                "generateName": "staging-kong-dashboard-kong-dashboard-679f8d4c8-",
                "labels": {
                    "app": "staging-kong-dashboard-kong-dashboard",
                    "pod-template-hash": "235948074"
                },
                "name": "staging-kong-dashboard-kong-dashboard-679f8d4c8-jljrs",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-kong-dashboard-kong-dashboard-679f8d4c8",
                        "uid": "6913f774-db0b-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "709322",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-kong-dashboard-kong-dashboard-679f8d4c8-jljrs",
                "uid": "eb6988ec-dd0b-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "ADMIN_USER",
                                "value": "admin"
                            },
                            {
                                "name": "ADMIN_PASSWD",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "password",
                                        "name": "staging-kong-dashboard-kong-dashboard"
                                    }
                                }
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/kong-dashboard:master",
                        "imagePullPolicy": "Always",
                        "name": "kong-dashboard",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "128Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "128Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-107-173.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T12:53:09Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T12:53:21Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T12:53:09Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://142b9ad6562d4d28fa87ed186bd9181611f5017290990c43b97d8e8049a45c05",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/kong-dashboard:master",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/kong-dashboard@sha256:ab89fa0ba1447ae5189b81f6ec69c9b3bbb5b9ec166935d09030fa467cdc83f0",
                        "lastState": {},
                        "name": "kong-dashboard",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-31T12:53:21Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.107.173",
                "phase": "Running",
                "podIP": "100.96.7.25",
                "qosClass": "Guaranteed",
                "startTime": "2018-10-31T12:53:09Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "ad.datadoghq.com/kong.check_names": "[\"http_check\"]",
                    "ad.datadoghq.com/kong.init_configs": "[{}]",
                    "ad.datadoghq.com/kong.instances": "[{\"name\": \"kong\", \"url\":\"http://%%host%%:8001/status\"}]",
                    "pod.alpha.kubernetes.io/initialized": "true"
                },
                "creationTimestamp": "2018-10-29T09:52:13Z",
                "generateName": "staging-kong-kong-7d95f94698-",
                "labels": {
                    "app": "staging-kong-kong",
                    "chart": "kong-1.0.0",
                    "heritage": "Tiller",
                    "name": "staging-kong-kong",
                    "pod-template-hash": "3851950254",
                    "release": "staging-kong"
                },
                "name": "staging-kong-kong-7d95f94698-96l5w",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-kong-kong-7d95f94698",
                        "uid": "0760baa4-db0b-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "239136",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-kong-kong-7d95f94698-96l5w",
                "uid": "4fab7391-db60-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "KONG_DATABASE",
                                "value": "postgres"
                            },
                            {
                                "name": "KONG_PG_DATABASE",
                                "value": "kong"
                            },
                            {
                                "name": "KONG_PG_USER",
                                "value": "kong"
                            },
                            {
                                "name": "KONG_PG_PASSWORD",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "kong-db.password",
                                        "name": "commerce-kong"
                                    }
                                }
                            },
                            {
                                "name": "KONG_PG_HOST",
                                "value": "kong-db01.staging.aws.ppcn.us"
                            },
                            {
                                "name": "KONG_PG_PORT",
                                "value": "5432"
                            },
                            {
                                "name": "KONG_LOG_LEVEL",
                                "value": "debug"
                            },
                            {
                                "name": "KONG_DB_CACHE_TTL",
                                "value": "3600"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/kong:master",
                        "imagePullPolicy": "Always",
                        "name": "kong",
                        "ports": [
                            {
                                "containerPort": 8001,
                                "name": "admin",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8000,
                                "name": "proxy",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8443,
                                "name": "proxy-ssl",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8444,
                                "name": "admin-ssl",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "512Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "256Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/configmap/apidocs",
                                "name": "init-commerce-apidocs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/kong",
                                "name": "secrets-kong",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/secrets/certs",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-104-107.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "init-commerce-apidocs",
                            "optional": true
                        },
                        "name": "init-commerce-apidocs"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "name": "secrets-kong",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-kong"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T09:52:13Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T09:53:13Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T09:52:13Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://2752a61b4da5f96f54c7b553d0ee422c936152812310806c006359b4eaebd573",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/kong:master",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/kong@sha256:bbbcadf5bd1e60a774b0cbf97caf49c25b3971a231b1c0c7d67a8c5063f99b65",
                        "lastState": {},
                        "name": "kong",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-29T09:53:12Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.104.107",
                "phase": "Running",
                "podIP": "100.96.4.10",
                "qosClass": "Burstable",
                "startTime": "2018-10-29T09:52:13Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "ad.datadoghq.com/kong.check_names": "[\"http_check\"]",
                    "ad.datadoghq.com/kong.init_configs": "[{}]",
                    "ad.datadoghq.com/kong.instances": "[{\"name\": \"kong\", \"url\":\"http://%%host%%:8001/status\"}]",
                    "pod.alpha.kubernetes.io/initialized": "true"
                },
                "creationTimestamp": "2018-10-28T23:41:45Z",
                "generateName": "staging-kong-kong-7d95f94698-",
                "labels": {
                    "app": "staging-kong-kong",
                    "chart": "kong-1.0.0",
                    "heritage": "Tiller",
                    "name": "staging-kong-kong",
                    "pod-template-hash": "3851950254",
                    "release": "staging-kong"
                },
                "name": "staging-kong-kong-7d95f94698-kdzmt",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-kong-kong-7d95f94698",
                        "uid": "0760baa4-db0b-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "149212",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-kong-kong-7d95f94698-kdzmt",
                "uid": "0768fd90-db0b-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "KONG_DATABASE",
                                "value": "postgres"
                            },
                            {
                                "name": "KONG_PG_DATABASE",
                                "value": "kong"
                            },
                            {
                                "name": "KONG_PG_USER",
                                "value": "kong"
                            },
                            {
                                "name": "KONG_PG_PASSWORD",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "kong-db.password",
                                        "name": "commerce-kong"
                                    }
                                }
                            },
                            {
                                "name": "KONG_PG_HOST",
                                "value": "kong-db01.staging.aws.ppcn.us"
                            },
                            {
                                "name": "KONG_PG_PORT",
                                "value": "5432"
                            },
                            {
                                "name": "KONG_LOG_LEVEL",
                                "value": "debug"
                            },
                            {
                                "name": "KONG_DB_CACHE_TTL",
                                "value": "3600"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/kong:master",
                        "imagePullPolicy": "Always",
                        "name": "kong",
                        "ports": [
                            {
                                "containerPort": 8001,
                                "name": "admin",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8000,
                                "name": "proxy",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8443,
                                "name": "proxy-ssl",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8444,
                                "name": "admin-ssl",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "512Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "256Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/configmap/apidocs",
                                "name": "init-commerce-apidocs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/applogs",
                                "name": "applogs"
                            },
                            {
                                "mountPath": "/secrets/kong",
                                "name": "secrets-kong",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/secrets/certs",
                                "name": "secrets-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-54-13.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "init-commerce-apidocs",
                            "optional": true
                        },
                        "name": "init-commerce-apidocs"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/applogs",
                            "type": ""
                        },
                        "name": "applogs"
                    },
                    {
                        "name": "secrets-kong",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-kong"
                        }
                    },
                    {
                        "name": "secrets-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "commerce-certs"
                        }
                    },
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-28T23:41:45Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-28T23:42:05Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-28T23:41:45Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://cf72b94a0ce5fd1353d3f0d66023ee7d26e42ae37a49e90146fb079d70f4345e",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/kong:master",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/commerce/kong@sha256:bbbcadf5bd1e60a774b0cbf97caf49c25b3971a231b1c0c7d67a8c5063f99b65",
                        "lastState": {},
                        "name": "kong",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-28T23:42:04Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.54.13",
                "phase": "Running",
                "podIP": "100.96.9.3",
                "qosClass": "Burstable",
                "startTime": "2018-10-28T23:41:45Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-10-31T16:34:47Z",
                "generateName": "staging-mysql-s3-connector-sink-s3-connector-676d59b647-",
                "labels": {
                    "app": "sink-s3-connector",
                    "pod-template-hash": "2328156203",
                    "release": "staging-mysql-s3-connector"
                },
                "name": "staging-mysql-s3-connector-sink-s3-connector-676d59b647-bdjpb",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-mysql-s3-connector-sink-s3-connector-676d59b647",
                        "uid": "e17ce4db-dd2a-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2795920",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-mysql-s3-connector-sink-s3-connector-676d59b647-bdjpb",
                "uid": "e18a3f24-dd2a-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/etc/confluent/docker/run"
                        ],
                        "env": [
                            {
                                "name": "CONNECT_PLUGIN_PATH",
                                "value": "/usr/share/java"
                            },
                            {
                                "name": "CONNECT_BOOTSTRAP_SERVERS",
                                "value": "kafka-broker01.staging.aws.ppcn.us:9092,kafka-broker02.staging.aws.ppcn.us:9092,kafka-broker03.staging.aws.ppcn.us:9092,kafka-broker04.staging.aws.ppcn.us:9092,kafka-broker05.staging.aws.ppcn.us:9092"
                            },
                            {
                                "name": "CONNECT_ZOOKEEPER_CONNECT",
                                "value": "kafka-broker01.staging.aws.ppcn.us:2181,kafka-broker02.staging.aws.ppcn.us:2181,kafka-broker03.staging.aws.ppcn.us:2181,kafka-broker04.staging.aws.ppcn.us:2181,kafka-broker05.staging.aws.ppcn.us:2181"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER",
                                "value": "io.confluent.connect.avro.AvroConverter"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER",
                                "value": "io.confluent.connect.avro.AvroConverter"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE",
                                "value": "true"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE",
                                "value": "true"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_TOPIC",
                                "value": "mysql-s3-configs"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_TOPIC",
                                "value": "mysql-s3-offsets"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_TOPIC",
                                "value": "mysql-s3-status"
                            },
                            {
                                "name": "CONNECT_INTERNAL_KEY_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_INTERNAL_VALUE_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-mysql-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-mysql-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_GROUP_ID",
                                "value": "mysql-s3-sink"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_FLUSH_INTERVAL_MS",
                                "value": "10000"
                            },
                            {
                                "name": "CONNECT_REST_ADVERTISED_HOST_NAME",
                                "value": "staging-mysql-s3-connector-sink-s3-connector"
                            },
                            {
                                "name": "CONNECT_LOG4J_ROOT_LOGLEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "CONNECT_CONSUMER_RETRIES",
                                "value": "10"
                            },
                            {
                                "name": "CONNECT_CONSUMER_RETRY_OFF_MS",
                                "value": "10000"
                            },
                            {
                                "name": "KAFKA_HEAP_OPTS",
                                "value": "-Xmx8G"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-s3-connector:master",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8083,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 300,
                            "periodSeconds": 600,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "sink-s3-connector",
                        "ports": [
                            {
                                "containerPort": 8083,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8083,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 20,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "8Gi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-107-173.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:34:47Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-09T20:07:21Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:34:47Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4390e64610932573441168f53e9e0b787d6492d5434a6e6faf8c7b65af61b64f",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-s3-connector:master",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-s3-connector@sha256:3d25fa1ff398652a80250aa3da3284dacd57b20ef1001ac4a33db7d621894671",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://96ead11c358969520bbbc8cf54a30107aad10013afe9854df84571c73e55d13f",
                                "exitCode": 137,
                                "finishedAt": "2018-11-09T20:05:57Z",
                                "reason": "OOMKilled",
                                "startedAt": "2018-11-04T23:51:17Z"
                            }
                        },
                        "name": "sink-s3-connector",
                        "ready": true,
                        "restartCount": 3,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-09T20:05:59Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.107.173",
                "phase": "Running",
                "podIP": "100.96.7.31",
                "qosClass": "Burstable",
                "startTime": "2018-10-31T16:34:47Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-08T23:15:26Z",
                "generateName": "staging-mysql-s3-connector-sink-s3-connector-676d59b647-",
                "labels": {
                    "app": "sink-s3-connector",
                    "pod-template-hash": "2328156203",
                    "release": "staging-mysql-s3-connector"
                },
                "name": "staging-mysql-s3-connector-sink-s3-connector-676d59b647-p5426",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-mysql-s3-connector-sink-s3-connector-676d59b647",
                        "uid": "e17ce4db-dd2a-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2601896",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-mysql-s3-connector-sink-s3-connector-676d59b647-p5426",
                "uid": "2d189db5-e3ac-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/etc/confluent/docker/run"
                        ],
                        "env": [
                            {
                                "name": "CONNECT_PLUGIN_PATH",
                                "value": "/usr/share/java"
                            },
                            {
                                "name": "CONNECT_BOOTSTRAP_SERVERS",
                                "value": "kafka-broker01.staging.aws.ppcn.us:9092,kafka-broker02.staging.aws.ppcn.us:9092,kafka-broker03.staging.aws.ppcn.us:9092,kafka-broker04.staging.aws.ppcn.us:9092,kafka-broker05.staging.aws.ppcn.us:9092"
                            },
                            {
                                "name": "CONNECT_ZOOKEEPER_CONNECT",
                                "value": "kafka-broker01.staging.aws.ppcn.us:2181,kafka-broker02.staging.aws.ppcn.us:2181,kafka-broker03.staging.aws.ppcn.us:2181,kafka-broker04.staging.aws.ppcn.us:2181,kafka-broker05.staging.aws.ppcn.us:2181"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER",
                                "value": "io.confluent.connect.avro.AvroConverter"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER",
                                "value": "io.confluent.connect.avro.AvroConverter"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE",
                                "value": "true"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE",
                                "value": "true"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_TOPIC",
                                "value": "mysql-s3-configs"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_TOPIC",
                                "value": "mysql-s3-offsets"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_TOPIC",
                                "value": "mysql-s3-status"
                            },
                            {
                                "name": "CONNECT_INTERNAL_KEY_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_INTERNAL_VALUE_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-mysql-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-mysql-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_GROUP_ID",
                                "value": "mysql-s3-sink"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_FLUSH_INTERVAL_MS",
                                "value": "10000"
                            },
                            {
                                "name": "CONNECT_REST_ADVERTISED_HOST_NAME",
                                "value": "staging-mysql-s3-connector-sink-s3-connector"
                            },
                            {
                                "name": "CONNECT_LOG4J_ROOT_LOGLEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "CONNECT_CONSUMER_RETRIES",
                                "value": "10"
                            },
                            {
                                "name": "CONNECT_CONSUMER_RETRY_OFF_MS",
                                "value": "10000"
                            },
                            {
                                "name": "KAFKA_HEAP_OPTS",
                                "value": "-Xmx8G"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-s3-connector:master",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8083,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 300,
                            "periodSeconds": 600,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "sink-s3-connector",
                        "ports": [
                            {
                                "containerPort": 8083,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8083,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 20,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "8Gi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-52-0.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:15:26Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:17:00Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:15:26Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://6ef0487a3f90c43daa41346869252f1deb7d80728fb6b7218567909d000c0504",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-s3-connector:master",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-s3-connector@sha256:3d25fa1ff398652a80250aa3da3284dacd57b20ef1001ac4a33db7d621894671",
                        "lastState": {},
                        "name": "sink-s3-connector",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T23:15:43Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.52.0",
                "phase": "Running",
                "podIP": "100.96.10.35",
                "qosClass": "Burstable",
                "startTime": "2018-11-08T23:15:26Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-10-31T16:58:18Z",
                "generateName": "staging-mysql-schema-registry-schema-registry-84c8f489c8-",
                "labels": {
                    "app": "schema-registry",
                    "pod-template-hash": "4074904574",
                    "release": "staging-mysql-schema-registry"
                },
                "name": "staging-mysql-schema-registry-schema-registry-84c8f489c8-b262j",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-mysql-schema-registry-schema-registry-84c8f489c8",
                        "uid": "0c90c10a-dcee-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "746615",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-mysql-schema-registry-schema-registry-84c8f489c8-b262j",
                "uid": "2a716826-dd2e-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "SCHEMA_REGISTRY_HOST_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL",
                                "value": "kafka-broker01.staging.aws.ppcn.us:2181,kafka-broker02.staging.aws.ppcn.us:2181,kafka-broker03.staging.aws.ppcn.us:2181,kafka-broker04.staging.aws.ppcn.us:2181,kafka-broker05.staging.aws.ppcn.us:2181/"
                            },
                            {
                                "name": "SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN",
                                "value": "*"
                            },
                            {
                                "name": "SCHEMA_REGISTRY_KAFKASTORE_TOPIC",
                                "value": "_mysqlschema"
                            },
                            {
                                "name": "SCHEMA_REGISTRY_SCHEMA_REGISTRY_GROUP_ID",
                                "value": "mysql_schema-registry"
                            },
                            {
                                "name": "SCHEMA_REGISTRY_SCHEMA_REGISTRY_ZK_NAMESPACE",
                                "value": "mysql_schema_registry"
                            }
                        ],
                        "image": "confluentinc/cp-schema-registry:4.1.2",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "schema-registry",
                        "ports": [
                            {
                                "containerPort": 8081,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-99-218.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:58:18Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:59:01Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:58:18Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://6b99b62624a9ed0c4335a09a0d5fa8459ae7cfb055c5221537b0c70dc9e3dd4b",
                        "image": "confluentinc/cp-schema-registry:4.1.2",
                        "imageID": "docker-pullable://confluentinc/cp-schema-registry@sha256:485050cab2cff291b7707f5c387a07678d8873a487bf6cee17dfd35977795451",
                        "lastState": {},
                        "name": "schema-registry",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-31T16:59:01Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.99.218",
                "phase": "Running",
                "podIP": "100.96.19.7",
                "qosClass": "BestEffort",
                "startTime": "2018-10-31T16:58:18Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-10-31T16:58:19Z",
                "generateName": "staging-mysql-schema-registry-schema-registry-84c8f489c8-",
                "labels": {
                    "app": "schema-registry",
                    "pod-template-hash": "4074904574",
                    "release": "staging-mysql-schema-registry"
                },
                "name": "staging-mysql-schema-registry-schema-registry-84c8f489c8-x2f4r",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-mysql-schema-registry-schema-registry-84c8f489c8",
                        "uid": "0c90c10a-dcee-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "746607",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-mysql-schema-registry-schema-registry-84c8f489c8-x2f4r",
                "uid": "2ad4f110-dd2e-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "SCHEMA_REGISTRY_HOST_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL",
                                "value": "kafka-broker01.staging.aws.ppcn.us:2181,kafka-broker02.staging.aws.ppcn.us:2181,kafka-broker03.staging.aws.ppcn.us:2181,kafka-broker04.staging.aws.ppcn.us:2181,kafka-broker05.staging.aws.ppcn.us:2181/"
                            },
                            {
                                "name": "SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN",
                                "value": "*"
                            },
                            {
                                "name": "SCHEMA_REGISTRY_KAFKASTORE_TOPIC",
                                "value": "_mysqlschema"
                            },
                            {
                                "name": "SCHEMA_REGISTRY_SCHEMA_REGISTRY_GROUP_ID",
                                "value": "mysql_schema-registry"
                            },
                            {
                                "name": "SCHEMA_REGISTRY_SCHEMA_REGISTRY_ZK_NAMESPACE",
                                "value": "mysql_schema_registry"
                            }
                        ],
                        "image": "confluentinc/cp-schema-registry:4.1.2",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "schema-registry",
                        "ports": [
                            {
                                "containerPort": 8081,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-77-93.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:58:19Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:59:00Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:58:19Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://79fb49a68a70ed6c742533f01696b4619ef15c847eee0f7b289efb92b801d05a",
                        "image": "confluentinc/cp-schema-registry:4.1.2",
                        "imageID": "docker-pullable://confluentinc/cp-schema-registry@sha256:485050cab2cff291b7707f5c387a07678d8873a487bf6cee17dfd35977795451",
                        "lastState": {},
                        "name": "schema-registry",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-31T16:58:59Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.77.93",
                "phase": "Running",
                "podIP": "100.96.18.6",
                "qosClass": "BestEffort",
                "startTime": "2018-10-31T16:58:19Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-10-31T14:10:55Z",
                "generateName": "staging-nginx-ingress-controller-79b9c88547-",
                "labels": {
                    "app": "nginx-ingress",
                    "component": "controller",
                    "pod-template-hash": "3565744103",
                    "release": "staging-nginx-ingress"
                },
                "name": "staging-nginx-ingress-controller-79b9c88547-4vdkl",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-nginx-ingress-controller-79b9c88547",
                        "uid": "fe70c11d-db08-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "721375",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-nginx-ingress-controller-79b9c88547-4vdkl",
                "uid": "c8416548-dd16-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "/nginx-ingress-controller",
                            "--default-backend-service=staging/staging-nginx-ingress-default-backend",
                            "--election-id=ingress-controller-leader",
                            "--ingress-class=nginx",
                            "--configmap=staging/staging-nginx-ingress-controller"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.20.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10254,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "nginx-ingress-controller",
                        "ports": [
                            {
                                "containerPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10254,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "runAsUser": 33
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-nginx-ingress-token-h9k55",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-107-173.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "staging-nginx-ingress",
                "serviceAccountName": "staging-nginx-ingress",
                "terminationGracePeriodSeconds": 60,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "staging-nginx-ingress-token-h9k55",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-nginx-ingress-token-h9k55"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T14:10:55Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T14:11:18Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T14:10:55Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://9700da84ed0b6969bb4c4c7d2ba5bf5456a8e877c0a2cf53a6cfe44b63817a31",
                        "image": "quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.20.0",
                        "imageID": "docker-pullable://quay.io/kubernetes-ingress-controller/nginx-ingress-controller@sha256:f6180c5397d2361c317aff1314dc192ab0f9f515346a5319422cdc264f05d2d9",
                        "lastState": {},
                        "name": "nginx-ingress-controller",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-31T14:11:06Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.107.173",
                "phase": "Running",
                "podIP": "100.96.7.30",
                "qosClass": "BestEffort",
                "startTime": "2018-10-31T14:10:55Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-10-29T09:36:16Z",
                "generateName": "staging-nginx-ingress-controller-79b9c88547-",
                "labels": {
                    "app": "nginx-ingress",
                    "component": "controller",
                    "pod-template-hash": "3565744103",
                    "release": "staging-nginx-ingress"
                },
                "name": "staging-nginx-ingress-controller-79b9c88547-ssgtx",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-nginx-ingress-controller-79b9c88547",
                        "uid": "fe70c11d-db08-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "269770",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-nginx-ingress-controller-79b9c88547-ssgtx",
                "uid": "157b5294-db5e-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "/nginx-ingress-controller",
                            "--default-backend-service=staging/staging-nginx-ingress-default-backend",
                            "--election-id=ingress-controller-leader",
                            "--ingress-class=nginx",
                            "--configmap=staging/staging-nginx-ingress-controller"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.20.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10254,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "nginx-ingress-controller",
                        "ports": [
                            {
                                "containerPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10254,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "runAsUser": 33
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-nginx-ingress-token-h9k55",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-52-0.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "staging-nginx-ingress",
                "serviceAccountName": "staging-nginx-ingress",
                "terminationGracePeriodSeconds": 60,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "staging-nginx-ingress-token-h9k55",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-nginx-ingress-token-h9k55"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T09:36:16Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T13:36:58Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T09:36:16Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://c42884a8ed968d7a7d6946209c686408657a54d9e035945719ebd32c71cb0e35",
                        "image": "quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.20.0",
                        "imageID": "docker-pullable://quay.io/kubernetes-ingress-controller/nginx-ingress-controller@sha256:f6180c5397d2361c317aff1314dc192ab0f9f515346a5319422cdc264f05d2d9",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://360fe9c3815885248fd0e33d922bff74467062e6bca75f337ebdf14547606377",
                                "exitCode": 143,
                                "finishedAt": "2018-10-29T13:36:40Z",
                                "reason": "Error",
                                "startedAt": "2018-10-29T13:36:17Z"
                            }
                        },
                        "name": "nginx-ingress-controller",
                        "ready": true,
                        "restartCount": 3,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-29T13:36:43Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.52.0",
                "phase": "Running",
                "podIP": "100.96.10.18",
                "qosClass": "BestEffort",
                "startTime": "2018-10-29T09:36:16Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-10-28T23:27:11Z",
                "generateName": "staging-nginx-ingress-default-backend-69c5db8b8b-",
                "labels": {
                    "app": "nginx-ingress",
                    "component": "default-backend",
                    "pod-template-hash": "2571864646",
                    "release": "staging-nginx-ingress"
                },
                "name": "staging-nginx-ingress-default-backend-69c5db8b8b-sr2gb",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-nginx-ingress-default-backend-69c5db8b8b",
                        "uid": "fe72c097-db08-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "147025",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-nginx-ingress-default-backend-69c5db8b8b-sr2gb",
                "uid": "fe75b15b-db08-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "image": "k8s.gcr.io/defaultbackend:1.4",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "nginx-ingress-default-backend",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-104-107.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 60,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-28T23:27:11Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-28T23:27:22Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-28T23:27:11Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://55bd6e91cd289c22ad4f4fd984a83619e0557ca4fbc96f44ea93fbd1d1429435",
                        "image": "k8s.gcr.io/defaultbackend:1.4",
                        "imageID": "docker-pullable://k8s.gcr.io/defaultbackend@sha256:865b0c35e6da393b8e80b7e3799f777572399a4cff047eb02a81fa6e7a48ed4b",
                        "lastState": {},
                        "name": "nginx-ingress-default-backend",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-28T23:27:22Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.104.107",
                "phase": "Running",
                "podIP": "100.96.4.2",
                "qosClass": "BestEffort",
                "startTime": "2018-10-28T23:27:11Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-08T23:15:26Z",
                "generateName": "staging-nginx-ingress-default-backend-69c5db8b8b-",
                "labels": {
                    "app": "nginx-ingress",
                    "component": "default-backend",
                    "pod-template-hash": "2571864646",
                    "release": "staging-nginx-ingress"
                },
                "name": "staging-nginx-ingress-default-backend-69c5db8b8b-w6hd8",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-nginx-ingress-default-backend-69c5db8b8b",
                        "uid": "fe72c097-db08-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "2601654",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-nginx-ingress-default-backend-69c5db8b8b-w6hd8",
                "uid": "2d20ba28-e3ac-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "image": "k8s.gcr.io/defaultbackend:1.4",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "nginx-ingress-default-backend",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-52-16.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 60,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:15:26Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:15:39Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-08T23:15:26Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://357217acf9be606438ce56429cce191ac806967949c0a37a67b34b7f375ee928",
                        "image": "k8s.gcr.io/defaultbackend:1.4",
                        "imageID": "docker-pullable://k8s.gcr.io/defaultbackend@sha256:865b0c35e6da393b8e80b7e3799f777572399a4cff047eb02a81fa6e7a48ed4b",
                        "lastState": {},
                        "name": "nginx-ingress-default-backend",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-08T23:15:38Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.52.16",
                "phase": "Running",
                "podIP": "100.96.16.16",
                "qosClass": "BestEffort",
                "startTime": "2018-11-08T23:15:26Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-10-31T16:58:17Z",
                "generateName": "staging-pg-s3-connector-sink-s3-connector-5d56fbb477-",
                "labels": {
                    "app": "sink-s3-connector",
                    "pod-template-hash": "1812966033",
                    "release": "staging-pg-s3-connector"
                },
                "name": "staging-pg-s3-connector-sink-s3-connector-5d56fbb477-224cz",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-pg-s3-connector-sink-s3-connector-5d56fbb477",
                        "uid": "e1448f78-dd2a-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "746796",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-pg-s3-connector-sink-s3-connector-5d56fbb477-224cz",
                "uid": "29f84ae4-dd2e-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/etc/confluent/docker/run"
                        ],
                        "env": [
                            {
                                "name": "CONNECT_PLUGIN_PATH",
                                "value": "/usr/share/java"
                            },
                            {
                                "name": "CONNECT_BOOTSTRAP_SERVERS",
                                "value": "kafka-broker01.staging.aws.ppcn.us:9092,kafka-broker02.staging.aws.ppcn.us:9092,kafka-broker03.staging.aws.ppcn.us:9092,kafka-broker04.staging.aws.ppcn.us:9092,kafka-broker05.staging.aws.ppcn.us:9092"
                            },
                            {
                                "name": "CONNECT_ZOOKEEPER_CONNECT",
                                "value": "kafka-broker01.staging.aws.ppcn.us:2181,kafka-broker02.staging.aws.ppcn.us:2181,kafka-broker03.staging.aws.ppcn.us:2181,kafka-broker04.staging.aws.ppcn.us:2181,kafka-broker05.staging.aws.ppcn.us:2181"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER",
                                "value": "io.confluent.connect.avro.AvroConverter"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER",
                                "value": "io.confluent.connect.avro.AvroConverter"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE",
                                "value": "true"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE",
                                "value": "true"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_TOPIC",
                                "value": "pg-s3-configs"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_TOPIC",
                                "value": "pg-s3-offsets"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_TOPIC",
                                "value": "pg-s3-status"
                            },
                            {
                                "name": "CONNECT_INTERNAL_KEY_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_INTERNAL_VALUE_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-pg-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-pg-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_GROUP_ID",
                                "value": "pg-s3-sink"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_FLUSH_INTERVAL_MS",
                                "value": "10000"
                            },
                            {
                                "name": "CONNECT_REST_ADVERTISED_HOST_NAME",
                                "value": "staging-pg-s3-connector-sink-s3-connector"
                            },
                            {
                                "name": "CONNECT_LOG4J_ROOT_LOGLEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "CONNECT_CONSUMER_RETRIES",
                                "value": "10"
                            },
                            {
                                "name": "CONNECT_CONSUMER_RETRY_OFF_MS",
                                "value": "10000"
                            },
                            {
                                "name": "KAFKA_HEAP_OPTS",
                                "value": "-Xmx8G"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-s3-connector:master",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8083,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 300,
                            "periodSeconds": 600,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "sink-s3-connector",
                        "ports": [
                            {
                                "containerPort": 8083,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8083,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 20,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "8Gi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-52-16.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:58:17Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:59:56Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:58:17Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://0be6028a1e9dab1b96999a2dbe772c75f173606a9a0e3f2dba0c7e2e9396517b",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-s3-connector:master",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-s3-connector@sha256:3d25fa1ff398652a80250aa3da3284dacd57b20ef1001ac4a33db7d621894671",
                        "lastState": {},
                        "name": "sink-s3-connector",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-31T16:58:50Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.52.16",
                "phase": "Running",
                "podIP": "100.96.16.4",
                "qosClass": "Burstable",
                "startTime": "2018-10-31T16:58:17Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-05T20:12:32Z",
                "generateName": "staging-pg-s3-connector-sink-s3-connector-5d56fbb477-",
                "labels": {
                    "app": "sink-s3-connector",
                    "pod-template-hash": "1812966033",
                    "release": "staging-pg-s3-connector"
                },
                "name": "staging-pg-s3-connector-sink-s3-connector-5d56fbb477-sw95m",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-pg-s3-connector-sink-s3-connector-5d56fbb477",
                        "uid": "e1448f78-dd2a-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "1899526",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-pg-s3-connector-sink-s3-connector-5d56fbb477-sw95m",
                "uid": "20a3415b-e137-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/etc/confluent/docker/run"
                        ],
                        "env": [
                            {
                                "name": "CONNECT_PLUGIN_PATH",
                                "value": "/usr/share/java"
                            },
                            {
                                "name": "CONNECT_BOOTSTRAP_SERVERS",
                                "value": "kafka-broker01.staging.aws.ppcn.us:9092,kafka-broker02.staging.aws.ppcn.us:9092,kafka-broker03.staging.aws.ppcn.us:9092,kafka-broker04.staging.aws.ppcn.us:9092,kafka-broker05.staging.aws.ppcn.us:9092"
                            },
                            {
                                "name": "CONNECT_ZOOKEEPER_CONNECT",
                                "value": "kafka-broker01.staging.aws.ppcn.us:2181,kafka-broker02.staging.aws.ppcn.us:2181,kafka-broker03.staging.aws.ppcn.us:2181,kafka-broker04.staging.aws.ppcn.us:2181,kafka-broker05.staging.aws.ppcn.us:2181"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER",
                                "value": "io.confluent.connect.avro.AvroConverter"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER",
                                "value": "io.confluent.connect.avro.AvroConverter"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE",
                                "value": "true"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE",
                                "value": "true"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_TOPIC",
                                "value": "pg-s3-configs"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_TOPIC",
                                "value": "pg-s3-offsets"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_TOPIC",
                                "value": "pg-s3-status"
                            },
                            {
                                "name": "CONNECT_INTERNAL_KEY_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_INTERNAL_VALUE_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-pg-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-pg-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_GROUP_ID",
                                "value": "pg-s3-sink"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_FLUSH_INTERVAL_MS",
                                "value": "10000"
                            },
                            {
                                "name": "CONNECT_REST_ADVERTISED_HOST_NAME",
                                "value": "staging-pg-s3-connector-sink-s3-connector"
                            },
                            {
                                "name": "CONNECT_LOG4J_ROOT_LOGLEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "CONNECT_CONSUMER_RETRIES",
                                "value": "10"
                            },
                            {
                                "name": "CONNECT_CONSUMER_RETRY_OFF_MS",
                                "value": "10000"
                            },
                            {
                                "name": "KAFKA_HEAP_OPTS",
                                "value": "-Xmx8G"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-s3-connector:master",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8083,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 300,
                            "periodSeconds": 600,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "sink-s3-connector",
                        "ports": [
                            {
                                "containerPort": 8083,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8083,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 20,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "8Gi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-107-159.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T20:12:32Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T20:14:05Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T20:12:32Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://2d0e2681bb77d9247a19495d89b57372f1f3b6dc53198033955f041ebc6d6209",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-s3-connector:master",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-s3-connector@sha256:3d25fa1ff398652a80250aa3da3284dacd57b20ef1001ac4a33db7d621894671",
                        "lastState": {},
                        "name": "sink-s3-connector",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-05T20:12:55Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.107.159",
                "phase": "Running",
                "podIP": "100.96.20.9",
                "qosClass": "Burstable",
                "startTime": "2018-11-05T20:12:32Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-05T20:12:32Z",
                "generateName": "staging-pg-schema-registry-schema-registry-6dff85c489-",
                "labels": {
                    "app": "schema-registry",
                    "pod-template-hash": "2899417045",
                    "release": "staging-pg-schema-registry"
                },
                "name": "staging-pg-schema-registry-schema-registry-6dff85c489-dkcgd",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-pg-schema-registry-schema-registry-6dff85c489",
                        "uid": "19d8c711-dcee-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "1899292",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-pg-schema-registry-schema-registry-6dff85c489-dkcgd",
                "uid": "20a89608-e137-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "SCHEMA_REGISTRY_HOST_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL",
                                "value": "kafka-broker01.staging.aws.ppcn.us:2181,kafka-broker02.staging.aws.ppcn.us:2181,kafka-broker03.staging.aws.ppcn.us:2181,kafka-broker04.staging.aws.ppcn.us:2181,kafka-broker05.staging.aws.ppcn.us:2181/"
                            },
                            {
                                "name": "SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN",
                                "value": "*"
                            },
                            {
                                "name": "SCHEMA_REGISTRY_KAFKASTORE_TOPIC",
                                "value": "_pgschemas"
                            },
                            {
                                "name": "SCHEMA_REGISTRY_SCHEMA_REGISTRY_GROUP_ID",
                                "value": "pg_schema-registry"
                            },
                            {
                                "name": "SCHEMA_REGISTRY_SCHEMA_REGISTRY_ZK_NAMESPACE",
                                "value": "pg_schema_registry"
                            }
                        ],
                        "image": "confluentinc/cp-schema-registry:4.1.2",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "schema-registry",
                        "ports": [
                            {
                                "containerPort": 8081,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-77-93.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T20:12:32Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T20:12:43Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T20:12:32Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://a61042021f57063aa2fdc9545d7a9943f9e7632c4e35961999c9b58c64296c30",
                        "image": "confluentinc/cp-schema-registry:4.1.2",
                        "imageID": "docker-pullable://confluentinc/cp-schema-registry@sha256:485050cab2cff291b7707f5c387a07678d8873a487bf6cee17dfd35977795451",
                        "lastState": {},
                        "name": "schema-registry",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-05T20:12:42Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.77.93",
                "phase": "Running",
                "podIP": "100.96.18.10",
                "qosClass": "BestEffort",
                "startTime": "2018-11-05T20:12:32Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-10-31T16:58:19Z",
                "generateName": "staging-pg-schema-registry-schema-registry-6dff85c489-",
                "labels": {
                    "app": "schema-registry",
                    "pod-template-hash": "2899417045",
                    "release": "staging-pg-schema-registry"
                },
                "name": "staging-pg-schema-registry-schema-registry-6dff85c489-kqc78",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-pg-schema-registry-schema-registry-6dff85c489",
                        "uid": "19d8c711-dcee-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "746593",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-pg-schema-registry-schema-registry-6dff85c489-kqc78",
                "uid": "2acd4c17-dd2e-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "SCHEMA_REGISTRY_HOST_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL",
                                "value": "kafka-broker01.staging.aws.ppcn.us:2181,kafka-broker02.staging.aws.ppcn.us:2181,kafka-broker03.staging.aws.ppcn.us:2181,kafka-broker04.staging.aws.ppcn.us:2181,kafka-broker05.staging.aws.ppcn.us:2181/"
                            },
                            {
                                "name": "SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN",
                                "value": "*"
                            },
                            {
                                "name": "SCHEMA_REGISTRY_KAFKASTORE_TOPIC",
                                "value": "_pgschemas"
                            },
                            {
                                "name": "SCHEMA_REGISTRY_SCHEMA_REGISTRY_GROUP_ID",
                                "value": "pg_schema-registry"
                            },
                            {
                                "name": "SCHEMA_REGISTRY_SCHEMA_REGISTRY_ZK_NAMESPACE",
                                "value": "pg_schema_registry"
                            }
                        ],
                        "image": "confluentinc/cp-schema-registry:4.1.2",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "schema-registry",
                        "ports": [
                            {
                                "containerPort": 8081,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-107-159.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:58:19Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:58:56Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:58:19Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://dce38eeb2b62fd1d9a13328b00317507f8ae4fa20cec906c390f6b7a221fcc61",
                        "image": "confluentinc/cp-schema-registry:4.1.2",
                        "imageID": "docker-pullable://confluentinc/cp-schema-registry@sha256:485050cab2cff291b7707f5c387a07678d8873a487bf6cee17dfd35977795451",
                        "lastState": {},
                        "name": "schema-registry",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-31T16:58:56Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.107.159",
                "phase": "Running",
                "podIP": "100.96.20.5",
                "qosClass": "BestEffort",
                "startTime": "2018-10-31T16:58:19Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-10-31T16:58:18Z",
                "generateName": "staging-sink-mysql-connector-sink-postgresql-connector-744c86575b-",
                "labels": {
                    "app": "sink-postgresql-connector",
                    "pod-template-hash": "3007421316",
                    "release": "staging-sink-mysql-connector"
                },
                "name": "staging-sink-mysql-connector-sink-postgresql-connector-7445ntxr",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-sink-mysql-connector-sink-postgresql-connector-744c86575b",
                        "uid": "b9c2cbbb-dd2a-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "746722",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-sink-mysql-connector-sink-postgresql-connector-7445ntxr",
                "uid": "2a2cd5f0-dd2e-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/bin/sh",
                            "-ec",
                            "cp -af /usr/share/java/kafka-connect-jdbc/* /etc/kafka-connect/jars/\ncp -af /usr/share/java/kafka-connect-debezium/debezium-connector-postgres/*.jar /etc/kafka-connect/jars/\nexec /etc/confluent/docker/run\n"
                        ],
                        "env": [
                            {
                                "name": "CONNECT_PLUGIN_PATH",
                                "value": "/etc/kafka-connect/jars"
                            },
                            {
                                "name": "CONNECT_BOOTSTRAP_SERVERS",
                                "value": "kafka-broker01.staging.aws.ppcn.us:9092,kafka-broker02.staging.aws.ppcn.us:9092,kafka-broker03.staging.aws.ppcn.us:9092,kafka-broker04.staging.aws.ppcn.us:9092,kafka-broker05.staging.aws.ppcn.us:9092"
                            },
                            {
                                "name": "CONNECT_ZOOKEEPER_CONNECT",
                                "value": "kafka-broker01.staging.aws.ppcn.us:2181,kafka-broker02.staging.aws.ppcn.us:2181,kafka-broker03.staging.aws.ppcn.us:2181,kafka-broker04.staging.aws.ppcn.us:2181,kafka-broker05.staging.aws.ppcn.us:2181"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER",
                                "value": "io.confluent.connect.avro.AvroConverter"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER",
                                "value": "io.confluent.connect.avro.AvroConverter"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_TOPIC",
                                "value": "mysql-sink-configs"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_TOPIC",
                                "value": "mysql-sink-offsets"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_TOPIC",
                                "value": "mysql-sink-status"
                            },
                            {
                                "name": "CONNECT_INTERNAL_KEY_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_INTERNAL_VALUE_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-mysql-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-mysql-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_GROUP_ID",
                                "value": "mysql-sink"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_FLUSH_INTERVAL_MS",
                                "value": "10000"
                            },
                            {
                                "name": "CONNECT_REST_ADVERTISED_HOST_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE",
                                "value": "true"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE",
                                "value": "true"
                            },
                            {
                                "name": "CONNECT_LOG4J_ROOT_LOGLEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "CONNECT_CONSUMER_RETRIES",
                                "value": "10"
                            },
                            {
                                "name": "CONNECT_CONSUMER_RETRY_OFF_MS",
                                "value": "10000"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-postgresql-connector:master",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8083,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 300,
                            "periodSeconds": 600,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "sink-postgresql-connector",
                        "ports": [
                            {
                                "containerPort": 8083,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8083,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-99-218.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:58:18Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:59:32Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:58:18Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://9a7684d6450d4601331752ab134f8d6c116e85fa16217a57dd1d2caad9158f23",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-postgresql-connector:master",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-postgresql-connector@sha256:9e87dcf58231cb8b971d36d527861dfbf6d734bde0c64ef07ecaa7974144a8aa",
                        "lastState": {},
                        "name": "sink-postgresql-connector",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-31T16:58:52Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.99.218",
                "phase": "Running",
                "podIP": "100.96.19.6",
                "qosClass": "BestEffort",
                "startTime": "2018-10-31T16:58:18Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-05T20:12:32Z",
                "generateName": "staging-sink-mysql-connector-sink-postgresql-connector-744c86575b-",
                "labels": {
                    "app": "sink-postgresql-connector",
                    "pod-template-hash": "3007421316",
                    "release": "staging-sink-mysql-connector"
                },
                "name": "staging-sink-mysql-connector-sink-postgresql-connector-744rkvqg",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-sink-mysql-connector-sink-postgresql-connector-744c86575b",
                        "uid": "b9c2cbbb-dd2a-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "1899372",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-sink-mysql-connector-sink-postgresql-connector-744rkvqg",
                "uid": "20b11f57-e137-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/bin/sh",
                            "-ec",
                            "cp -af /usr/share/java/kafka-connect-jdbc/* /etc/kafka-connect/jars/\ncp -af /usr/share/java/kafka-connect-debezium/debezium-connector-postgres/*.jar /etc/kafka-connect/jars/\nexec /etc/confluent/docker/run\n"
                        ],
                        "env": [
                            {
                                "name": "CONNECT_PLUGIN_PATH",
                                "value": "/etc/kafka-connect/jars"
                            },
                            {
                                "name": "CONNECT_BOOTSTRAP_SERVERS",
                                "value": "kafka-broker01.staging.aws.ppcn.us:9092,kafka-broker02.staging.aws.ppcn.us:9092,kafka-broker03.staging.aws.ppcn.us:9092,kafka-broker04.staging.aws.ppcn.us:9092,kafka-broker05.staging.aws.ppcn.us:9092"
                            },
                            {
                                "name": "CONNECT_ZOOKEEPER_CONNECT",
                                "value": "kafka-broker01.staging.aws.ppcn.us:2181,kafka-broker02.staging.aws.ppcn.us:2181,kafka-broker03.staging.aws.ppcn.us:2181,kafka-broker04.staging.aws.ppcn.us:2181,kafka-broker05.staging.aws.ppcn.us:2181"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER",
                                "value": "io.confluent.connect.avro.AvroConverter"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER",
                                "value": "io.confluent.connect.avro.AvroConverter"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_TOPIC",
                                "value": "mysql-sink-configs"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_TOPIC",
                                "value": "mysql-sink-offsets"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_TOPIC",
                                "value": "mysql-sink-status"
                            },
                            {
                                "name": "CONNECT_INTERNAL_KEY_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_INTERNAL_VALUE_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-mysql-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-mysql-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_GROUP_ID",
                                "value": "mysql-sink"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_FLUSH_INTERVAL_MS",
                                "value": "10000"
                            },
                            {
                                "name": "CONNECT_REST_ADVERTISED_HOST_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE",
                                "value": "true"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE",
                                "value": "true"
                            },
                            {
                                "name": "CONNECT_LOG4J_ROOT_LOGLEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "CONNECT_CONSUMER_RETRIES",
                                "value": "10"
                            },
                            {
                                "name": "CONNECT_CONSUMER_RETRY_OFF_MS",
                                "value": "10000"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-postgresql-connector:master",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8083,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 300,
                            "periodSeconds": 600,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "sink-postgresql-connector",
                        "ports": [
                            {
                                "containerPort": 8083,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8083,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-52-16.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T20:12:32Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T20:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T20:12:32Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://7b666d45ae60746117ea7f8a326ef3113734cdbe825b8c384622fada9f12191c",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-postgresql-connector:master",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-postgresql-connector@sha256:9e87dcf58231cb8b971d36d527861dfbf6d734bde0c64ef07ecaa7974144a8aa",
                        "lastState": {},
                        "name": "sink-postgresql-connector",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-05T20:12:45Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.52.16",
                "phase": "Running",
                "podIP": "100.96.16.9",
                "qosClass": "BestEffort",
                "startTime": "2018-11-05T20:12:32Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-10-31T16:58:17Z",
                "generateName": "staging-sink-postgresql-connector-sink-postgresql-connector-8578dc9b6d-",
                "labels": {
                    "app": "sink-postgresql-connector",
                    "pod-template-hash": "4134875628",
                    "release": "staging-sink-postgresql-connector"
                },
                "name": "staging-sink-postgresql-connector-sink-postgresql-connectoqdjcq",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-sink-postgresql-connector-sink-postgresql-connector-8578dc9b6d",
                        "uid": "c45d1840-dd2a-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "746699",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-sink-postgresql-connector-sink-postgresql-connectoqdjcq",
                "uid": "2a150a38-dd2e-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/bin/sh",
                            "-ec",
                            "cp -af /usr/share/java/kafka-connect-jdbc/* /etc/kafka-connect/jars/\ncp -af /usr/share/java/kafka-connect-debezium/debezium-connector-postgres/*.jar /etc/kafka-connect/jars/\nexec /etc/confluent/docker/run\n"
                        ],
                        "env": [
                            {
                                "name": "CONNECT_PLUGIN_PATH",
                                "value": "/etc/kafka-connect/jars"
                            },
                            {
                                "name": "CONNECT_BOOTSTRAP_SERVERS",
                                "value": "kafka-broker01.staging.aws.ppcn.us:9092,kafka-broker02.staging.aws.ppcn.us:9092,kafka-broker03.staging.aws.ppcn.us:9092,kafka-broker04.staging.aws.ppcn.us:9092,kafka-broker05.staging.aws.ppcn.us:9092"
                            },
                            {
                                "name": "CONNECT_ZOOKEEPER_CONNECT",
                                "value": "kafka-broker01.staging.aws.ppcn.us:2181,kafka-broker02.staging.aws.ppcn.us:2181,kafka-broker03.staging.aws.ppcn.us:2181,kafka-broker04.staging.aws.ppcn.us:2181,kafka-broker05.staging.aws.ppcn.us:2181"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER",
                                "value": "io.confluent.connect.avro.AvroConverter"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER",
                                "value": "io.confluent.connect.avro.AvroConverter"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_TOPIC",
                                "value": "pg-sink-configs"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_TOPIC",
                                "value": "pg-sink-offsets"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_TOPIC",
                                "value": "pg-sink-status"
                            },
                            {
                                "name": "CONNECT_INTERNAL_KEY_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_INTERNAL_VALUE_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-pg-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-pg-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_GROUP_ID",
                                "value": "pg-sink"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_FLUSH_INTERVAL_MS",
                                "value": "10000"
                            },
                            {
                                "name": "CONNECT_REST_ADVERTISED_HOST_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE",
                                "value": "true"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE",
                                "value": "true"
                            },
                            {
                                "name": "CONNECT_LOG4J_ROOT_LOGLEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "CONNECT_CONSUMER_RETRIES",
                                "value": "10"
                            },
                            {
                                "name": "CONNECT_CONSUMER_RETRY_OFF_MS",
                                "value": "10000"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-postgresql-connector:master",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8083,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 300,
                            "periodSeconds": 600,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "sink-postgresql-connector",
                        "ports": [
                            {
                                "containerPort": 8083,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8083,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-99-218.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:58:17Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:59:25Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:58:17Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5a1ce9d307be3132d5ce5311532e1b4c281af565cf469d337303817f26c60213",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-postgresql-connector:master",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-postgresql-connector@sha256:9e87dcf58231cb8b971d36d527861dfbf6d734bde0c64ef07ecaa7974144a8aa",
                        "lastState": {},
                        "name": "sink-postgresql-connector",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-31T16:58:52Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.99.218",
                "phase": "Running",
                "podIP": "100.96.19.5",
                "qosClass": "BestEffort",
                "startTime": "2018-10-31T16:58:17Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-11-05T20:12:32Z",
                "generateName": "staging-sink-postgresql-connector-sink-postgresql-connector-8578dc9b6d-",
                "labels": {
                    "app": "sink-postgresql-connector",
                    "pod-template-hash": "4134875628",
                    "release": "staging-sink-postgresql-connector"
                },
                "name": "staging-sink-postgresql-connector-sink-postgresql-connectoshdvc",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-sink-postgresql-connector-sink-postgresql-connector-8578dc9b6d",
                        "uid": "c45d1840-dd2a-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "1899362",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-sink-postgresql-connector-sink-postgresql-connectoshdvc",
                "uid": "20ba6846-e137-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/bin/sh",
                            "-ec",
                            "cp -af /usr/share/java/kafka-connect-jdbc/* /etc/kafka-connect/jars/\ncp -af /usr/share/java/kafka-connect-debezium/debezium-connector-postgres/*.jar /etc/kafka-connect/jars/\nexec /etc/confluent/docker/run\n"
                        ],
                        "env": [
                            {
                                "name": "CONNECT_PLUGIN_PATH",
                                "value": "/etc/kafka-connect/jars"
                            },
                            {
                                "name": "CONNECT_BOOTSTRAP_SERVERS",
                                "value": "kafka-broker01.staging.aws.ppcn.us:9092,kafka-broker02.staging.aws.ppcn.us:9092,kafka-broker03.staging.aws.ppcn.us:9092,kafka-broker04.staging.aws.ppcn.us:9092,kafka-broker05.staging.aws.ppcn.us:9092"
                            },
                            {
                                "name": "CONNECT_ZOOKEEPER_CONNECT",
                                "value": "kafka-broker01.staging.aws.ppcn.us:2181,kafka-broker02.staging.aws.ppcn.us:2181,kafka-broker03.staging.aws.ppcn.us:2181,kafka-broker04.staging.aws.ppcn.us:2181,kafka-broker05.staging.aws.ppcn.us:2181"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER",
                                "value": "io.confluent.connect.avro.AvroConverter"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER",
                                "value": "io.confluent.connect.avro.AvroConverter"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_TOPIC",
                                "value": "pg-sink-configs"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_TOPIC",
                                "value": "pg-sink-offsets"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_TOPIC",
                                "value": "pg-sink-status"
                            },
                            {
                                "name": "CONNECT_INTERNAL_KEY_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_INTERNAL_VALUE_CONVERTER",
                                "value": "org.apache.kafka.connect.json.JsonConverter"
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-pg-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL",
                                "value": "http://staging-pg-schema-registry-schema-registry:8081"
                            },
                            {
                                "name": "CONNECT_GROUP_ID",
                                "value": "pg-sink"
                            },
                            {
                                "name": "CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_STATUS_STORAGE_REPLICATION_FACTOR",
                                "value": "3"
                            },
                            {
                                "name": "CONNECT_OFFSET_FLUSH_INTERVAL_MS",
                                "value": "10000"
                            },
                            {
                                "name": "CONNECT_REST_ADVERTISED_HOST_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE",
                                "value": "true"
                            },
                            {
                                "name": "CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE",
                                "value": "true"
                            },
                            {
                                "name": "CONNECT_LOG4J_ROOT_LOGLEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "CONNECT_CONSUMER_RETRIES",
                                "value": "10"
                            },
                            {
                                "name": "CONNECT_CONSUMER_RETRY_OFF_MS",
                                "value": "10000"
                            }
                        ],
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-postgresql-connector:master",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8083,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 300,
                            "periodSeconds": 600,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "sink-postgresql-connector",
                        "ports": [
                            {
                                "containerPort": 8083,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8083,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-73-102.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T20:12:32Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T20:13:06Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-11-05T20:12:32Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://f564bb2d7d4a6c3bb8a226f331083a650624024a01811c22e6d09dbac77aa360",
                        "image": "721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-postgresql-connector:master",
                        "imageID": "docker-pullable://721167970490.dkr.ecr.us-east-1.amazonaws.com/datalake/sink-postgresql-connector@sha256:9e87dcf58231cb8b971d36d527861dfbf6d734bde0c64ef07ecaa7974144a8aa",
                        "lastState": {},
                        "name": "sink-postgresql-connector",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-11-05T20:12:44Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.73.102",
                "phase": "Running",
                "podIP": "100.96.11.26",
                "qosClass": "BestEffort",
                "startTime": "2018-11-05T20:12:32Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-10-29T09:52:13Z",
                "generateName": "staging-swagger-ui-swagger-ui-75b4fdbb56-",
                "labels": {
                    "app": "staging-swagger-ui-swagger-ui",
                    "pod-template-hash": "3160986612"
                },
                "name": "staging-swagger-ui-swagger-ui-75b4fdbb56-rpnvc",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-swagger-ui-swagger-ui-75b4fdbb56",
                        "uid": "ec1fbed1-db15-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "269674",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-swagger-ui-swagger-ui-75b4fdbb56-rpnvc",
                "uid": "4fdabf12-db60-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "API_URL",
                                "value": "https://stg.api.peopleconnect.us/commerce/api-docs"
                            }
                        ],
                        "image": "swaggerapi/swagger-ui:latest",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "swagger-ui",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "128Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "128Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-52-0.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T09:52:13Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T13:36:21Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T09:52:13Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://96eaefa6bfcd347e00ce65b79eaf192affd989269556712c34e979c6700eae11",
                        "image": "swaggerapi/swagger-ui:latest",
                        "imageID": "docker-pullable://swaggerapi/swagger-ui@sha256:faebb0b20ee5553140c001a13ee3f56ee4be52a801e8eb7c5c25b1657c181521",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://ecdedb2cb366ba0856e80ef838dc872466be2ca526bbd91e9bbbf6ea1630483c",
                                "exitCode": 128,
                                "finishedAt": "2018-10-29T13:36:06Z",
                                "message": "cannot join network of a non running container: 0c16344395560537785ab45f1251694565c5b1eaa25a441f36b64982d5693370",
                                "reason": "ContainerCannotRun",
                                "startedAt": "2018-10-29T13:36:06Z"
                            }
                        },
                        "name": "swagger-ui",
                        "ready": true,
                        "restartCount": 2,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-29T13:36:18Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.52.0",
                "phase": "Running",
                "podIP": "100.96.10.16",
                "qosClass": "Guaranteed",
                "startTime": "2018-10-29T09:52:13Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-10-31T16:58:17Z",
                "generateName": "staging-swagger-ui-swagger-ui-75b4fdbb56-",
                "labels": {
                    "app": "staging-swagger-ui-swagger-ui",
                    "pod-template-hash": "3160986612"
                },
                "name": "staging-swagger-ui-swagger-ui-75b4fdbb56-zf8x9",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "staging-swagger-ui-swagger-ui-75b4fdbb56",
                        "uid": "ec1fbed1-db15-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "746530",
                "selfLink": "/api/v1/namespaces/staging/pods/staging-swagger-ui-swagger-ui-75b4fdbb56-zf8x9",
                "uid": "2a209f0c-dd2e-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "API_URL",
                                "value": "https://stg.api.peopleconnect.us/commerce/api-docs"
                            }
                        ],
                        "image": "swaggerapi/swagger-ui:latest",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "swagger-ui",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "128Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "128Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-thwwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-77-93.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-thwwc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-thwwc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:58:18Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:58:38Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-31T16:58:17Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://a35684b11f696e4e464d63594c41f83964ec7e2b9efa7e4e234da97fffdeff29",
                        "image": "swaggerapi/swagger-ui:latest",
                        "imageID": "docker-pullable://swaggerapi/swagger-ui@sha256:faebb0b20ee5553140c001a13ee3f56ee4be52a801e8eb7c5c25b1657c181521",
                        "lastState": {},
                        "name": "swagger-ui",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-31T16:58:30Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.77.93",
                "phase": "Running",
                "podIP": "100.96.18.4",
                "qosClass": "Guaranteed",
                "startTime": "2018-10-31T16:58:18Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2018-10-28T09:30:15Z",
                "generateName": "tiller-deploy-7d8cbbd9cd-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "3847668578"
                },
                "name": "tiller-deploy-7d8cbbd9cd-b8mj4",
                "namespace": "staging",
                "ownerReferences": [
                    {
                        "apiVersion": "extensions/v1beta1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-7d8cbbd9cd",
                        "uid": "13703e1c-da94-11e8-b1e9-0e67a14d9b14"
                    }
                ],
                "resourceVersion": "269654",
                "selfLink": "/api/v1/namespaces/staging/pods/tiller-deploy-7d8cbbd9cd-b8mj4",
                "uid": "13731c84-da94-11e8-b1e9-0e67a14d9b14"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "staging"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "0"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.7.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "staging-token-nncbf",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "ip-10-122-52-0.ec2.internal",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "staging",
                "serviceAccountName": "staging",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "staging-token-nncbf",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "staging-token-nncbf"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-28T09:30:15Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-29T13:36:14Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2018-10-28T09:30:15Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://1bce6f57d6b72a50c91856e12682f06817507f18a371e3692da100fc7bc08d6c",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.7.0",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:1becf867016f6e7652908518729e140845107c5344afc237718e3ed3b6ca63c7",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://532194d003b4565f8c158a375d436271f1898b58543c06581c63fae2ff8f190f",
                                "exitCode": 128,
                                "finishedAt": "2018-10-29T13:36:05Z",
                                "message": "cannot join network of a non running container: eb91bb40ea966a55e99cdf621abedb1ba67b093d1c20597bcf9788361ab91b5f",
                                "reason": "ContainerCannotRun",
                                "startedAt": "2018-10-29T13:36:05Z"
                            }
                        },
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 2,
                        "state": {
                            "running": {
                                "startedAt": "2018-10-29T13:36:07Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.122.52.0",
                "phase": "Running",
                "podIP": "100.96.10.15",
                "qosClass": "BestEffort",
                "startTime": "2018-10-28T09:30:15Z"
            }
        }
    ],
    "kind": "List",
    "metadata": {
        "resourceVersion": "",
        "selfLink": ""
    }
}
